FUNCTION	| ARITY	| COMPRESSION 	| USES	| BODY
=============================================
fn_0  		| 3		| 1.19        	| 2099	| (#2 (ifElse (elem (__str__ #1) dir) #1 None) (ifElse (elem (__str__ #0) dir) #0 None))
                                                Results from the way Flatliner represents for loops.  
---------------------------------------------
fn_1  		| 2		| 1.04        	| 398 	| (__dict__ (__tuple__ (__str__ input) #1) (__tuple__ (__str__ output) #0))
                                                Defines the input and output pair.
                                                In python: {("input", #1), ("output", #2)}
---------------------------------------------
fn_2  		| 4		| 1.02        	| 120 	| ((lam (lam ((lam (#3 (ifElse (elem (__str__ #2) dir) #2 None))) (next $1 #1)))) __list__ (iter #0))
                                                Result from the way Flatliner represents for loops.
---------------------------------------------
fn_3  		| 2		| 1.02        	| 252 	| (lam (lam (lam (lam ((lam (#1 $4 $3 $2 $1)) (x1 #0))))))
                                                Very abstract expression applying four input arguments to something (#1), and calling the result with (x1 #0)
                                                I suspect that x1 is a variable name that has not been converted appropriately
---------------------------------------------
fn_4  		| 4		| 1.02        	| 938 	| (unifint #3 #2 (__tuple__ #1 #0))
                                                High-level usage of the primitive unifint.
                                                In python: unifint(#3, #2, (#1, #0))
                                                Involved in specifying the dimensions of the grid.
---------------------------------------------
fn_5  		| 4		| 1.01        	| 192 	| (getItem (__listComp__ #3 (__tuple__ #2 #1) (__list__ #0)) 0)
                                                [#3 for (#2, #1) in [#0]][0]
                                                High-level usage of list-comprehension (and selecting the first element of it).
---------------------------------------------
fn_6  		| 1		| 1.01        	| 709 	| (sub #0 1)
---------------------------------------------
fn_7  		| 0		| 1.01        	| 215 	| (interval 0 10 1)
                                                Primitive used to create a range between 0 and 10 with step-size 1.
                                                Definition: range(start, stop, step)
                                                In this case, range(0, 10, 1)
---------------------------------------------
fn_8  		| 3		| 1.01        	| 179 	| (lam ((lam (#2 $0)) (lam (#1 (lam (#0 $1 (__star__ $0)))))))
                                                Result from how Flatliner represents execution of programs.
---------------------------------------------
fn_9  		| 3		| 1.01        	| 167 	| ((lam (lam ((lam #2) (next $1 #1)))) __list__ (iter #0))
                                                Looks like a result of Flatliner's representation of loops again. 
---------------------------------------------
fn_10 		| 4		| 1.01        	| 61  	| (sfilter #3 (lam (andOp (#1 (getItem $0 0) #2) (#1 (getItem $0 1) #0))))
                                                sfilter is a primitive that filters containers which satisfy a certain condition.
                                                This is a high-level use of that filter with an `and` condition.

                                                In this case #3 is the container, and (lam (andOp (#1 (getItem $0 0) #2) (#1 (getItem $0 1) #0))) the condition.
                                                andOp is just python's `and`.
                                                andOp (#1 (getItem $0 0) #2) (#1 (getItem $0 1) #0) in python is:
                                                    #1($0[0], #2) and #1($0[0], #0)
                                                    so the condition is checking that the input function #1 is true for some input arguments.
---------------------------------------------
fn_11 		| 2		| 1.01        	| 67  	| (lam (lam (lam (lam (lam (lam (lam (fn_3 #1 (#0 $6 $5 $4 $3 $2 $1 $0)))))))))
                                                High-level usage of the already high-level abstraction fn_3.
                                                Interesting but hard to make sense of. 
---------------------------------------------
fn_12 		| 1		| 1.01        	| 447 	| (add #0 1)
---------------------------------------------
fn_13 		| 3		| 1.01        	| 413 	| (canvas #2 (__tuple__ #1 #0))
                                                High-level usage of primitve canvas, which is used to construct grids.
                                                #2 specifies a integer value and the tuple (#1, #0) represents the dimensions (x-axis, y-axis).
                                                The output is a grid of the dimensions specified, filled with the value of #2.
---------------------------------------------
fn_14 		| 4		| 1.01        	| 45  	| (frozenset (__set__ (__tuple__ #3 #1) (__tuple__ (fn_6 (add #3 #2)) (fn_6 (add #1 #0)))))
                                                frozenset is a built-in python primitive which makes the input iterable immutable.
                                                It's a bit concerning that add is re-written using its abstraction fn_12.
                                                frozenset( { (#3, #1), ((#3+#2) - , (#1+#0) -) } )
---------------------------------------------
fn_15 		| 4		| 1.01        	| 39  	| (getItem (__list__ (add_M #1 (choice (totuple (bitAnd (sub #3 #1) (mapply #2 #1))))) #0) -1)
---------------------------------------------
fn_16 		| 0		| 1.01        	| 341 	| (fn_4 30)
---------------------------------------------
fn_17 		| 1		| 1.01        	| 31  	| ((lam ((lam ((lam (fn_1 $0 $1)) (#0 $0))) (#0 $0))) (choice (__tuple__ identity rot90 rot180 rot270)))
---------------------------------------------
fn_18 		| 3		| 1.01        	| 28  	| (ifElse (choice (__tuple__ True False)) ((lam ((lam (fn_1 $0 $1)) (dmirror $0))) (dmirror #2)) (fn_1 #1 #0))
---------------------------------------------
fn_19 		| 1		| 1.01        	| 290 	| (fn_4 #0 1)
---------------------------------------------
fn_20 		| 2		| 1.01        	| 287 	| (ifElse (isNot #1 #0))
---------------------------------------------
fn_21 		| 4		| 1.01        	| 143 	| (connect (__tuple__ #3 #2) (__tuple__ #1 #0))
---------------------------------------------
fn_22 		| 1		| 1.01        	| 95  	| (ifElse (eq (len #0) 0))
---------------------------------------------
fn_23 		| 4		| 1.01        	| 70  	| (fn_0 #3 #2 (lam (lam (lam ((lam (#1 $3 $2 $1)) (x1 (lam #0)))))))
---------------------------------------------
fn_24 		| 2		| 1.00        	| 84  	| (fill #1 linc (ofcolor #0 linc))
---------------------------------------------
fn_25 		| 4		| 1.00        	| 18  	| (lam ((lam ((lam ((lam ((lam ((lam (x23 $0 $3 $5 $2 $1 $4)) #3)) (difference $0 $2))) (fill $0 #2 $1))) (sample #1 $1))) #0))
---------------------------------------------
fn_26 		| 4		| 1.00        	| 34  	| (getItem (__listComp__ #3 (__tuple__ bgc #2 #1) (__list__ (sample #0 3))) 0)
---------------------------------------------
fn_27 		| 1		| 1.00        	| 45  	| (ifElse (elem (__str__ #0) dir) #0 None)
---------------------------------------------
fn_28 		| 4		| 1.00        	| 62  	| ((lam (#3 (fn_13 #2 #1 #0))) (fn_13 #2 #1 #0))
---------------------------------------------
fn_29 		| 2		| 1.00        	| 93  	| (lam (lam (fn_3 #1 (#0 $1 $0))))
---------------------------------------------
fn_30 		| 1		| 1.00        	| 183 	| (floordiv #0 2)
---------------------------------------------
fn_31 		| 0		| 1.00        	| 23  	| (__tuple__ identity dmirror cmirror vmirror hmirror rot90 rot180 rot270)
---------------------------------------------
fn_32 		| 4		| 1.00        	| 206 	| (#3 (#1 #2) (#1 #0))
---------------------------------------------
fn_33 		| 1		| 1.00        	| 159 	| (choice (totuple #0))
---------------------------------------------
fn_34 		| 2		| 1.00        	| 27  	| (lam (lam (lam (lam (lam (lam (fn_11 (#1 $5 $4 $3 $2 $1 $0) #0)))))))
---------------------------------------------
fn_35 		| 4		| 1.00        	| 23  	| (lam ((lam ((lam ((lam (#3 $0 $3 $2 $1)) (next #2 #1))) (#0 $0))) (#0 $0)))
---------------------------------------------
fn_36 		| 4		| 1.00        	| 27  	| (lam ((lam (#3 (choice (__tuple__ $1 (sub #2 $1))))) (fn_4 (fn_30 #2) 0 #1 #0)))
---------------------------------------------
fn_37 		| 2		| 1.00        	| 74  	| (randint 0 (sub #1 #0))
---------------------------------------------
fn_38 		| 4		| 1.00        	| 50  	| (fn_0 #3 #2 (lam (lam ((lam (#1 $2 $1)) (x1 #0)))))
---------------------------------------------
fn_39 		| 4		| 1.00        	| 6   	| (lam ((lam ((lam ((lam (#3 (choice (__tuple__ $3 (sub #2 $2))))) (choice (__tuple__ $2 (sub #2 $2))))) (fn_4 (fn_30 #2) 0 #1 #0))) (fn_4 (fn_30 #2) 0 #1 #0)))
---------------------------------------------
fn_40 		| 3		| 1.00        	| 45  	| (sub (sub #2 #0) (mapply #1 #0))
---------------------------------------------
fn_41 		| 3		| 1.00        	| 139 	| (fill #2 #1 (__set__ #0))
---------------------------------------------
fn_42 		| 1		| 1.00        	| 130 	| (lam (fn_1 $0 #0))
---------------------------------------------
fn_43 		| 1		| 1.00        	| 43  	| (tuple (__genExpr__ e e #0))
---------------------------------------------
fn_44 		| 4		| 1.00        	| 43  	| (fn_10 (sub #3 #2) lte (sub #1 #0))
---------------------------------------------
fn_45 		| 2		| 1.00        	| 79  	| (fn_21 #0 #1 #0)
---------------------------------------------
fn_46 		| 0		| 1.00        	| 117 	| (__tuple__ 1)
---------------------------------------------
fn_47 		| 4		| 1.00        	| 24  	| (ifElse (gt #3 3) (#2 (fn_24 (hmirror (vmirror #1)) #0)))
---------------------------------------------
fn_48 		| 1		| 1.00        	| 113 	| (sub #0 2)
---------------------------------------------
fn_49 		| 3		| 1.00        	| 56  	| (ifElse (andOp (lt #2 #1) #0))
---------------------------------------------
fn_50 		| 0		| 1.00        	| 110 	| (__tuple__ 0)
---------------------------------------------
fn_51 		| 2		| 1.00        	| 55  	| (getItem (__list__ #1 #0) -1)
---------------------------------------------
fn_52 		| 4		| 1.00        	| 18  	| (fn_25 (fn_19 (max 1 (floordiv (len #0) #3)) #2 #1) #0)
---------------------------------------------
fn_53 		| 0		| 1.00        	| 26  	| (ifElse (choice (__tuple__ True False)))
---------------------------------------------
fn_54 		| 1		| 1.00        	| 51  	| (fn_5 (sample #0 2))
---------------------------------------------
fn_55 		| 3		| 1.00        	| 37  	| (fn_21 (fn_6 #2) #0 #1 #0)
---------------------------------------------
fn_56 		| 1		| 1.00        	| 94  	| (fn_4 #0 2)
---------------------------------------------
fn_57 		| 1		| 1.00        	| 93  	| (fn_4 #0 0)
---------------------------------------------
fn_58 		| 0		| 1.00        	| 89  	| (fn_16 10)
---------------------------------------------
fn_59 		| 4		| 1.00        	| 4   	| (lam ((lam ((lam ((lam ((lam ((lam ((lam ((lam ((lam ((lam (#3 (add $9 $2))) (add $8 $2))) (mul $2 $0))) (mul $2 $0))) (choice (__tuple__ None -1)))) (choice (__tuple__ None -1)))) (#2 $2))) (#2 $1))) (fn_50 $1))) (fn_30 (mul #1 #0))))
---------------------------------------------
fn_60 		| 2		| 1.00        	| 86  	| (fn_13 #1 #0 bgc)
---------------------------------------------
fn_61 		| 0		| 1.00        	| 82  	| (randint 1)
---------------------------------------------
fn_62 		| 3		| 1.00        	| 104 	| ((lam (#2 (remove #1 #0))) (choice #0))
---------------------------------------------
fn_63 		| 1		| 1.00        	| 39  	| (interval 0 #0 1)
---------------------------------------------
fn_64 		| 2		| 1.00        	| 77  	| (fn_6 (add #1 #0))
---------------------------------------------
fn_65 		| 3		| 1.00        	| 20  	| (min (max 1 #2) (fn_6 (mul #1 #0)))
---------------------------------------------
fn_66 		| 4		| 1.00        	| 72  	| (fill #3 #2 (shift #1 #0))
---------------------------------------------
fn_67 		| 4		| 1.00        	| 6   	| (lam ((lam ((lam ((lam ((lam ((lam (x24 $0 $3 $5 $2 $1 $4)) #3)) (difference $0 $2))) (fill $0 #2 $1))) (sample #1 $1))) #0))
---------------------------------------------
fn_68 		| 2		| 1.00        	| 11  	| (ifElse (orOp (eq (len #1) 0) (eq (len #0) 0)))
---------------------------------------------
fn_69 		| 4		| 1.00        	| 70  	| (fn_0 #3 #2 (fn_3 (lam #1) #0))
---------------------------------------------
fn_70 		| 2		| 1.00        	| 35  	| (asindices (fn_13 #1 #0 -1))
---------------------------------------------
fn_71 		| 1		| 1.00        	| 68  	| (totuple (asindices #0))
---------------------------------------------
fn_72 		| 3		| 1.00        	| 34  	| (lam (lam (lam (#2 (#1 $2 $1 $0) #0))))
---------------------------------------------
fn_73 		| 2		| 1.00        	| 67  	| (ifElse (issubset_M #1 #0))
---------------------------------------------
fn_74 		| 3		| 1.00        	| 34  	| (fn_19 (floordiv (mul #2 #1) #0))
---------------------------------------------
fn_75 		| 2		| 1.00        	| 66  	| ((lam (#1 $0)) (fn_12 #0))
---------------------------------------------
fn_76 		| 4		| 1.00        	| 17  	| (lam ((lam ((lam (#3 $0 $1 $2)) (next #2 #1))) (#0 $0)))
---------------------------------------------
fn_77 		| 1		| 1.00        	| 62  	| (fn_9 (range #0))
---------------------------------------------
fn_78 		| 4		| 1.00        	| 31  	| (fn_15 ((lam (#3 $0 #2)) (next #1 #0)))
---------------------------------------------
fn_79 		| 2		| 1.00        	| 21  	| (fn_57 (min 9 (mul #1 #0)))
---------------------------------------------
fn_80 		| 3		| 1.00        	| 31  	| (frozenset (__set__ #2 (__tuple__ #1 #0)))
---------------------------------------------
fn_81 		| 1		| 1.00        	| 60  	| (remove #0 fn_7)
---------------------------------------------
fn_82 		| 0		| 1.00        	| 30  	| (choice (fn_46 2))
---------------------------------------------
fn_83 		| 1		| 1.00        	| 59  	| (sample (totuple #0))
---------------------------------------------
fn_84 		| 2		| 1.00        	| 20  	| (choice (__tuple__ #0 (sub #1 #0)))
---------------------------------------------
fn_85 		| 2		| 1.00        	| 20  	| ((lam ((lam (#1 0)) 0)) (mul 4 #0))
---------------------------------------------
fn_86 		| 3		| 1.00        	| 6   	| (fn_53 (fn_5 (__tuple__ #2 #1) #2 #1 #0) #0)
---------------------------------------------
fn_87 		| 3		| 1.00        	| 203 	| (lam (#2 (fill $0 #1 #0)))
---------------------------------------------
fn_88 		| 4		| 1.00        	| 2   	| (lam ((lam ((lam ((lam ((lam (fn_5 (center (ofcolor $0 2)) b a (fn_5 (center (ofcolor $0 #3)) d c ((lam ((lam ((lam (fn_42 $3 (fn_41 (__tuple__ c d) #3 $0))) (fn_41 (__tuple__ a b) 2 #2))) (fill #2 #1 (fn_45 d c a)))) (fill $1 #1 (fn_21 d a b a)))))) (x18 $2))) (choice (__tuple__ identity rot90 rot180 rot270)))) (fn_41 $1 2 $0))) #0))
---------------------------------------------
fn_89 		| 1		| 1.00        	| 53  	| (getItem #0 0)
---------------------------------------------
fn_90 		| 2		| 1.00        	| 27  	| (fn_45 #1 (fn_6 #0) 0)
---------------------------------------------
fn_91 		| 4		| 1.00        	| 18  	| (fn_0 #3 #2 (lam (lam (fn_29 (#1 $1 $0) #0))))
---------------------------------------------
fn_92 		| 0		| 1.00        	| 18  	| (fn_8 x39 x37 x38)
---------------------------------------------
fn_93 		| 2		| 1.00        	| 11  	| (lam (lam (lam (lam (lam (fn_34 #1 (#0 $4 $3 $2 $1 $0)))))))
---------------------------------------------
fn_94 		| 3		| 1.00        	| 26  	| (fn_42 #2 (replace #1 bgc #0))
---------------------------------------------
fn_95 		| 4		| 1.00        	| 426 	| ((lam (#3 (#1 #2))) (#1 #0))
---------------------------------------------
fn_96 		| 4		| 1.00        	| 49  	| (fn_22 #3 #2 (#1 (fn_33 #0)))
---------------------------------------------
fn_97 		| 1		| 1.00        	| 48  	| (fill #0 fgc)
---------------------------------------------
fn_98 		| 1		| 1.00        	| 48  	| (fn_2 (range #0))
---------------------------------------------
fn_99 		| 2		| 1.00        	| 16  	| (sub (sub #1 #0) (outbox #0))
---------------------------------------------
fn_100		| 1		| 1.00        	| 24  	| (fn_24 (hmirror (vmirror #0)))
---------------------------------------------
fn_101		| 2		| 1.00        	| 47  	| (ifElse (eq #1 #0))
---------------------------------------------
fn_102		| 2		| 1.00        	| 46  	| (fn_6 (sub #1 #0))
---------------------------------------------
fn_103		| 2		| 1.00        	| 46  	| (fn_41 (__tuple__ #1 #0))
---------------------------------------------
fn_104		| 2		| 1.00        	| 46  	| (ifElse (gt #1 #0))
---------------------------------------------
fn_105		| 4		| 1.00        	| 22  	| (fn_0 #3 #2 (lam (fn_3 (lam #1) (#0 $0))))
---------------------------------------------
fn_106		| 4		| 1.00        	| 22  	| (fn_0 #3 #2 (lam (fn_29 (#1 $0) (lam #0))))
---------------------------------------------
fn_107		| 0		| 1.00        	| 43  	| (fn_16 3)
---------------------------------------------
fn_108		| 0		| 1.00        	| 43  	| (mul 2)
---------------------------------------------
fn_109		| 1		| 1.00        	| 43  	| (fn_4 #0 3)
---------------------------------------------
fn_110		| 0		| 1.00        	| 41  	| (fn_16 5)
---------------------------------------------
fn_111		| 1		| 1.00        	| 41  	| (floordiv #0 3)
---------------------------------------------
fn_112		| 2		| 1.00        	| 41  	| (fn_30 (mul #1 #0))
---------------------------------------------
fn_113		| 3		| 1.00        	| 11  	| (max (min (fn_6 (mul #2 #1)) #0) 1)
---------------------------------------------
fn_114		| 4		| 1.00        	| 14  	| (fn_51 (#3 (next #2 #1)) (append_M #1 #0))
---------------------------------------------
fn_115		| 3		| 1.00        	| 20  	| (fn_73 #2 #0 (#1 (fn_12 #0)))
---------------------------------------------
fn_116		| 4		| 1.00        	| 14  	| (totuple (fn_10 (sub #3 #2) lt #1 #0))
---------------------------------------------
fn_117		| 4		| 1.00        	| 39  	| (fn_0 #3 #2 (fn_29 #1 (lam #0)))
---------------------------------------------
fn_118		| 1		| 1.00        	| 38  	| (add #0 2)
---------------------------------------------
fn_119		| 3		| 1.00        	| 43  	| (fn_38 (lam (lam (lam (fn_20 #2 $1 #1 #0)))))
---------------------------------------------
fn_120		| 4		| 1.00        	| 19  	| (lam ((lam (#3 $0 #2 $1)) (next #1 #0)))
---------------------------------------------
fn_121		| 1		| 1.00        	| 37  	| (__tuple__ #0 0)
---------------------------------------------
fn_122		| 2		| 1.00        	| 37  	| (fn_49 (lt #1 #0))
---------------------------------------------
fn_123		| 4		| 1.00        	| 12  	| ((lam (#3 (remove (#2 #1) #0))) (remove #1 #0))
---------------------------------------------
fn_124		| 0		| 1.00        	| 36  	| (fn_50 0)
---------------------------------------------
fn_125		| 0		| 1.00        	| 2   	| (frozenset (__set__ (frozenset (__set__ ORIGIN DOWN UNITY)) (frozenset (__set__ ORIGIN DOWN RIGHT)) (frozenset (__set__ UNITY DOWN RIGHT)) (frozenset (__set__ UNITY ORIGIN RIGHT)) (shift (frozenset (__set__ ORIGIN UP DOWN)) DOWN) (shift (frozenset (__set__ ORIGIN LEFT RIGHT)) RIGHT)))
---------------------------------------------
fn_126		| 0		| 1.00        	| 36  	| (randint 2)
---------------------------------------------
fn_127		| 2		| 1.00        	| 36  	| (interval #1 #0 1)
---------------------------------------------
fn_128		| 4		| 1.00        	| 36  	| (fn_0 #3 #2 #1 (fn_27 #0))
---------------------------------------------
fn_129		| 1		| 1.00        	| 35  	| (fn_5 (shape #0))
---------------------------------------------
fn_130		| 4		| 1.00        	| 35  	| (fn_128 #3 (fn_0 #2 #1 #0))
---------------------------------------------
fn_131		| 4		| 1.00        	| 12  	| (fn_54 #1 #3 bgc (#2 (fn_60 #1 #0)))
---------------------------------------------
fn_132		| 4		| 1.00        	| 88  	| (#3 (#2 #0) (#1 #0))
---------------------------------------------
fn_133		| 4		| 1.00        	| 12  	| (fn_104 2 #3 ((lam #2) (fn_24 (vmirror #1) #0)))
---------------------------------------------
fn_134		| 1		| 1.00        	| 34  	| (fill #0 2)
---------------------------------------------
fn_135		| 2		| 1.00        	| 34  	| (min (max #1 #0))
---------------------------------------------
fn_136		| 4		| 1.00        	| 65  	| (fn_69 #3 (lam (lam (lam (lam (fn_20 #2 $3 #1 #0))))))
---------------------------------------------
fn_137		| 4		| 1.00        	| 9   	| (lam ((lam ((lam (#3 $0 $1 $2)) #2)) (fill $0 #1 #0)))
---------------------------------------------
fn_138		| 0		| 1.00        	| 33  	| (randint 3)
---------------------------------------------
fn_139		| 0		| 1.00        	| 33  	| (fn_16 2)
---------------------------------------------
fn_140		| 3		| 1.00        	| 11  	| (fn_22 #1 (fn_75 #1 (#2 #1 #0)))
---------------------------------------------
fn_141		| 4		| 1.00        	| 6   	| ((lam ((lam (fn_62 #3 $0 (lam (fn_28 $1 #2 $2 #1)))) #0)) #0)
---------------------------------------------
fn_142		| 4		| 1.00        	| 6   	| (lam (fn_51 ((lam (#3 $0 $1)) (next #2 #1)) (add_M #1 (fn_33 #0))))
---------------------------------------------
fn_143		| 0		| 1.00        	| 32  	| (fn_16 4)
---------------------------------------------
fn_144		| 3		| 1.00        	| 32  	| (fn_130 (fn_0 #2 #1 #0))
---------------------------------------------
fn_145		| 3		| 1.00        	| 32  	| (fn_144 (fn_0 #2 #1 #0))
---------------------------------------------
fn_146		| 4		| 1.00        	| 6   	| (fn_67 (fn_19 (max 1 (floordiv (len #0) #3)) #2 #1) #0)
---------------------------------------------
fn_147		| 1		| 1.00        	| 16  	| (lam (fn_42 $0 (#0 $0)))
---------------------------------------------
fn_148		| 0		| 1.00        	| 31  	| (difference fn_7)
---------------------------------------------
fn_149		| 1		| 1.00        	| 31  	| (fn_19 (fn_6 #0))
---------------------------------------------
fn_150		| 1		| 1.00        	| 11  	| (objects #0 T F F)
---------------------------------------------
fn_151		| 2		| 1.00        	| 31  	| (#1 0 (fn_6 #0))
---------------------------------------------
fn_152		| 3		| 1.00        	| 31  	| (fn_145 (fn_0 #2 #1 #0))
---------------------------------------------
fn_153		| 3		| 1.00        	| 16  	| (fn_89 (__listComp__ #2 #1 (__list__ #0)))
---------------------------------------------
fn_154		| 0		| 1.00        	| 29  	| (fn_16 6)
---------------------------------------------
fn_155		| 0		| 1.00        	| 29  	| (__tuple__ 2)
---------------------------------------------
fn_156		| 1		| 1.00        	| 29  	| (getItem #0 1)
---------------------------------------------
fn_157		| 3		| 1.00        	| 4   	| (backdrop (__set__ (__tuple__ #2 #0) (__tuple__ (#1 #2) (#1 #0))))
---------------------------------------------
fn_158		| 1		| 1.00        	| 28  	| (fn_77 (fn_6 #0))
---------------------------------------------
fn_159		| 1		| 1.00        	| 28  	| (sub #0 3)
---------------------------------------------
fn_160		| 1		| 1.00        	| 28  	| (fill #0 dotc)
---------------------------------------------
fn_161		| 1		| 1.00        	| 29  	| (lam ((lam (#0 0)) 0))
---------------------------------------------
fn_162		| 4		| 1.00        	| 27  	| (sfilter #3 (lam (#2 (#1 $0) #0)))
---------------------------------------------
fn_163		| 0		| 1.00        	| 27  	| (fn_16 1)
---------------------------------------------
fn_164		| 1		| 1.00        	| 27  	| (fn_55 #0 0)
---------------------------------------------
fn_165		| 2		| 1.00        	| 27  	| (fn_19 (min #1 #0))
---------------------------------------------
fn_166		| 4		| 1.00        	| 72  	| (lam ((lam (#3 (fill #2 #1 $1))) #0))
---------------------------------------------
fn_167		| 0		| 1.00        	| 26  	| (fn_46 1)
---------------------------------------------
fn_168		| 1		| 1.00        	| 26  	| (randint (fn_12 #0))
---------------------------------------------
fn_169		| 4		| 1.00        	| 5   	| (lam ((lam (fn_51 ((lam (#3 $0 $1 $2)) #2) (add_M #1 $0))) (fn_33 #0)))
---------------------------------------------
fn_170		| 4		| 1.00        	| 9   	| (fn_0 #3 #2 (lam (fn_72 #1 (#0 $0) fn_11)))
---------------------------------------------
fn_171		| 1		| 1.00        	| 25  	| (mul #0 2)
---------------------------------------------
fn_172		| 2		| 1.00        	| 9   	| (fn_42 #1 (fn_13 1 1 #0))
---------------------------------------------
fn_173		| 3		| 1.00        	| 25  	| (fn_152 (fn_0 #2 #1 #0))
---------------------------------------------
fn_174		| 0		| 1.00        	| 23  	| (__tuple__ 3)
---------------------------------------------
fn_175		| 1		| 1.00        	| 23  	| (fn_40 #0 dneighbors)
---------------------------------------------
fn_176		| 2		| 1.00        	| 23  	| (fn_9 (sample #1 #0))
---------------------------------------------
fn_177		| 0		| 1.00        	| 22  	| (randint 0)
---------------------------------------------
fn_178		| 4		| 1.00        	| 6   	| (lam (fn_54 #2 #3 bgc (fn_28 bgc #2 #1 #0)))
---------------------------------------------
fn_179		| 3		| 1.00        	| 5   	| (fn_123 #2 #0 fn_12 (lam (#1 (remove (fn_6 #0) $0))))
---------------------------------------------
fn_180		| 3		| 1.00        	| 5   	| (fn_123 #2 #0 fn_6 (lam (#1 (remove (fn_12 #0) $0))))
---------------------------------------------
fn_181		| 1		| 1.00        	| 22  	| (fn_40 #0 neighbors)
---------------------------------------------
fn_182		| 2		| 1.00        	| 22  	| (ifElse (lt #1 #0))
---------------------------------------------
fn_183		| 2		| 1.00        	| 22  	| (fn_61 (fn_102 #1 #0))
---------------------------------------------
fn_184		| 3		| 1.00        	| 22  	| (paint #2 (shift #1 #0))
---------------------------------------------
fn_185		| 3		| 1.00        	| 22  	| (#2 (fn_6 #1) (fn_6 #0))
---------------------------------------------
fn_186		| 4		| 1.00        	| 22  	| (backdrop (fn_14 #3 #2 #1 #0))
---------------------------------------------
fn_187		| 2		| 1.00        	| 6   	| (lam (lam (lam (lam (fn_93 (#1 $3 $2 $1 $0) #0)))))
---------------------------------------------
fn_188		| 2		| 1.00        	| 21  	| (__set__ (__tuple__ #1 #0))
---------------------------------------------
fn_189		| 2		| 1.00        	| 21  	| (ifElse (andOp #1 #0))
---------------------------------------------
fn_190		| 2		| 1.00        	| 5   	| (fn_5 (sorted (sample (fn_127 (fn_48 #1) #0) 2)))
---------------------------------------------
fn_191		| 4		| 1.00        	| 6   	| (__tuple__ (mul #3 (fn_12 #2)) (mul #1 (fn_12 #0)))
---------------------------------------------
fn_192		| 4		| 1.00        	| 20  	| (lam (#3 $0 #2 #1 neighbors #0))
---------------------------------------------
fn_193		| 0		| 1.00        	| 20  	| (__tuple__ -1)
---------------------------------------------
fn_194		| 0		| 1.00        	| 20  	| (ifElse None)
---------------------------------------------
fn_195		| 0		| 1.00        	| 20  	| (mul 5)
---------------------------------------------
fn_196		| 1		| 1.00        	| 20  	| (fill #0 linc)
---------------------------------------------
fn_197		| 3		| 1.00        	| 7   	| (bitAnd (sub #2 #0) (mapply #1 #0))
---------------------------------------------
fn_198		| 4		| 1.00        	| 10  	| (lam (#3 $0 #2 (fill $0 #1 #0)))
---------------------------------------------
fn_199		| 0		| 1.00        	| 7   	| (fn_8 x41 x39 x40)
---------------------------------------------
