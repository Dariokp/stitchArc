{
    "cmd": "/home/dlindberg/.conda/envs/arcProjectEnv/bin/python run_stitch.py",
    "args": {
        "iterations": 200,
        "abstraction_prefix": "fn_",
        "previous_abstractions": 0,
        "shuffle": false,
        "truncate": null,
        "no_opt": false,
        "silent": true,
        "verbose_rewrite": false,
        "step": {
            "max_arity": 4,
            "threads": 18,
            "no_stats": false,
            "batch": 1,
            "dynamic_batch": false,
            "eta_long": false,
            "no_curried_metavars": false,
            "no_curried_bodies": false,
            "inv_candidates": 1,
            "hole_choice": "DepthFirst",
            "cost": {
                "cost_lam": 1,
                "cost_app": 1,
                "cost_var": 100,
                "cost_ivar": 100,
                "cost_prim_default": 100
            },
            "no_mismatch_check": false,
            "follow": null,
            "follow_prune": false,
            "verbose_worklist": false,
            "verbose_best": false,
            "print_stats": 0,
            "show_rewritten": false,
            "rewritten_dreamcoder": false,
            "rewritten_intermediates": false,
            "inv_arg_cap": false,
            "allow_single_task": false,
            "no_opt_single_use": false,
            "no_opt_upper_bound": false,
            "no_opt_force_multiuse": false,
            "no_opt_useless_abstract": false,
            "no_opt_arity_zero": false,
            "no_other_util": false,
            "structure_penalty": 1.0,
            "rewrite_check": false,
            "utility_by_rewrite": false,
            "dreamcoder_comparison": false,
            "quiet": true,
            "fused_lambda_tags": {
                "tags": null
            }
        }
    },
    "original_cost": 7953613,
    "final_cost": 4177169,
    "compression_ratio": 1.9040678028588256,
    "num_abstractions": 200,
    "original": "(lam (lam ((lam ((lam ((lam ((lam ((lam (getItem (__listComp__ ((lam ((lam ((lam ((lam ((lam ((lam ((lam ((lam ((lam ((lam ((lam ((lam ((lam ((lam ((lam ((lam ((lam ((lam ((lam ((lam ((lam ((lam ((lam ((lam ((lam (ifElse (choice (__tuple__ True False)) ((lam ((lam (__dict__ (__tuple__ (__str__ input) $1) (__tuple__ (__str__ output) $0))) (dmirror $0))) (dmirror $0)) (__dict__ (__tuple__ (__str__ input) $65) (__tuple__ (__str__ output) $66)))) (fill $65 8 (shift $1 $5)))) (backdrop (frozenset (__set__ (__tuple__ (add $18 1) (add (max $16 $14) 1)) (__tuple__ (sub $21 1) (sub (min $15 $13) 1))))))) (paint $63 $2))) (canvas bgc (__tuple__ $25 $24)))) (shift $0 $1))) (__tuple__ $2 $1))) (randint 0 (sub $21 $19)))) (randint 0 (sub $21 $19)))) (asobject $1))) (fill $0 c2 $3))) (fill $45 c1 $3))) (canvas bgc (__tuple__ $15 $14)))) (backdrop (frozenset (__set__ (__tuple__ $10 $3) (__tuple__ (sub $14 1) $2)))))) (backdrop (frozenset (__set__ (__tuple__ 0 $4) (__tuple__ $6 $3)))))) (randint (add $4 1) (sub $11 1)))) (randint 0 (sub $3 1)))) (randint (add $2 1) (sub $9 1)))) (randint 0 (sub $1 1)))) (randint 1 (sub $7 2)))) (getItem $2 $1))) (unifint $11 $10 (__tuple__ 0 (sub (len $1) 1))))) (getItemWithStep (getItemUpTo $0 (sub $2 1)) 0 -1 -1))) (getItem $21 $1))) (unifint $8 $7 (__tuple__ 2 (sub $3 1))))) (interval 0 $2 1)) (__tuple__ bgc c1 c2) (__list__ (sample $4 3))) 0)) (unifint $6 $5 (__tuple__ 3 $2)))) (unifint $5 $4 (__tuple__ 3 $2)))) (unifint $4 $3 (__tuple__ 3 30)))) (unifint $3 $2 (__tuple__ 3 30)))) (remove 8 (interval 0 10 1)))))",
    "rewritten": "(lam (lam ((lam ((lam ((lam ((lam ((lam (getItem (__listComp__ ((lam ((lam ((lam ((lam ((lam ((lam ((lam ((lam ((lam ((lam ((lam ((lam ((lam ((lam ((lam ((lam ((lam ((lam ((lam ((lam ((lam ((lam ((lam ((lam ((lam (ifElse (choice (__tuple__ True False)) ((lam ((lam (__dict__ (__tuple__ (__str__ input) $1) (__tuple__ (__str__ output) $0))) (dmirror $0))) (dmirror $0)) (__dict__ (__tuple__ (__str__ input) $65) (__tuple__ (__str__ output) $66)))) (fill $65 8 (shift $1 $5)))) (backdrop (frozenset (__set__ (__tuple__ (add $18 1) (add (max $16 $14) 1)) (__tuple__ (sub $21 1) (sub (min $15 $13) 1))))))) (paint $63 $2))) (canvas bgc (__tuple__ $25 $24)))) (shift $0 $1))) (__tuple__ $2 $1))) (randint 0 (sub $21 $19)))) (randint 0 (sub $21 $19)))) (asobject $1))) (fill $0 c2 $3))) (fill $45 c1 $3))) (canvas bgc (__tuple__ $15 $14)))) (backdrop (frozenset (__set__ (__tuple__ $10 $3) (__tuple__ (sub $14 1) $2)))))) (backdrop (frozenset (__set__ (__tuple__ 0 $4) (__tuple__ $6 $3)))))) (randint (add $4 1) (sub $11 1)))) (randint 0 (sub $3 1)))) (randint (add $2 1) (sub $9 1)))) (randint 0 (sub $1 1)))) (randint 1 (sub $7 2)))) (getItem $2 $1))) (unifint $11 $10 (__tuple__ 0 (sub (len $1) 1))))) (getItemWithStep (getItemUpTo $0 (sub $2 1)) 0 -1 -1))) (getItem $21 $1))) (unifint $8 $7 (__tuple__ 2 (sub $3 1))))) (interval 0 $2 1)) (__tuple__ bgc c1 c2) (__list__ (sample $4 3))) 0)) (unifint $6 $5 (__tuple__ 3 $2)))) (unifint $5 $4 (__tuple__ 3 $2)))) (unifint $4 $3 (__tuple__ 3 30)))) (unifint $3 $2 (__tuple__ 3 30)))) (remove 8 (interval 0 10 1)))))",
    "rewritten_dreamcoder": null,
    "abstractions": [
        {
            "body": "(#2 (ifElse (elem (__str__ #1) dir) #1 None) (ifElse (elem (__str__ #0) dir) #0 None))",
            "dreamcoder": "#(lambda (lambda (lambda ($0 (ifElse (elem (__str__ $1) dir) $1 None) (ifElse (elem (__str__ $2) dir) $2 None)))))",
            "arity": 3,
            "name": "fn_0",
            "utility": 1282191,
            "final_cost": 6670408,
            "compression_ratio": 1.1923727903900332,
            "cumulative_compression_ratio": 1.1923727903900332,
            "num_uses": 2099,
            "rewritten": null,
            "rewritten_dreamcoder": null,
            "uses": {
                "fn_0 $197 $198 (lam (lam ((lam (x100 $2 $1)) (x1 (lam (lam (lam (ifElse (isNot $1 $8) ((lam (getItem (__list__ (add_M $11 (choice (totuple (bitAnd (sub $13 $11) (mapply dneighbors $11))))) ((lam (x101 $0 $1)) (next $9 $10))) -1)) $204) ((lam ((lam (ifElse (eq $0 $64) (ifElse (lt (len $0) (mul $16 $15)) (getItem (__list__ (add_M $0 (choice (totuple (bitAnd (sub $14 $0) (mapply dneighbors $0))))) ((lam (x59 $15 $25 $22 $21 $20 $18 $24 $12 $0 $17 $16 $32 $31 $23 $14 $19 $26)) (normalize $0))) -1) ((lam ((lam (x59 $16 $26 $23 $22 $21 $19 $25 $13 $0 $18 $17 $33 $32 $24 $15 $20 $27)) (normalize $0))) (remove (choice (totuple (corners $211))) $211))) ((lam (x59 $15 $25 $22 $21 $20 $18 $24 $12 $0 $17 $16 $32 $31 $23 $14 $19 $26)) (normalize $0)))) (set $211))) (normalize $210))))))))))": "((lam (lam ((lam (x100 $2 $1)) (x1 (lam (lam (lam (ifElse (isNot $1 $8) ((lam (getItem (__list__ (add_M $11 (choice (totuple (bitAnd (sub $13 $11) (mapply dneighbors $11))))) ((lam (x101 $0 $1)) (next $9 $10))) -1)) $204) ((lam ((lam (ifElse (eq $0 $64) (ifElse (lt (len $0) (mul $16 $15)) (getItem (__list__ (add_M $0 (choice (totuple (bitAnd (sub $14 $0) (mapply dneighbors $0))))) ((lam (x59 $15 $25 $22 $21 $20 $18 $24 $12 $0 $17 $16 $32 $31 $23 $14 $19 $26)) (normalize $0))) -1) ((lam ((lam (x59 $16 $26 $23 $22 $21 $19 $25 $13 $0 $18 $17 $33 $32 $24 $15 $20 $27)) (normalize $0))) (remove (choice (totuple (corners $211))) $211))) ((lam (x59 $15 $25 $22 $21 $20 $18 $24 $12 $0 $17 $16 $32 $31 $23 $14 $19 $26)) (normalize $0)))) (set $211))) (normalize $210)))))))))) (ifElse (elem (__str__ $198) dir) $198 None) (ifElse (elem (__str__ $197) dir) $197 None))"
            },
            "dc_comparison_millis": null
        },
        {
            "body": "(__dict__ (__tuple__ (__str__ input) #1) (__tuple__ (__str__ output) #0))",
            "dreamcoder": "#(lambda (lambda (__dict__ (__tuple__ (__str__ input) $0) (__tuple__ (__str__ output) $1))))",
            "arity": 2,
            "name": "fn_1",
            "utility": 240480,
            "final_cost": 6429220,
            "compression_ratio": 1.0375143485523906,
            "cumulative_compression_ratio": 1.2371038788531115,
            "num_uses": 398,
            "rewritten": null,
            "rewritten_dreamcoder": null,
            "uses": {
                "fn_1 $1 $0": "(__dict__ (__tuple__ (__str__ input) $0) (__tuple__ (__str__ output) $1))"
            },
            "dc_comparison_millis": null
        },
        {
            "body": "((lam (lam ((lam (#3 (ifElse (elem (__str__ #2) dir) #2 None))) (next $1 #1)))) __list__ (iter #0))",
            "dreamcoder": "#(lambda (lambda (lambda (lambda ((lambda (lambda ((lambda ($3 (ifElse (elem (__str__ $4) dir) $4 None))) (next $1 $4)))) __list__ (iter $3))))))",
            "arity": 4,
            "name": "fn_2",
            "utility": 108524,
            "final_cost": 6319780,
            "compression_ratio": 1.0173170585052012,
            "cumulative_compression_ratio": 1.258526879100222,
            "num_uses": 120,
            "rewritten": null,
            "rewritten_dreamcoder": null,
            "uses": {
                "fn_2 $3 $0 $99 (fn_0 $100 $103 (fn_0 $101 $104 (lam (lam (lam (lam (lam ((lam (x65 $5 $4 $3 $2 $1)) (x1 (lam (lam (lam (lam (lam (lam (ifElse (isNot $4 $11) ((lam ((lam ((lam ((lam ((lam ((lam (x66 $0 $3 $1 $4 $5)) (next $16 $17))) (fill $0 4 (getItemWithStep $3 1 -1 2)))) (fill $118 fgc $2))) (fill $0 fgc $1))) (order (shoot $1 (__tuple__ 1 1)) first))) $116) (fn_1 $114 $112)))))))))))))))))": "((lam (lam ((lam (fn_0 $103 $106 (fn_0 $104 $107 (lam (lam (lam (lam (lam ((lam (x65 $5 $4 $3 $2 $1)) (x1 (lam (lam (lam (lam (lam (lam (ifElse (isNot $4 $14) ((lam ((lam ((lam ((lam ((lam ((lam (x66 $0 $3 $1 $4 $5)) (next $19 $20))) (fill $0 4 (getItemWithStep $3 1 -1 2)))) (fill $121 fgc $2))) (fill $0 fgc $1))) (order (shoot $1 (__tuple__ 1 1)) first))) $119) (fn_1 $117 $115)))))))))))))))) (ifElse (elem (__str__ $102) dir) $102 None))) (next $1 $2)))) __list__ (iter $3))"
            },
            "dc_comparison_millis": null
        },
        {
            "body": "(lam (lam (lam (lam ((lam (#1 $4 $3 $2 $1)) (x1 #0))))))",
            "dreamcoder": "#(lambda (lambda (lambda (lambda (lambda (lambda ((lambda ($5 $4 $3 $2 $1)) (x1 $5))))))))",
            "arity": 2,
            "name": "fn_3",
            "utility": 102557,
            "final_cost": 6216712,
            "compression_ratio": 1.0165791820499326,
            "cumulative_compression_ratio": 1.2793922253435581,
            "num_uses": 252,
            "rewritten": null,
            "rewritten_dreamcoder": null,
            "uses": {
                "fn_3 (lam (lam (lam (lam (lam (lam (lam (lam (lam (lam (lam (lam (ifElse (isNot $10 $19) ((lam (getItem (__listComp__ ((lam (fn_2 (range 1 (max $79 $78)) $0 $213 (fn_0 $212 $221 (lam (lam (lam ((lam (x121 $3 $2 $1)) (x1 (lam (lam (lam (lam (ifElse (isNot $2 $7) ((lam ((lam (ifElse (nelem $0 $36) (ifElse (lt (len $10) 2) ((lam (x101 $0 $22 $11 $12 $19 $18 $17 $1 $15 $14 $13)) (next $31 $32)) ((lam ((lam ((lam ((lam ((lam ((lam (x101 $0 $5 $16 $17 $4 $3 $2 $6 $1 $19 $18)) (next $36 $37))) (add $0 1))) (fill $0 $41 (mapply (lbind shift $74) (set (getItemUpTo $14 (add $3 1))))))) (fill $0 $40 (shift $73 $1)))) (getItem $12 $1))) (unifint $94 $93 (__tuple__ 1 (sub (len $11) 1))))) (getItem (__list__ (append_M $10 $0) ((lam (x122 $0 $2 $1)) (next $9 $10))) -1))) (add $35 (__tuple__ (mul (mul $1 $13) (add $90 1)) (mul (mul $1 $12) (add $89 1)))))) $229) (ifElse (lt (len $8) 2) ((lam (x101 $0 $223 $9 $10 $224 $225 $226 $221 $227 $12 $11)) (next $29 $30)) ((lam ((lam ((lam ((lam ((lam ((lam (x101 $0 $5 $14 $15 $4 $3 $2 $226 $1 $17 $16)) (next $34 $35))) (add $0 1))) (fill $0 $39 (mapply (lbind shift $72) (set (getItemUpTo $12 (add $3 1))))))) (fill $0 $38 (shift $71 $1)))) (getItem $10 $1))) (unifint $92 $91 (__tuple__ 1 (sub (len $9) 1)))))))))))))))))) __list__) (__tuple__ $2 $1) (__list__ $0)) 0)) $226) ((lam ((lam ((lam (x64 $0 $223 $200 $24 $28 $224 $2 $1 $27 $26 $25 $213 $227 $4 $3)) (next $59 $60))) (fill $0 $27 (shift $60 $25)))) (fill $0 $26 (shift $59 $24)))))))))))))))) (x100 $6 $5 $4 $3 $2 $1 $0)": "(lam (lam (lam (lam ((lam (x100 $11 $10 $9 $8 $7 $6 $5 $4 $3 $2 $1)) (x1 (lam (lam (lam (lam (lam (lam (lam (lam (lam (lam (lam (lam (ifElse (isNot $10 $23) ((lam (getItem (__listComp__ ((lam (fn_2 (range 1 (max $83 $82)) $0 $217 (fn_0 $216 $225 (lam (lam (lam ((lam (x121 $3 $2 $1)) (x1 (lam (lam (lam (lam (ifElse (isNot $2 $7) ((lam ((lam (ifElse (nelem $0 $40) (ifElse (lt (len $10) 2) ((lam (x101 $0 $22 $11 $12 $19 $18 $17 $1 $15 $14 $13)) (next $35 $36)) ((lam ((lam ((lam ((lam ((lam ((lam (x101 $0 $5 $16 $17 $4 $3 $2 $6 $1 $19 $18)) (next $40 $41))) (add $0 1))) (fill $0 $45 (mapply (lbind shift $78) (set (getItemUpTo $14 (add $3 1))))))) (fill $0 $44 (shift $77 $1)))) (getItem $12 $1))) (unifint $98 $97 (__tuple__ 1 (sub (len $11) 1))))) (getItem (__list__ (append_M $10 $0) ((lam (x122 $0 $2 $1)) (next $9 $10))) -1))) (add $39 (__tuple__ (mul (mul $1 $13) (add $94 1)) (mul (mul $1 $12) (add $93 1)))))) $233) (ifElse (lt (len $8) 2) ((lam (x101 $0 $227 $9 $10 $228 $229 $230 $225 $231 $12 $11)) (next $33 $34)) ((lam ((lam ((lam ((lam ((lam ((lam (x101 $0 $5 $14 $15 $4 $3 $2 $230 $1 $17 $16)) (next $38 $39))) (add $0 1))) (fill $0 $43 (mapply (lbind shift $76) (set (getItemUpTo $12 (add $3 1))))))) (fill $0 $42 (shift $75 $1)))) (getItem $10 $1))) (unifint $96 $95 (__tuple__ 1 (sub (len $9) 1)))))))))))))))))) __list__) (__tuple__ $2 $1) (__list__ $0)) 0)) $230) ((lam ((lam ((lam (x64 $0 $227 $204 $28 $32 $228 $2 $1 $31 $30 $29 $217 $231 $4 $3)) (next $63 $64))) (fill $0 $31 (shift $64 $29)))) (fill $0 $30 (shift $63 $28))))))))))))))))))))))"
            },
            "dc_comparison_millis": null
        },
        {
            "body": "(unifint #3 #2 (__tuple__ #1 #0))",
            "dreamcoder": "#(lambda (lambda (lambda (lambda (unifint $0 $1 (__tuple__ $2 $3))))))",
            "arity": 4,
            "name": "fn_4",
            "utility": 94533,
            "final_cost": 6121974,
            "compression_ratio": 1.0154750738895657,
            "cumulative_compression_ratio": 1.2991909145644855,
            "num_uses": 938,
            "rewritten": null,
            "rewritten_dreamcoder": null,
            "uses": {
                "fn_4 (floordiv $4 2) 0 $9 $10": "(unifint $10 $9 (__tuple__ 0 (floordiv $4 2)))"
            },
            "dc_comparison_millis": null
        },
        {
            "body": "(getItem (__listComp__ #3 (__tuple__ #2 #1) (__list__ #0)) 0)",
            "dreamcoder": "#(lambda (lambda (lambda (lambda (getItem (__listComp__ $0 (__tuple__ $1 $2) (__list__ $3)) 0)))))",
            "arity": 4,
            "name": "fn_5",
            "utility": 77060,
            "final_cost": 6044406,
            "compression_ratio": 1.01283302279827,
            "cumulative_compression_ratio": 1.315863461190397,
            "num_uses": 192,
            "rewritten": null,
            "rewritten_dreamcoder": null,
            "uses": {
                "fn_5 (shape $54) $16 $17 ((lam ((lam ((lam ((lam ((lam ((lam ((lam ((lam ((lam ((lam ((lam ((lam ((lam ((lam ((lam ((lam ((lam ((lam ((lam ((lam ((lam ((lam ((lam ((lam ((lam ((lam ((lam ((lam ((lam ((lam (ifElse (andOp (choice (__tuple__ True False)) (gt (len $26) 3)) ((lam (getItem (__listComp__ ((lam ((lam ((lam ((lam ((lam (lam ((lam (fn_0 $140 $139 (fn_0 $138 $141 (fn_3 (lam (lam (lam (lam (lam (ifElse (isNot $3 $8) ((lam ((lam ((lam ((lam (x70 $0 $3 $2 $1)) (next $11 $12))) (x75 $0))) (x75 $0))) $147) (fn_1 $145 $144))))))) x69)))) (next $1 $2)))) __list__ (iter (sample $2 $1)))) (choice (__tuple__ 1 2)))) (__tuple__ identity dmirror cmirror vmirror hmirror rot90 rot180 rot270))) (fill $133 objc $1))) (shift (asindices (canvas -1 (__tuple__ $25 $24))) (__tuple__ (add $8 (mul idxi $25)) (add $7 (mul idxj $24))))) (__tuple__ idxi idxj) (__list__ $0)) 0)) (choice (totuple (toindices (sfilter $27 (lam (eq (getItem $0 0) objc))))))) ((lam ((lam ((lam (lam ((lam (fn_0 $157 $156 (fn_0 $155 $158 (fn_3 (lam (lam (lam (lam (lam (ifElse (isNot $3 $8) ((lam ((lam ((lam ((lam (x90 $0 $3 $2 $1)) (next $11 $12))) (x95 $0))) (x95 $0))) $164) (fn_1 $162 $161))))))) x89)))) (next $1 $2)))) __list__ (iter (sample $2 $1)))) (choice (__tuple__ 1 2)))) (__tuple__ identity dmirror cmirror vmirror hmirror rot90 rot180 rot270)))) (paint $150 $1))) (sfilter $3 (lam (elem (getItem $0 0) (__tuple__ ac1 ac2)))))) (subgrid $9 $149))) (paint $147 $1))) (shift $3 (__tuple__ $2 $1)))) (randint (add $7 1) (sub (sub (add $7 $9) 1) (width $2))))) (randint (add $7 1) (sub (sub (add $7 $9) 1) (height $1))))) (asobject $0))) (vupscale (hupscale $1 $14) $15))) (subgrid $10 $141))) (fill $140 cornc $1))) (corners (frozenset (__set__ (__tuple__ $2 $1) (__tuple__ (sub (add $2 $4) 1) (sub (add $1 $3) 1))))))) (randint 0 (sub $36 $2)))) (randint (add $8 $34) (sub $36 $2)))) (fn_4 $34 (add $2 2) $37 $38))) (fn_4 (sub (sub $34 $32) 2) (add $2 2) $36 $37))) (mul $6 $30))) (mul $6 $30))) (paint $132 $1))) (shift $7 (__tuple__ $2 $1)))) (randint 0 2))) (randint 0 2))) (fn_4 $2 1 $29 $30))) (fn_4 $2 1 $28 $29))) (floordiv (sub (sub $24 $22) 4) $22))) (floordiv (sub (sub $24 $22) 4) $22))) (bitOr (recolor objc $1) (__set__ (__tuple__ ac1 $3) (__tuple__ ac2 $2))))) (sub $57 (__set__ $2 $1)))) (choice (remove $1 (totuple $56))))) (choice (totuple $55)))": "(getItem (__listComp__ ((lam ((lam ((lam ((lam ((lam ((lam ((lam ((lam ((lam ((lam ((lam ((lam ((lam ((lam ((lam ((lam ((lam ((lam ((lam ((lam ((lam ((lam ((lam ((lam ((lam ((lam ((lam ((lam ((lam ((lam (ifElse (andOp (choice (__tuple__ True False)) (gt (len $26) 3)) ((lam (getItem (__listComp__ ((lam ((lam ((lam ((lam ((lam (lam ((lam (fn_0 $140 $139 (fn_0 $138 $141 (fn_3 (lam (lam (lam (lam (lam (ifElse (isNot $3 $8) ((lam ((lam ((lam ((lam (x70 $0 $3 $2 $1)) (next $11 $12))) (x75 $0))) (x75 $0))) $147) (fn_1 $145 $144))))))) x69)))) (next $1 $2)))) __list__ (iter (sample $2 $1)))) (choice (__tuple__ 1 2)))) (__tuple__ identity dmirror cmirror vmirror hmirror rot90 rot180 rot270))) (fill $133 objc $1))) (shift (asindices (canvas -1 (__tuple__ $25 $24))) (__tuple__ (add $8 (mul idxi $25)) (add $7 (mul idxj $24))))) (__tuple__ idxi idxj) (__list__ $0)) 0)) (choice (totuple (toindices (sfilter $27 (lam (eq (getItem $0 0) objc))))))) ((lam ((lam ((lam (lam ((lam (fn_0 $157 $156 (fn_0 $155 $158 (fn_3 (lam (lam (lam (lam (lam (ifElse (isNot $3 $8) ((lam ((lam ((lam ((lam (x90 $0 $3 $2 $1)) (next $11 $12))) (x95 $0))) (x95 $0))) $164) (fn_1 $162 $161))))))) x89)))) (next $1 $2)))) __list__ (iter (sample $2 $1)))) (choice (__tuple__ 1 2)))) (__tuple__ identity dmirror cmirror vmirror hmirror rot90 rot180 rot270)))) (paint $150 $1))) (sfilter $3 (lam (elem (getItem $0 0) (__tuple__ ac1 ac2)))))) (subgrid $9 $149))) (paint $147 $1))) (shift $3 (__tuple__ $2 $1)))) (randint (add $7 1) (sub (sub (add $7 $9) 1) (width $2))))) (randint (add $7 1) (sub (sub (add $7 $9) 1) (height $1))))) (asobject $0))) (vupscale (hupscale $1 $14) $15))) (subgrid $10 $141))) (fill $140 cornc $1))) (corners (frozenset (__set__ (__tuple__ $2 $1) (__tuple__ (sub (add $2 $4) 1) (sub (add $1 $3) 1))))))) (randint 0 (sub $36 $2)))) (randint (add $8 $34) (sub $36 $2)))) (fn_4 $34 (add $2 2) $37 $38))) (fn_4 (sub (sub $34 $32) 2) (add $2 2) $36 $37))) (mul $6 $30))) (mul $6 $30))) (paint $132 $1))) (shift $7 (__tuple__ $2 $1)))) (randint 0 2))) (randint 0 2))) (fn_4 $2 1 $29 $30))) (fn_4 $2 1 $28 $29))) (floordiv (sub (sub $24 $22) 4) $22))) (floordiv (sub (sub $24 $22) 4) $22))) (bitOr (recolor objc $1) (__set__ (__tuple__ ac1 $3) (__tuple__ ac2 $2))))) (sub $57 (__set__ $2 $1)))) (choice (remove $1 (totuple $56))))) (choice (totuple $55))) (__tuple__ $17 $16) (__list__ (shape $54))) 0)"
            },
            "dc_comparison_millis": null
        },
        {
            "body": "(sub #0 1)",
            "dreamcoder": "#(lambda (sub $0 1))",
            "arity": 1,
            "name": "fn_6",
            "utility": 71407,
            "final_cost": 5972797,
            "compression_ratio": 1.0119891903240643,
            "cumulative_compression_ratio": 1.3316395986670906,
            "num_uses": 709,
            "rewritten": null,
            "rewritten_dreamcoder": null,
            "uses": {
                "fn_6 $0": "(sub $0 1)"
            },
            "dc_comparison_millis": null
        },
        {
            "body": "(interval 0 10 1)",
            "dreamcoder": "#(interval 0 10 1)",
            "arity": 0,
            "name": "fn_7",
            "utility": 64742,
            "final_cost": 5907652,
            "compression_ratio": 1.0110272236753282,
            "cumulative_compression_ratio": 1.3463238863765168,
            "num_uses": 215,
            "rewritten": null,
            "rewritten_dreamcoder": null,
            "uses": {
                "fn_7 ": "(interval 0 10 1)"
            },
            "dc_comparison_millis": null
        },
        {
            "body": "(lam ((lam (#2 $0)) (lam (#1 (lam (#0 $1 (__star__ $0)))))))",
            "dreamcoder": "#(lambda (lambda (lambda (lambda ((lambda ($2 $0)) (lambda ($3 (lambda ($5 $1 (__star__ $0))))))))))",
            "arity": 3,
            "name": "fn_8",
            "utility": 54543,
            "final_cost": 5852699,
            "compression_ratio": 1.009389343275641,
            "cumulative_compression_ratio": 1.3589649835059008,
            "num_uses": 179,
            "rewritten": null,
            "rewritten_dreamcoder": null,
            "uses": {
                "fn_8 x102 x100 x101": "(lam ((lam (x101 $0)) (lam (x100 (lam (x102 $1 (__star__ $0)))))))"
            },
            "dc_comparison_millis": null
        },
        {
            "body": "((lam (lam ((lam #2) (next $1 #1)))) __list__ (iter #0))",
            "dreamcoder": "#(lambda (lambda (lambda ((lambda (lambda ((lambda $3) (next $1 $3)))) __list__ (iter $2)))))",
            "arity": 3,
            "name": "fn_9",
            "utility": 50693,
            "final_cost": 5801597,
            "compression_ratio": 1.008808264345145,
            "cumulative_compression_ratio": 1.3709351063164164,
            "num_uses": 167,
            "rewritten": null,
            "rewritten_dreamcoder": null,
            "uses": {
                "fn_9 (range $7) $0 (fn_0 $98 $99 (fn_0 $69 $83 (fn_0 $85 $71 (fn_0 $100 $67 (fn_0 $97 $65 (fn_0 $102 $103 (fn_0 $101 $105 (lam (lam (lam (lam (lam (lam (lam (lam (lam (lam (fn_3 (lam (lam (lam (lam (lam (lam (lam (lam (lam (lam (lam (lam (lam (lam (lam (ifElse (isNot $13 $25) ((lam (ifElse (orOp (eq (len $11) 0) (lt $8 2)) ((lam (fn_1 $0 $13)) (dmirror (__tuple__ (tuple $0)))) ((lam (ifElse (eq $0 0) ((lam (fn_1 $0 $14)) (dmirror (__tuple__ (tuple $0)))) ((lam ((lam ((lam ((lam (lam ((lam (fn_0 $115 $116 (lam (lam ((lam (x61 $2 $1)) (x1 (lam (lam (lam (ifElse (isNot $1 $8) ((lam (getItem (__list__ (add_M $11 (choice (totuple (bitAnd (sub $10 $11) (mapply neighbors $11))))) ((lam (x62 $0 $1)) (next $9 $10))) -1)) $122) ((lam ((lam ((lam (ifElse (eq (len $0) 0) ((lam (fn_1 $0 $29)) (dmirror (__tuple__ (tuple $0)))) ((lam ((lam (fn_0 $144 $142 (lam (lam (lam ((lam (x76 $3 $2 $1)) (x1 (lam (lam (lam (lam (ifElse (andOp None (lt $1 $55)) ((lam ((lam ((lam (x77 $2 $0 $1)) (add $0 1))) (issubset_M (shift $14 $1) $39))) (choice (totuple $38))) (ifElse $150 ((lam ((lam (getItem (__list__ (append_M $140 $0) ((lam ((lam ((lam (x34 $0 $3 $1 $2 $31 $154 $30 $4 $27 $15 $17 $29 $156 $155)) (next $56 $57))) (fill $0 $2 $3))) (sub (sub $0 $2) (mapply neighbors $2)))) -1)) (choice $62))) (shift $13 $150)) ((lam (x34 $0 $154 $156 $155 $27 $150 $26 $153 $23 $11 $13 $25 $152 $151)) (next $52 $53))))))))))))) (ifElse (elem (__str__ $143) dir) $143 None))) 0)) (choice (totuple $1))))) (sfilter $144 (lam (andOp (lte (getItem $0 0) (sub $54 (height $3))) (lte (getItem $0 1) (sub $53 (width $3)))))))) False)) (normalize $0)))))))))))) (next $1 $2)))) __list__ (iter (range (fn_6 $4))))) (remove $2 $34))) (__set__ $1))) (choice (totuple $32))))) (fn_4 (fn_6 $0) (sub $34 $1) $40 $41)))) $131) ((lam (fn_1 $0 $129)) (dmirror (__tuple__ (tuple $0)))))))))))))))))))) (x33 $9 $8 $7 $6 $5 $4 $3 $2 $1 $0)))))))))))))))))))": "((lam (lam ((lam (fn_0 $101 $102 (fn_0 $72 $86 (fn_0 $88 $74 (fn_0 $103 $70 (fn_0 $100 $68 (fn_0 $105 $106 (fn_0 $104 $108 (lam (lam (lam (lam (lam (lam (lam (lam (lam (lam (fn_3 (lam (lam (lam (lam (lam (lam (lam (lam (lam (lam (lam (lam (lam (lam (lam (ifElse (isNot $13 $28) ((lam (ifElse (orOp (eq (len $11) 0) (lt $8 2)) ((lam (fn_1 $0 $13)) (dmirror (__tuple__ (tuple $0)))) ((lam (ifElse (eq $0 0) ((lam (fn_1 $0 $14)) (dmirror (__tuple__ (tuple $0)))) ((lam ((lam ((lam ((lam (lam ((lam (fn_0 $118 $119 (lam (lam ((lam (x61 $2 $1)) (x1 (lam (lam (lam (ifElse (isNot $1 $8) ((lam (getItem (__list__ (add_M $11 (choice (totuple (bitAnd (sub $10 $11) (mapply neighbors $11))))) ((lam (x62 $0 $1)) (next $9 $10))) -1)) $125) ((lam ((lam ((lam (ifElse (eq (len $0) 0) ((lam (fn_1 $0 $29)) (dmirror (__tuple__ (tuple $0)))) ((lam ((lam (fn_0 $147 $145 (lam (lam (lam ((lam (x76 $3 $2 $1)) (x1 (lam (lam (lam (lam (ifElse (andOp None (lt $1 $58)) ((lam ((lam ((lam (x77 $2 $0 $1)) (add $0 1))) (issubset_M (shift $14 $1) $39))) (choice (totuple $38))) (ifElse $153 ((lam ((lam (getItem (__list__ (append_M $143 $0) ((lam ((lam ((lam (x34 $0 $3 $1 $2 $31 $157 $30 $4 $27 $15 $17 $29 $159 $158)) (next $59 $60))) (fill $0 $2 $3))) (sub (sub $0 $2) (mapply neighbors $2)))) -1)) (choice $65))) (shift $13 $153)) ((lam (x34 $0 $157 $159 $158 $27 $153 $26 $156 $23 $11 $13 $25 $155 $154)) (next $55 $56))))))))))))) (ifElse (elem (__str__ $146) dir) $146 None))) 0)) (choice (totuple $1))))) (sfilter $147 (lam (andOp (lte (getItem $0 0) (sub $57 (height $3))) (lte (getItem $0 1) (sub $56 (width $3)))))))) False)) (normalize $0)))))))))))) (next $1 $2)))) __list__ (iter (range (fn_6 $4))))) (remove $2 $37))) (__set__ $1))) (choice (totuple $35))))) (fn_4 (fn_6 $0) (sub $37 $1) $43 $44)))) $134) ((lam (fn_1 $0 $132)) (dmirror (__tuple__ (tuple $0)))))))))))))))))))) (x33 $9 $8 $7 $6 $5 $4 $3 $2 $1 $0)))))))))))))))))))) (next $1 $2)))) __list__ (iter (range $7)))"
            },
            "dc_comparison_millis": null
        },
        {
            "body": "(sfilter #3 (lam (andOp (#1 (getItem $0 0) #2) (#1 (getItem $0 1) #0))))",
            "dreamcoder": "#(lambda (lambda (lambda (lambda (sfilter $0 (lambda (andOp ($3 (getItem $0 0) $2) ($3 (getItem $0 1) $4))))))))",
            "arity": 4,
            "name": "fn_10",
            "utility": 48536,
            "final_cost": 5752248,
            "compression_ratio": 1.0085790807350448,
            "cumulative_compression_ratio": 1.382696469276012,
            "num_uses": 61,
            "rewritten": null,
            "rewritten_dreamcoder": null,
            "uses": {
                "fn_10 $7 lt $8 $1": "(sfilter $1 (lam (andOp (lt (getItem $0 0) $9) (lt (getItem $0 1) $8))))"
            },
            "dc_comparison_millis": null
        },
        {
            "body": "(lam (lam (lam (lam (lam (lam (lam (fn_3 #1 (#0 $6 $5 $4 $3 $2 $1 $0)))))))))",
            "dreamcoder": "#(lambda (lambda (lambda (lambda (lambda (lambda (lambda (lambda (lambda (fn_3 $7 ($8 $6 $5 $4 $3 $2 $1 $0)))))))))))",
            "arity": 2,
            "name": "fn_11",
            "utility": 47022,
            "final_cost": 5704410,
            "compression_ratio": 1.0083861433522485,
            "cumulative_compression_ratio": 1.3942919600800086,
            "num_uses": 67,
            "rewritten": null,
            "rewritten_dreamcoder": null,
            "uses": {
                "fn_11 x26 (lam (lam (lam (lam (lam (lam (lam (lam (lam (lam (lam (lam (ifElse (andOp (lt $0 $14) (lt $1 $18)) ((lam ((lam ((lam ((lam (ifElse (eq (len $0) 0) (x27 $14 $0 $12 $11 $10 $9 $8 $2 $1 $5 $3) ((lam (fn_5 $0 $9 $10 ((lam (ifElse (issubset_M $0 $13) ((lam ((lam ((lam (x27 $3 $5 $0 $1 $4 $14 $13 $7 $6 $2 $8)) (fill $0 2 $3))) (sub (sub $0 $2) (mapply dneighbors $2)))) (add $0 1)) (x27 $0 $2 $80 $79 $1 $11 $10 $4 $3 $78 $5))) (backdrop (frozenset (__set__ (__tuple__ $11 $10) (__tuple__ (fn_6 (add $11 $4)) (fn_6 (add $10 $3))))))))) (choice (totuple $1))))) (fn_10 (sub $24 $1) lte (sub $25 $2) $77))) (randint 1 (add (floordiv $23 2) 1)))) (randint 1 (add (floordiv $23 2) 1)))) (add $0 1)) ((lam ((lam ((lam ((lam ((lam ((lam ((lam (fn_0 $121 $117 (fn_0 $116 $110 (fn_0 $109 $119 (fn_0 $122 $123 (fn_0 $118 $120 (lam (lam (lam (lam (lam (lam (lam (fn_3 (lam (lam (lam (lam (lam (lam (lam (lam (lam (lam (lam (lam (ifElse (andOp (lt $0 $22) (lt $1 $25)) ((lam ((lam ((lam ((lam (ifElse (eq (len $0) 0) (x68 $14 $0 $12 $11 $10 $9 $8 $2 $1 $5 $3) ((lam (fn_5 $0 $9 $10 ((lam (ifElse (issubset_M $0 $13) ((lam ((lam ((lam (x68 $3 $5 $0 $1 $4 $14 $13 $7 $6 $2 $8)) (fill $0 (choice $30) $3))) (sub (sub $0 $2) (mapply dneighbors $2)))) (add $0 1)) (x68 $0 $2 $148 $147 $1 $11 $10 $4 $3 $146 $5))) (backdrop (frozenset (__set__ (__tuple__ $11 $10) (__tuple__ (fn_6 (add $11 $4)) (fn_6 (add $10 $3))))))))) (choice (totuple $1))))) (fn_10 (sub $51 $1) lte (sub $52 $2) $145))) (randint 1 (add (floordiv $50 2) 1)))) (randint 1 (add (floordiv $50 2) 1)))) (add $0 1)) ((lam (fn_2 (range $28) $0 $158 (fn_0 $159 $160 (lam (lam (lam ((lam (x97 $3 $2 $1)) (x1 (lam (lam (lam (lam (ifElse (isNot $2 $7) ((lam ((lam ((lam (x98 $0 $1 $2)) (next $9 $10))) (fill $0 1 (__set__ (getItem $60 (add $1 1)))))) $168) (fn_1 $166 $151)))))))))))))) (canvas $47 (__tuple__ 3 3)))))))))))))))) (x67 $6 $5 $4 $3 $2 $1 $0))))))))))))) (ifElse (elem (__str__ $115) dir) $115 None))) (add $114 1))) (remove $25 $29))) (mul 5 $3))) 0)) 0)) (fn_4 (mul $20 2) 0 $26 $27))) $114))))))))))))))": "(lam (lam (lam (lam (lam (lam (lam (fn_3 (lam (lam (lam (lam (lam (lam (lam (lam (lam (lam (lam (lam (ifElse (andOp (lt $0 $21) (lt $1 $25)) ((lam ((lam ((lam ((lam (ifElse (eq (len $0) 0) (x27 $14 $0 $12 $11 $10 $9 $8 $2 $1 $5 $3) ((lam (fn_5 $0 $9 $10 ((lam (ifElse (issubset_M $0 $13) ((lam ((lam ((lam (x27 $3 $5 $0 $1 $4 $14 $13 $7 $6 $2 $8)) (fill $0 2 $3))) (sub (sub $0 $2) (mapply dneighbors $2)))) (add $0 1)) (x27 $0 $2 $87 $86 $1 $11 $10 $4 $3 $85 $5))) (backdrop (frozenset (__set__ (__tuple__ $11 $10) (__tuple__ (fn_6 (add $11 $4)) (fn_6 (add $10 $3))))))))) (choice (totuple $1))))) (fn_10 (sub $31 $1) lte (sub $32 $2) $84))) (randint 1 (add (floordiv $30 2) 1)))) (randint 1 (add (floordiv $30 2) 1)))) (add $0 1)) ((lam ((lam ((lam ((lam ((lam ((lam ((lam (fn_0 $128 $124 (fn_0 $123 $117 (fn_0 $116 $126 (fn_0 $129 $130 (fn_0 $125 $127 (lam (lam (lam (lam (lam (lam (lam (fn_3 (lam (lam (lam (lam (lam (lam (lam (lam (lam (lam (lam (lam (ifElse (andOp (lt $0 $22) (lt $1 $25)) ((lam ((lam ((lam ((lam (ifElse (eq (len $0) 0) (x68 $14 $0 $12 $11 $10 $9 $8 $2 $1 $5 $3) ((lam (fn_5 $0 $9 $10 ((lam (ifElse (issubset_M $0 $13) ((lam ((lam ((lam (x68 $3 $5 $0 $1 $4 $14 $13 $7 $6 $2 $8)) (fill $0 (choice $30) $3))) (sub (sub $0 $2) (mapply dneighbors $2)))) (add $0 1)) (x68 $0 $2 $155 $154 $1 $11 $10 $4 $3 $153 $5))) (backdrop (frozenset (__set__ (__tuple__ $11 $10) (__tuple__ (fn_6 (add $11 $4)) (fn_6 (add $10 $3))))))))) (choice (totuple $1))))) (fn_10 (sub $58 $1) lte (sub $59 $2) $152))) (randint 1 (add (floordiv $57 2) 1)))) (randint 1 (add (floordiv $57 2) 1)))) (add $0 1)) ((lam (fn_2 (range $28) $0 $165 (fn_0 $166 $167 (lam (lam (lam ((lam (x97 $3 $2 $1)) (x1 (lam (lam (lam (lam (ifElse (isNot $2 $7) ((lam ((lam ((lam (x98 $0 $1 $2)) (next $9 $10))) (fill $0 1 (__set__ (getItem $67 (add $1 1)))))) $175) (fn_1 $173 $158)))))))))))))) (canvas $54 (__tuple__ 3 3)))))))))))))))) (x67 $6 $5 $4 $3 $2 $1 $0))))))))))))) (ifElse (elem (__str__ $122) dir) $122 None))) (add $121 1))) (remove $32 $36))) (mul 5 $3))) 0)) 0)) (fn_4 (mul $27 2) 0 $33 $34))) $121)))))))))))))) (x26 $6 $5 $4 $3 $2 $1 $0)))))))))"
            },
            "dc_comparison_millis": null
        },
        {
            "body": "(add #0 1)",
            "dreamcoder": "#(lambda (add $0 1))",
            "arity": 1,
            "name": "fn_12",
            "utility": 44945,
            "final_cost": 5659263,
            "compression_ratio": 1.0079775405384057,
            "cumulative_compression_ratio": 1.40541498071392,
            "num_uses": 447,
            "rewritten": null,
            "rewritten_dreamcoder": null,
            "uses": {
                "fn_12 $0": "(add $0 1)"
            },
            "dc_comparison_millis": null
        },
        {
            "body": "(canvas #2 (__tuple__ #1 #0))",
            "dreamcoder": "#(lambda (lambda (lambda (canvas $0 (__tuple__ $1 $2)))))",
            "arity": 3,
            "name": "fn_13",
            "utility": 41509,
            "final_cost": 5617550,
            "compression_ratio": 1.0074254790789579,
            "cumulative_compression_ratio": 1.4158508602504651,
            "num_uses": 413,
            "rewritten": null,
            "rewritten_dreamcoder": null,
            "uses": {
                "fn_13 $2 $3 $1": "(canvas $1 (__tuple__ $3 $2))"
            },
            "dc_comparison_millis": null
        },
        {
            "body": "(frozenset (__set__ (__tuple__ #3 #1) (__tuple__ (fn_6 (add #3 #2)) (fn_6 (add #1 #0)))))",
            "dreamcoder": "#(lambda (lambda (lambda (lambda (frozenset (__set__ (__tuple__ $0 $2) (__tuple__ (fn_6 (add $0 $1)) (fn_6 (add $2 $3)))))))))",
            "arity": 4,
            "name": "fn_14",
            "utility": 40092,
            "final_cost": 5576645,
            "compression_ratio": 1.0073350553962104,
            "cumulative_compression_ratio": 1.4262362047431745,
            "num_uses": 45,
            "rewritten": null,
            "rewritten_dreamcoder": null,
            "uses": {
                "fn_14 $11 $9 $12 $10": "(frozenset (__set__ (__tuple__ $10 $9) (__tuple__ (fn_6 (add $10 $12)) (fn_6 (add $9 $11)))))"
            },
            "dc_comparison_millis": null
        },
        {
            "body": "(getItem (__list__ (add_M #1 (choice (totuple (bitAnd (sub #3 #1) (mapply #2 #1))))) #0) -1)",
            "dreamcoder": "#(lambda (lambda (lambda (lambda (getItem (__list__ (add_M $2 (choice (totuple (bitAnd (sub $0 $2) (mapply $1 $2))))) $3) -1)))))",
            "arity": 4,
            "name": "fn_15",
            "utility": 38476,
            "final_cost": 5537255,
            "compression_ratio": 1.0071136330185264,
            "cumulative_compression_ratio": 1.4363819257014534,
            "num_uses": 39,
            "rewritten": null,
            "rewritten_dreamcoder": null,
            "uses": {
                "fn_15 ((lam (x59 $12 $17 $163 $164 $165 $167 $16 $9 $0 $14 $13 $24 $23 $15 $11 $166 $18)) (normalize $0)) $0 dneighbors $11": "(getItem (__list__ (add_M $0 (choice (totuple (bitAnd (sub $11 $0) (mapply dneighbors $0))))) ((lam (x59 $12 $17 $163 $164 $165 $167 $16 $9 $0 $14 $13 $24 $23 $15 $11 $166 $18)) (normalize $0))) -1)"
            },
            "dc_comparison_millis": null
        },
        {
            "body": "(fn_4 30)",
            "dreamcoder": "#(fn_4 30)",
            "arity": 0,
            "name": "fn_16",
            "utility": 34240,
            "final_cost": 5502814,
            "compression_ratio": 1.0062587977714674,
            "cumulative_compression_ratio": 1.4453719496970097,
            "num_uses": 341,
            "rewritten": null,
            "rewritten_dreamcoder": null,
            "uses": {
                "fn_16 ": "(fn_4 30)"
            },
            "dc_comparison_millis": null
        },
        {
            "body": "((lam ((lam ((lam (fn_1 $0 $1)) (#0 $0))) (#0 $0))) (choice (__tuple__ identity rot90 rot180 rot270)))",
            "dreamcoder": "#(lambda ((lambda ((lambda ((lambda (fn_1 $0 $1)) ($2 $0))) ($1 $0))) (choice (__tuple__ identity rot90 rot180 rot270))))",
            "arity": 1,
            "name": "fn_17",
            "utility": 33419,
            "final_cost": 5468280,
            "compression_ratio": 1.0063153313290467,
            "cumulative_compression_ratio": 1.4544999524530564,
            "num_uses": 31,
            "rewritten": null,
            "rewritten_dreamcoder": null,
            "uses": {
                "fn_17 x101": "((lam ((lam ((lam (fn_1 $0 $1)) (x101 $0))) (x101 $0))) (choice (__tuple__ identity rot90 rot180 rot270)))"
            },
            "dc_comparison_millis": null
        },
        {
            "body": "(ifElse (choice (__tuple__ True False)) ((lam ((lam (fn_1 $0 $1)) (dmirror $0))) (dmirror #2)) (fn_1 #1 #0))",
            "dreamcoder": "#(lambda (lambda (lambda (ifElse (choice (__tuple__ True False)) ((lambda ((lambda (fn_1 $0 $1)) (dmirror $0))) (dmirror $0)) (fn_1 $1 $2)))))",
            "arity": 3,
            "name": "fn_18",
            "utility": 29948,
            "final_cost": 5437116,
            "compression_ratio": 1.0057317151225025,
            "cumulative_compression_ratio": 1.4628367318262108,
            "num_uses": 28,
            "rewritten": null,
            "rewritten_dreamcoder": null,
            "uses": {
                "fn_18 $115 $116 $0": "(ifElse (choice (__tuple__ True False)) ((lam ((lam (fn_1 $0 $1)) (dmirror $0))) (dmirror $0)) (fn_1 $116 $115))"
            },
            "dc_comparison_millis": null
        },
        {
            "body": "(fn_4 #0 1)",
            "dreamcoder": "#(lambda (fn_4 $0 1))",
            "arity": 1,
            "name": "fn_19",
            "utility": 29088,
            "final_cost": 5407826,
            "compression_ratio": 1.0054162245604796,
            "cumulative_compression_ratio": 1.4707597840610998,
            "num_uses": 290,
            "rewritten": null,
            "rewritten_dreamcoder": null,
            "uses": {
                "fn_19 $1": "(fn_4 $1 1)"
            },
            "dc_comparison_millis": null
        },
        {
            "body": "(ifElse (isNot #1 #0))",
            "dreamcoder": "#(lambda (lambda (ifElse (isNot $0 $1))))",
            "arity": 2,
            "name": "fn_20",
            "utility": 28784,
            "final_cost": 5378839,
            "compression_ratio": 1.0053890811753243,
            "cumulative_compression_ratio": 1.4786858279268076,
            "num_uses": 287,
            "rewritten": null,
            "rewritten_dreamcoder": null,
            "uses": {
                "fn_20 $5 $1": "(ifElse (isNot $1 $5))"
            },
            "dc_comparison_millis": null
        },
        {
            "body": "(connect (__tuple__ #3 #2) (__tuple__ #1 #0))",
            "dreamcoder": "#(lambda (lambda (lambda (lambda (connect (__tuple__ $0 $1) (__tuple__ $2 $3))))))",
            "arity": 4,
            "name": "fn_21",
            "utility": 28580,
            "final_cost": 5349953,
            "compression_ratio": 1.0053992997695493,
            "cumulative_compression_ratio": 1.4866696959767687,
            "num_uses": 143,
            "rewritten": null,
            "rewritten_dreamcoder": null,
            "uses": {
                "fn_21 (sub (add $3 $5) 2) $1 (fn_12 $3) $1": "(connect (__tuple__ $1 (fn_12 $3)) (__tuple__ $1 (sub (add $3 $5) 2)))"
            },
            "dc_comparison_millis": null
        },
        {
            "body": "(ifElse (eq (len #0) 0))",
            "dreamcoder": "#(lambda (ifElse (eq (len $0) 0)))",
            "arity": 1,
            "name": "fn_22",
            "utility": 28381,
            "final_cost": 5321168,
            "compression_ratio": 1.0054095266302436,
            "cumulative_compression_ratio": 1.4947118752875312,
            "num_uses": 95,
            "rewritten": null,
            "rewritten_dreamcoder": null,
            "uses": {
                "fn_22 $0": "(ifElse (eq (len $0) 0))"
            },
            "dc_comparison_millis": null
        },
        {
            "body": "(fn_0 #3 #2 (lam (lam (lam ((lam (#1 $3 $2 $1)) (x1 (lam #0)))))))",
            "dreamcoder": "#(lambda (lambda (lambda (lambda (fn_0 $0 $1 (lambda (lambda (lambda ((lambda ($6 $3 $2 $1)) (x1 (lambda $7)))))))))))",
            "arity": 4,
            "name": "fn_23",
            "utility": 28117,
            "final_cost": 5292538,
            "compression_ratio": 1.0054095029643624,
            "cumulative_compression_ratio": 1.5027975236077669,
            "num_uses": 70,
            "rewritten": null,
            "rewritten_dreamcoder": null,
            "uses": {
                "fn_23 (lam (lam (lam (fn_20 $3 $2 ((lam ((lam ((lam (x58 $0 $1 $2)) (next $5 $6))) (fill $0 linc $1))) $107) (fn_1 $105 $91))))) x57 $103 $102": "(fn_0 $102 $103 (lam (lam (lam ((lam (x57 $3 $2 $1)) (x1 (lam (lam (lam (lam (fn_20 $7 $2 ((lam ((lam ((lam (x58 $0 $1 $2)) (next $9 $10))) (fill $0 linc $1))) $111) (fn_1 $109 $95))))))))))))"
            },
            "dc_comparison_millis": null
        },
        {
            "body": "(fill #1 linc (ofcolor #0 linc))",
            "dreamcoder": "#(lambda (lambda (fill $0 linc (ofcolor $1 linc))))",
            "arity": 2,
            "name": "fn_24",
            "utility": 25047,
            "final_cost": 5267086,
            "compression_ratio": 1.0048322734810102,
            "cumulative_compression_ratio": 1.5100594522284245,
            "num_uses": 84,
            "rewritten": null,
            "rewritten_dreamcoder": null,
            "uses": {
                "fn_24 (hmirror (vmirror $3)) $0": "(fill $0 linc (ofcolor (hmirror (vmirror $3)) linc))"
            },
            "dc_comparison_millis": null
        },
        {
            "body": "(lam ((lam ((lam ((lam ((lam ((lam (x23 $0 $3 $5 $2 $1 $4)) #3)) (difference $0 $2))) (fill $0 #2 $1))) (sample #1 $1))) #0))",
            "dreamcoder": "#(lambda (lambda (lambda (lambda (lambda ((lambda ((lambda ((lambda ((lambda ((lambda (x23 $0 $3 $5 $2 $1 $4)) $5)) (difference $0 $2))) (fill $0 $4 $1))) (sample $4 $1))) $4))))))",
            "arity": 4,
            "name": "fn_25",
            "utility": 24036,
            "final_cost": 5241526,
            "compression_ratio": 1.004876442471143,
            "cumulative_compression_ratio": 1.517423170275222,
            "num_uses": 18,
            "rewritten": null,
            "rewritten_dreamcoder": null,
            "uses": {
                "fn_25 (fn_19 (max 1 (floordiv (len $57) $13)) $20 $21) $57 $0 (next $9 $10)": "(lam ((lam ((lam ((lam ((lam ((lam (x23 $0 $3 $5 $2 $1 $4)) (next $14 $15))) (difference $0 $2))) (fill $0 $3 $1))) (sample $59 $1))) (fn_19 (max 1 (floordiv (len $58) $14)) $21 $22)))"
            },
            "dc_comparison_millis": null
        },
        {
            "body": "(getItem (__listComp__ #3 (__tuple__ bgc #2 #1) (__list__ (sample #0 3))) 0)",
            "dreamcoder": "#(lambda (lambda (lambda (lambda (getItem (__listComp__ $0 (__tuple__ bgc $1 $2) (__list__ (sample $3 3))) 0)))))",
            "arity": 4,
            "name": "fn_26",
            "utility": 23227,
            "final_cost": 5217488,
            "compression_ratio": 1.004607197946598,
            "cumulative_compression_ratio": 1.5244142391894344,
            "num_uses": 34,
            "rewritten": null,
            "rewritten_dreamcoder": null,
            "uses": {
                "fn_26 $4 c2 c1 ((lam ((lam ((lam ((lam ((lam ((lam ((lam ((lam ((lam ((lam ((lam ((lam ((lam ((lam ((lam ((lam ((lam ((lam ((lam ((lam ((lam ((lam ((lam ((lam ((lam (fn_18 $65 $66 $0)) (fill $65 8 (shift $1 $5)))) (backdrop (frozenset (__set__ (__tuple__ (fn_12 $18) (fn_12 (max $16 $14))) (__tuple__ (fn_6 $21) (fn_6 (min $15 $13)))))))) (paint $63 $2))) (fn_13 $24 $25 bgc))) (shift $0 $1))) (__tuple__ $2 $1))) (randint 0 (sub $21 $19)))) (randint 0 (sub $21 $19)))) (asobject $1))) (fill $0 c2 $3))) (fill $45 c1 $3))) (fn_13 $14 $15 bgc))) (backdrop (frozenset (__set__ (__tuple__ $10 $3) (__tuple__ (fn_6 $14) $2)))))) (backdrop (frozenset (__set__ (__tuple__ 0 $4) (__tuple__ $6 $3)))))) (randint (fn_12 $4) (fn_6 $11)))) (randint 0 (fn_6 $3)))) (randint (fn_12 $2) (fn_6 $9)))) (randint 0 (fn_6 $1)))) (randint 1 (sub $7 2)))) (getItem $2 $1))) (fn_4 (fn_6 (len $1)) 0 $10 $11))) (getItemWithStep (getItemUpTo $0 (fn_6 $2)) 0 -1 -1))) (getItem $21 $1))) (fn_4 (fn_6 $3) 2 $7 $8))) (interval 0 $2 1))": "(getItem (__listComp__ ((lam ((lam ((lam ((lam ((lam ((lam ((lam ((lam ((lam ((lam ((lam ((lam ((lam ((lam ((lam ((lam ((lam ((lam ((lam ((lam ((lam ((lam ((lam ((lam ((lam (fn_18 $65 $66 $0)) (fill $65 8 (shift $1 $5)))) (backdrop (frozenset (__set__ (__tuple__ (fn_12 $18) (fn_12 (max $16 $14))) (__tuple__ (fn_6 $21) (fn_6 (min $15 $13)))))))) (paint $63 $2))) (fn_13 $24 $25 bgc))) (shift $0 $1))) (__tuple__ $2 $1))) (randint 0 (sub $21 $19)))) (randint 0 (sub $21 $19)))) (asobject $1))) (fill $0 c2 $3))) (fill $45 c1 $3))) (fn_13 $14 $15 bgc))) (backdrop (frozenset (__set__ (__tuple__ $10 $3) (__tuple__ (fn_6 $14) $2)))))) (backdrop (frozenset (__set__ (__tuple__ 0 $4) (__tuple__ $6 $3)))))) (randint (fn_12 $4) (fn_6 $11)))) (randint 0 (fn_6 $3)))) (randint (fn_12 $2) (fn_6 $9)))) (randint 0 (fn_6 $1)))) (randint 1 (sub $7 2)))) (getItem $2 $1))) (fn_4 (fn_6 (len $1)) 0 $10 $11))) (getItemWithStep (getItemUpTo $0 (fn_6 $2)) 0 -1 -1))) (getItem $21 $1))) (fn_4 (fn_6 $3) 2 $7 $8))) (interval 0 $2 1)) (__tuple__ bgc c1 c2) (__list__ (sample $4 3))) 0)"
            },
            "dc_comparison_millis": null
        },
        {
            "body": "(ifElse (elem (__str__ #0) dir) #0 None)",
            "dreamcoder": "#(lambda (ifElse (elem (__str__ $0) dir) $0 None))",
            "arity": 1,
            "name": "fn_27",
            "utility": 22219,
            "final_cost": 5194763,
            "compression_ratio": 1.0043745980326726,
            "cumulative_compression_ratio": 1.5310829387211706,
            "num_uses": 45,
            "rewritten": null,
            "rewritten_dreamcoder": null,
            "uses": {
                "fn_27 $106": "(ifElse (elem (__str__ $106) dir) $106 None)"
            },
            "dc_comparison_millis": null
        },
        {
            "body": "((lam (#3 (fn_13 #2 #1 #0))) (fn_13 #2 #1 #0))",
            "dreamcoder": "#(lambda (lambda (lambda (lambda ((lambda ($1 (fn_13 $2 $3 $4))) (fn_13 $1 $2 $3))))))",
            "arity": 4,
            "name": "fn_28",
            "utility": 20446,
            "final_cost": 5174108,
            "compression_ratio": 1.0039919924361842,
            "cumulative_compression_ratio": 1.5371950102317162,
            "num_uses": 62,
            "rewritten": null,
            "rewritten_dreamcoder": null,
            "uses": {
                "fn_28 bgc $4 $3 (lam ((lam ((lam ((lam ((lam ((lam ((lam ((lam ((lam ((lam ((lam ((lam ((lam ((lam (fn_18 $44 $45 $0)) (paint $45 $3))) (fill $43 cb (__set__ (__tuple__ (fn_6 (add $5 (mul 2 $14))) (add $4 2)))))) (fill $42 ca (__set__ (__tuple__ $4 (add $3 2)))))) (shift $0 (__tuple__ $3 $2)))) (asobject $3))) (randint 0 (sub $11 5)))) (randint 0 (sub $11 (mul 2 $9))))) (vconcat $2 (hmirror $1)))) (replace $1 ca cb))) (fill $27 ca (__set__ (__tuple__ (fn_6 $6) 4))))) (fill $26 ca (__set__ (__tuple__ (fn_6 $5) 0))))) (fill $25 ca (fn_21 4 (sub $4 2) 0 (sub $4 2))))) (fill $24 ca (fn_21 2 (sub $3 2) 2 0))))": "((lam ((lam ((lam ((lam ((lam ((lam ((lam ((lam ((lam ((lam ((lam ((lam ((lam ((lam ((lam (fn_18 $45 $46 $0)) (paint $46 $3))) (fill $44 cb (__set__ (__tuple__ (fn_6 (add $5 (mul 2 $15))) (add $4 2)))))) (fill $43 ca (__set__ (__tuple__ $4 (add $3 2)))))) (shift $0 (__tuple__ $3 $2)))) (asobject $3))) (randint 0 (sub $12 5)))) (randint 0 (sub $12 (mul 2 $10))))) (vconcat $2 (hmirror $1)))) (replace $1 ca cb))) (fill $28 ca (__set__ (__tuple__ (fn_6 $7) 4))))) (fill $27 ca (__set__ (__tuple__ (fn_6 $6) 0))))) (fill $26 ca (fn_21 4 (sub $5 2) 0 (sub $5 2))))) (fill $25 ca (fn_21 2 (sub $4 2) 2 0)))) (fn_13 $4 $5 bgc))) (fn_13 $3 $4 bgc))"
            },
            "dc_comparison_millis": null
        },
        {
            "body": "(lam (lam (fn_3 #1 (#0 $1 $0))))",
            "dreamcoder": "#(lambda (lambda (lambda (lambda (fn_3 $2 ($3 $1 $0))))))",
            "arity": 2,
            "name": "fn_29",
            "utility": 18666,
            "final_cost": 5155136,
            "compression_ratio": 1.0036802132863225,
            "cumulative_compression_ratio": 1.5428522157320397,
            "num_uses": 93,
            "rewritten": null,
            "rewritten_dreamcoder": null,
            "uses": {
                "fn_29 x38 (lam (lam (lam (lam (lam (lam (lam (fn_20 $7 $5 ((lam ((lam ((lam ((lam ((lam ((lam ((lam ((lam (x39 $0 $2 $1 $6 $7 $5)) (next $14 $15))) (fill $0 dotc (__set__ (__tuple__ 0 $6))))) (fill $0 dotc (__set__ (__tuple__ (fn_12 $4) $5))))) (fill $86 linc $2))) (fill $84 linc $1))) (fn_21 $2 $1 $2 0))) (randint 1 (sub $26 3)))) $83) (fn_17 x54)))))))))": "(lam (lam (fn_3 (lam (lam (lam (lam (lam (lam (lam (fn_20 $9 $5 ((lam ((lam ((lam ((lam ((lam ((lam ((lam ((lam (x39 $0 $2 $1 $6 $7 $5)) (next $16 $17))) (fill $0 dotc (__set__ (__tuple__ 0 $6))))) (fill $0 dotc (__set__ (__tuple__ (fn_12 $4) $5))))) (fill $88 linc $2))) (fill $86 linc $1))) (fn_21 $2 $1 $2 0))) (randint 1 (sub $28 3)))) $85) (fn_17 x54))))))))) (x38 $1 $0))))"
            },
            "dc_comparison_millis": null
        },
        {
            "body": "(floordiv #0 2)",
            "dreamcoder": "#(lambda (floordiv $0 2))",
            "arity": 1,
            "name": "fn_30",
            "utility": 18281,
            "final_cost": 5136653,
            "compression_ratio": 1.0035982574645397,
            "cumulative_compression_ratio": 1.548403795233979,
            "num_uses": 183,
            "rewritten": null,
            "rewritten_dreamcoder": null,
            "uses": {
                "fn_30 $1": "(floordiv $1 2)"
            },
            "dc_comparison_millis": null
        },
        {
            "body": "(__tuple__ identity dmirror cmirror vmirror hmirror rot90 rot180 rot270)",
            "dreamcoder": "#(__tuple__ identity dmirror cmirror vmirror hmirror rot90 rot180 rot270)",
            "arity": 0,
            "name": "fn_31",
            "utility": 17676,
            "final_cost": 5118069,
            "compression_ratio": 1.0036310569474542,
            "cumulative_compression_ratio": 1.554026137592128,
            "num_uses": 23,
            "rewritten": null,
            "rewritten_dreamcoder": null,
            "uses": {
                "fn_31 ": "(__tuple__ identity dmirror cmirror vmirror hmirror rot90 rot180 rot270)"
            },
            "dc_comparison_millis": null
        },
        {
            "body": "(#3 (#1 #2) (#1 #0))",
            "dreamcoder": "#(lambda (lambda (lambda (lambda ($0 ($2 $1) ($2 $3))))))",
            "arity": 4,
            "name": "fn_32",
            "utility": 16783,
            "final_cost": 5101282,
            "compression_ratio": 1.0032907414253907,
            "cumulative_compression_ratio": 1.5591400357792422,
            "num_uses": 206,
            "rewritten": null,
            "rewritten_dreamcoder": null,
            "uses": {
                "fn_32 $1 (__tuple__ $3) $2 (__list__ (__tuple__ $4 $2) (__tuple__ $4 $1))": "(__list__ (__tuple__ $4 $2) (__tuple__ $4 $1) (__tuple__ $3 $2) (__tuple__ $3 $1))"
            },
            "dc_comparison_millis": null
        },
        {
            "body": "(choice (totuple #0))",
            "dreamcoder": "#(lambda (choice (totuple $0)))",
            "arity": 1,
            "name": "fn_33",
            "utility": 15857,
            "final_cost": 5085223,
            "compression_ratio": 1.0031579736031242,
            "cumulative_compression_ratio": 1.564063758855807,
            "num_uses": 159,
            "rewritten": null,
            "rewritten_dreamcoder": null,
            "uses": {
                "fn_33 $0": "(choice (totuple $0))"
            },
            "dc_comparison_millis": null
        },
        {
            "body": "(lam (lam (lam (lam (lam (lam (fn_11 (#1 $5 $4 $3 $2 $1 $0) #0)))))))",
            "dreamcoder": "#(lambda (lambda (lambda (lambda (lambda (lambda (lambda (lambda (fn_11 ($6 $5 $4 $3 $2 $1 $0) $7)))))))))",
            "arity": 2,
            "name": "fn_34",
            "utility": 15810,
            "final_cost": 5068699,
            "compression_ratio": 1.003260008140156,
            "cumulative_compression_ratio": 1.5691626194414,
            "num_uses": 27,
            "rewritten": null,
            "rewritten_dreamcoder": null,
            "uses": {
                "fn_34 (lam (lam (lam (lam (lam (lam (lam (lam (lam (lam (lam (lam (lam (lam (lam (lam (lam (lam (lam (lam (ifElse True ((lam ((lam (fn_5 (sample $25 2) $16 $18 ((lam ((lam ((lam ((lam ((lam ((lam ((lam ((lam (fn_2 (range $2) $0 $114 (fn_0 $141 $117 (fn_0 $155 $148 (fn_0 $147 $121 (lam (fn_29 (x65 $0) (lam (lam (lam (lam (lam (lam (lam (lam (fn_20 $9 $6 ((lam (fn_22 $3 ((lam (x66 $0 $7 $6 $5 $4 $1 $2)) (next $10 $11)) ((lam ((lam ((lam ((lam (fn_5 (sample $20 2) $133 $132 ((lam ((lam ((lam ((lam (x66 $0 $3 $2 $1 $4 $8 $7)) (next $17 $18))) (fill $0 $42 (fn_21 $1 $6 $2 $6)))) (randint $0 (fn_6 $25)))) (randint 0 $0)))) (remove (fn_6 $3) $0))) (remove (fn_12 $2) $130))) (remove $1 $129))) (choice $128)))) $131) (fn_2 (range $11) $0 $153 (fn_0 $151 $156 (fn_0 $165 $158 (fn_0 $157 $160 (lam (fn_29 (x94 $0) (lam (lam (lam (lam (lam (lam (lam (lam (fn_20 $9 $6 ((lam (fn_22 $3 ((lam (x95 $0 $7 $6 $5 $4 $1 $2)) (next $10 $11)) ((lam ((lam ((lam ((lam (fn_5 (sample $29 2) $172 $171 ((lam ((lam ((lam ((lam (x95 $0 $3 $2 $1 $4 $8 $7)) (next $17 $18))) (fill $0 $52 (fn_21 $6 $1 $6 $2)))) (randint $0 (fn_6 $36)))) (randint 0 $0)))) (remove (fn_6 $3) $0))) (remove (fn_12 $2) $169))) (remove $1 $168))) (choice $167)))) $170) ((lam ((lam ((lam (ifElse (gt (len $0) 0) ((lam ((lam ((lam ((lam (fn_1 $0 $2)) (replace $0 $53 3))) (fill $1 2 $3))) (fill $0 $49 $1))) (sub (mapply neighbors $1) $1)) (x25 $169 $170 $49 $1 $47 $177 $32 $27 $139 $28 $168 $136 $165 $30 $24 $23 $2 $0 $31))) (toindices (mfilter $1 (compose flip (rbind bordering $177)))))) (colorfilter $1 $48))) (objects $175 T F F))))))))))))))))))))))))))))))))) (sub $7 $1))) (randint (floordiv $6 3) (mul (floordiv $6 3) 2)))) (interval 1 (fn_6 $6) 1))) (interval 1 (fn_6 $6) 1))) (interval 0 $5 1))) (interval 0 $3 1))) (fn_13 $2 $3 $20))) (fn_4 (min $2 $1) 4 $27 $28)))) (fn_16 5 $26 $27))) (fn_16 5 $25 $26)) ((lam ((lam ((lam ((lam (fn_1 $0 $2)) (replace $0 $20 3))) (fill $1 2 $145))) (fill $0 $16 $1))) (sub (mapply neighbors $143) $143))))))))))))))))))))))) (x24 $1 $0)": "(lam (lam (lam (lam (lam (lam (fn_11 (x24 $7 $6 $5 $4 $3 $2 $1 $0) (lam (lam (lam (lam (lam (lam (lam (lam (lam (lam (lam (lam (lam (lam (lam (lam (lam (lam (lam (lam (ifElse True ((lam ((lam (fn_5 (sample $31 2) $16 $18 ((lam ((lam ((lam ((lam ((lam ((lam ((lam ((lam (fn_2 (range $2) $0 $120 (fn_0 $147 $123 (fn_0 $161 $154 (fn_0 $153 $127 (lam (fn_29 (x65 $0) (lam (lam (lam (lam (lam (lam (lam (lam (fn_20 $9 $6 ((lam (fn_22 $3 ((lam (x66 $0 $7 $6 $5 $4 $1 $2)) (next $10 $11)) ((lam ((lam ((lam ((lam (fn_5 (sample $20 2) $139 $138 ((lam ((lam ((lam ((lam (x66 $0 $3 $2 $1 $4 $8 $7)) (next $17 $18))) (fill $0 $42 (fn_21 $1 $6 $2 $6)))) (randint $0 (fn_6 $25)))) (randint 0 $0)))) (remove (fn_6 $3) $0))) (remove (fn_12 $2) $136))) (remove $1 $135))) (choice $134)))) $137) (fn_2 (range $11) $0 $159 (fn_0 $157 $162 (fn_0 $171 $164 (fn_0 $163 $166 (lam (fn_29 (x94 $0) (lam (lam (lam (lam (lam (lam (lam (lam (fn_20 $9 $6 ((lam (fn_22 $3 ((lam (x95 $0 $7 $6 $5 $4 $1 $2)) (next $10 $11)) ((lam ((lam ((lam ((lam (fn_5 (sample $29 2) $178 $177 ((lam ((lam ((lam ((lam (x95 $0 $3 $2 $1 $4 $8 $7)) (next $17 $18))) (fill $0 $52 (fn_21 $6 $1 $6 $2)))) (randint $0 (fn_6 $36)))) (randint 0 $0)))) (remove (fn_6 $3) $0))) (remove (fn_12 $2) $175))) (remove $1 $174))) (choice $173)))) $176) ((lam ((lam ((lam (ifElse (gt (len $0) 0) ((lam ((lam ((lam ((lam (fn_1 $0 $2)) (replace $0 $53 3))) (fill $1 2 $3))) (fill $0 $49 $1))) (sub (mapply neighbors $1) $1)) (x25 $175 $176 $49 $1 $47 $183 $32 $27 $145 $28 $174 $142 $171 $30 $24 $23 $2 $0 $31))) (toindices (mfilter $1 (compose flip (rbind bordering $183)))))) (colorfilter $1 $48))) (objects $181 T F F))))))))))))))))))))))))))))))))) (sub $7 $1))) (randint (floordiv $6 3) (mul (floordiv $6 3) 2)))) (interval 1 (fn_6 $6) 1))) (interval 1 (fn_6 $6) 1))) (interval 0 $5 1))) (interval 0 $3 1))) (fn_13 $2 $3 $20))) (fn_4 (min $2 $1) 4 $33 $34)))) (fn_16 5 $32 $33))) (fn_16 5 $31 $32)) ((lam ((lam ((lam ((lam (fn_1 $0 $2)) (replace $0 $20 3))) (fill $1 2 $151))) (fill $0 $16 $1))) (sub (mapply neighbors $149) $149))))))))))))))))))))))))))))))"
            },
            "dc_comparison_millis": null
        },
        {
            "body": "(lam ((lam ((lam ((lam (#3 $0 $3 $2 $1)) (next #2 #1))) (#0 $0))) (#0 $0)))",
            "dreamcoder": "#(lambda (lambda (lambda (lambda (lambda ((lambda ((lambda ((lambda ($4 $0 $3 $2 $1)) (next $4 $5))) ($5 $0))) ($4 $0)))))))",
            "arity": 4,
            "name": "fn_35",
            "utility": 15638,
            "final_cost": 5052346,
            "compression_ratio": 1.0032367141917833,
            "cumulative_compression_ratio": 1.5742415503609617,
            "num_uses": 23,
            "rewritten": null,
            "rewritten_dreamcoder": null,
            "uses": {
                "fn_35 x111 $6 $5 x106": "(lam ((lam ((lam ((lam (x106 $0 $3 $2 $1)) (next $8 $9))) (x111 $0))) (x111 $0)))"
            },
            "dc_comparison_millis": null
        },
        {
            "body": "(lam ((lam (#3 (choice (__tuple__ $1 (sub #2 $1))))) (fn_4 (fn_30 #2) 0 #1 #0)))",
            "dreamcoder": "#(lambda (lambda (lambda (lambda (lambda ((lambda ($2 (choice (__tuple__ $1 (sub $3 $1))))) (fn_4 (fn_30 $2) 0 $3 $4)))))))",
            "arity": 4,
            "name": "fn_36",
            "utility": 15277,
            "final_cost": 5036255,
            "compression_ratio": 1.0031950328170436,
            "cumulative_compression_ratio": 1.5792713037763186,
            "num_uses": 27,
            "rewritten": null,
            "rewritten_dreamcoder": null,
            "uses": {
                "fn_36 $6 $5 (mul $3 $2) (lam ((lam ((lam ((lam ((lam ((lam ((lam ((lam ((lam ((lam ((lam ((lam ((lam ((lam ((lam ((lam ((lam ((lam ((lam ((lam ((lam ((lam ((lam ((lam ((lam ((lam ((lam ((lam (fn_1 $9 $0)) (paint $0 (shift $5 (__tuple__ 0 0))))) (paint $69 (shift $5 (__tuple__ 0 (fn_12 $28)))))) (paint $68 (shift $5 (__tuple__ (fn_12 $28) 0))))) (paint $67 (shift $5 (__tuple__ (fn_12 $27) (fn_12 $26)))))) (fn_13 (fn_12 (mul 2 $25)) (fn_12 (mul 2 $26)) linc))) (asobject (fill $23 c4 $8)))) (asobject (fill $22 c3 $8)))) (asobject (fill $21 c2 $8)))) (asobject (fill $20 c1 $8)))) (fill $0 c4 $4))) (fill $51 c3 $4))) (fill $50 c2 $4))) (fill $16 c1 $4))) (sample (totuple $14) $4))) (sample (totuple $13) $6))) (sample (totuple $12) $8))) (sample (totuple $11) $10))) (min (max 1 $0) (fn_6 (mul $13 $12))))) (choice (__tuple__ $1 (sub (mul $12 $11) $1))))) (fn_4 (fn_30 (mul $11 $10)) 0 $13 $14))) (min (max 1 $0) (fn_6 (mul $10 $9))))) (choice (__tuple__ $1 (sub (mul $9 $8) $1))))) (fn_4 (fn_30 (mul $8 $7)) 0 $10 $11))) (min (max 1 $0) (fn_6 (mul $7 $6))))) (choice (__tuple__ $1 (sub (mul $6 $5) $1))))) (fn_4 (fn_30 (mul $5 $4)) 0 $7 $8))) (min (max 1 $0) (fn_6 (mul $4 $3)))))": "(lam ((lam ((lam ((lam ((lam ((lam ((lam ((lam ((lam ((lam ((lam ((lam ((lam ((lam ((lam ((lam ((lam ((lam ((lam ((lam ((lam ((lam ((lam ((lam ((lam ((lam ((lam ((lam ((lam ((lam (fn_1 $9 $0)) (paint $0 (shift $5 (__tuple__ 0 0))))) (paint $71 (shift $5 (__tuple__ 0 (fn_12 $30)))))) (paint $70 (shift $5 (__tuple__ (fn_12 $30) 0))))) (paint $69 (shift $5 (__tuple__ (fn_12 $29) (fn_12 $28)))))) (fn_13 (fn_12 (mul 2 $27)) (fn_12 (mul 2 $28)) linc))) (asobject (fill $25 c4 $8)))) (asobject (fill $24 c3 $8)))) (asobject (fill $23 c2 $8)))) (asobject (fill $22 c1 $8)))) (fill $0 c4 $4))) (fill $53 c3 $4))) (fill $52 c2 $4))) (fill $18 c1 $4))) (sample (totuple $16) $4))) (sample (totuple $15) $6))) (sample (totuple $14) $8))) (sample (totuple $13) $10))) (min (max 1 $0) (fn_6 (mul $15 $14))))) (choice (__tuple__ $1 (sub (mul $14 $13) $1))))) (fn_4 (fn_30 (mul $13 $12)) 0 $15 $16))) (min (max 1 $0) (fn_6 (mul $12 $11))))) (choice (__tuple__ $1 (sub (mul $11 $10) $1))))) (fn_4 (fn_30 (mul $10 $9)) 0 $12 $13))) (min (max 1 $0) (fn_6 (mul $9 $8))))) (choice (__tuple__ $1 (sub (mul $8 $7) $1))))) (fn_4 (fn_30 (mul $7 $6)) 0 $9 $10))) (min (max 1 $0) (fn_6 (mul $6 $5))))) (choice (__tuple__ $1 (sub (mul $5 $4) $1))))) (fn_4 (fn_30 (mul $4 $3)) 0 $6 $7)))"
            },
            "dc_comparison_millis": null
        },
        {
            "body": "(randint 0 (sub #1 #0))",
            "dreamcoder": "#(lambda (lambda (randint 0 (sub $0 $1))))",
            "arity": 2,
            "name": "fn_37",
            "utility": 14644,
            "final_cost": 5021307,
            "compression_ratio": 1.0029769141779221,
            "cumulative_compression_ratio": 1.583972658911316,
            "num_uses": 74,
            "rewritten": null,
            "rewritten_dreamcoder": null,
            "uses": {
                "fn_37 $9 $11": "(randint 0 (sub $11 $9))"
            },
            "dc_comparison_millis": null
        },
        {
            "body": "(fn_0 #3 #2 (lam (lam ((lam (#1 $2 $1)) (x1 #0)))))",
            "dreamcoder": "#(lambda (lambda (lambda (lambda (fn_0 $0 $1 (lambda (lambda ((lambda ($5 $2 $1)) (x1 $5)))))))))",
            "arity": 4,
            "name": "fn_38",
            "utility": 14584,
            "final_cost": 5006313,
            "compression_ratio": 1.002995018489655,
            "cumulative_compression_ratio": 1.5887166863118634,
            "num_uses": 50,
            "rewritten": null,
            "rewritten_dreamcoder": null,
            "uses": {
                "fn_38 (lam (lam (lam (fn_20 $3 $1 ((lam (fn_15 ((lam (x62 $0 $1)) (next $4 $5)) $6 neighbors $5)) $110) ((lam ((lam ((lam (fn_22 $0 ((lam (fn_1 $0 $24)) (dmirror (__tuple__ (tuple $0)))) ((lam ((lam (fn_23 (lam (lam (lam (ifElse (andOp None (lt $1 $39)) ((lam ((lam ((lam (x77 $2 $0 $1)) (fn_12 $0))) (issubset_M (shift $10 $1) $30))) (fn_33 $29)) (ifElse $134 ((lam ((lam (getItem (__list__ (append_M $124 $0) ((lam ((lam ((lam (x34 $0 $3 $1 $2 $22 $138 $21 $4 $18 $11 $13 $20 $140 $139)) (next $40 $41))) (fill $0 $2 $3))) (sub (sub $0 $2) (mapply neighbors $2)))) -1)) (choice $46))) (shift $9 $134)) ((lam (x34 $0 $138 $140 $139 $18 $134 $17 $137 $14 $7 $9 $16 $136 $135)) (next $36 $37))))))) x76 $130 $132 (fn_27 $131))) 0)) (fn_33 $1)))) (fn_10 (sub $40 (width $2)) lte (sub $41 (height $2)) $132))) False)) (normalize $0)))))) x61 $106 $105": "(fn_0 $105 $106 (lam (lam ((lam (x61 $2 $1)) (x1 (lam (lam (lam (fn_20 $5 $1 ((lam (fn_15 ((lam (x62 $0 $1)) (next $6 $7)) $8 neighbors $7)) $112) ((lam ((lam ((lam (fn_22 $0 ((lam (fn_1 $0 $26)) (dmirror (__tuple__ (tuple $0)))) ((lam ((lam (fn_23 (lam (lam (lam (ifElse (andOp None (lt $1 $41)) ((lam ((lam ((lam (x77 $2 $0 $1)) (fn_12 $0))) (issubset_M (shift $10 $1) $32))) (fn_33 $31)) (ifElse $136 ((lam ((lam (getItem (__list__ (append_M $126 $0) ((lam ((lam ((lam (x34 $0 $3 $1 $2 $24 $140 $23 $4 $20 $11 $13 $22 $142 $141)) (next $42 $43))) (fill $0 $2 $3))) (sub (sub $0 $2) (mapply neighbors $2)))) -1)) (choice $48))) (shift $9 $136)) ((lam (x34 $0 $140 $142 $141 $20 $136 $19 $139 $16 $7 $9 $18 $138 $137)) (next $38 $39))))))) x76 $132 $134 (fn_27 $133))) 0)) (fn_33 $1)))) (fn_10 (sub $42 (width $2)) lte (sub $43 (height $2)) $134))) False)) (normalize $0)))))))))))"
            },
            "dc_comparison_millis": null
        },
        {
            "body": "(lam ((lam ((lam ((lam (#3 (choice (__tuple__ $3 (sub #2 $2))))) (choice (__tuple__ $2 (sub #2 $2))))) (fn_4 (fn_30 #2) 0 #1 #0))) (fn_4 (fn_30 #2) 0 #1 #0)))",
            "dreamcoder": "#(lambda (lambda (lambda (lambda (lambda ((lambda ((lambda ((lambda ($4 (choice (__tuple__ $3 (sub $5 $2))))) (choice (__tuple__ $2 (sub $4 $2))))) (fn_4 (fn_30 $3) 0 $4 $5))) (fn_4 (fn_30 $2) 0 $3 $4)))))))",
            "arity": 4,
            "name": "fn_39",
            "utility": 14152,
            "final_cost": 4990533,
            "compression_ratio": 1.0031619869060078,
            "cumulative_compression_ratio": 1.5937401876713375,
            "num_uses": 6,
            "rewritten": null,
            "rewritten_dreamcoder": null,
            "uses": {
                "fn_39 $11 $10 (mul $8 $7) (lam ((lam ((lam ((lam ((lam ((lam ((lam ((lam ((lam ((lam (fn_18 $47 $48 $0)) (fill $10 2 $1))) (fn_32 (set $4) (sub (set $8)) (set $5) bitAnd))) (hconcat $2 $1))) (fill $7 $8 $2))) (fill $6 $9 $2))) (sample $4 $2))) (sample $3 $2))) (min (max 1 $0) (fn_6 (mul $10 $9))))) (min (max 1 $0) (fn_6 (mul $9 $8)))))": "(lam ((lam ((lam ((lam ((lam ((lam ((lam ((lam ((lam ((lam ((lam ((lam ((lam ((lam (fn_18 $51 $52 $0)) (fill $14 2 $1))) (fn_32 (set $4) (sub (set $12)) (set $5) bitAnd))) (hconcat $2 $1))) (fill $11 $12 $2))) (fill $10 $13 $2))) (sample $8 $2))) (sample $7 $2))) (min (max 1 $0) (fn_6 (mul $14 $13))))) (min (max 1 $0) (fn_6 (mul $13 $12))))) (choice (__tuple__ $3 (sub (mul $12 $11) $2))))) (choice (__tuple__ $2 (sub (mul $11 $10) $2))))) (fn_4 (fn_30 (mul $10 $9)) 0 $12 $13))) (fn_4 (fn_30 (mul $9 $8)) 0 $11 $12)))"
            },
            "dc_comparison_millis": null
        },
        {
            "body": "(sub (sub #2 #0) (mapply #1 #0))",
            "dreamcoder": "#(lambda (lambda (lambda (sub (sub $0 $2) (mapply $1 $2)))))",
            "arity": 3,
            "name": "fn_40",
            "utility": 14137,
            "final_cost": 4976090,
            "compression_ratio": 1.0029024796577233,
            "cumulative_compression_ratio": 1.5983659861457498,
            "num_uses": 45,
            "rewritten": null,
            "rewritten_dreamcoder": null,
            "uses": {
                "fn_40 $1 dneighbors $0": "(sub (sub $0 $1) (mapply dneighbors $1))"
            },
            "dc_comparison_millis": null
        },
        {
            "body": "(fill #2 #1 (__set__ #0))",
            "dreamcoder": "#(lambda (lambda (lambda (fill $0 $1 (__set__ $2)))))",
            "arity": 3,
            "name": "fn_41",
            "utility": 13835,
            "final_cost": 4962051,
            "compression_ratio": 1.002829273620928,
            "cumulative_compression_ratio": 1.6028882008669407,
            "num_uses": 139,
            "rewritten": null,
            "rewritten_dreamcoder": null,
            "uses": {
                "fn_41 $2 $1 $0": "(fill $0 $1 (__set__ $2))"
            },
            "dc_comparison_millis": null
        },
        {
            "body": "(lam (fn_1 $0 #0))",
            "dreamcoder": "#(lambda (lambda (fn_1 $0 $1)))",
            "arity": 1,
            "name": "fn_42",
            "utility": 13057,
            "final_cost": 4948791,
            "compression_ratio": 1.0026794423122738,
            "cumulative_compression_ratio": 1.607183047334188,
            "num_uses": 130,
            "rewritten": null,
            "rewritten_dreamcoder": null,
            "uses": {
                "fn_42 $0": "(lam (fn_1 $0 $1))"
            },
            "dc_comparison_millis": null
        },
        {
            "body": "(tuple (__genExpr__ e e #0))",
            "dreamcoder": "#(lambda (tuple (__genExpr__ e e $0)))",
            "arity": 1,
            "name": "fn_43",
            "utility": 12625,
            "final_cost": 4935762,
            "compression_ratio": 1.002639713989451,
            "cumulative_compression_ratio": 1.6114255509078443,
            "num_uses": 43,
            "rewritten": null,
            "rewritten_dreamcoder": null,
            "uses": {
                "fn_43 $1": "(tuple (__genExpr__ e e $1))"
            },
            "dc_comparison_millis": null
        },
        {
            "body": "(fn_10 (sub #3 #2) lte (sub #1 #0))",
            "dreamcoder": "#(lambda (lambda (lambda (lambda (fn_10 (sub $0 $1) lte (sub $2 $3))))))",
            "arity": 4,
            "name": "fn_44",
            "utility": 12622,
            "final_cost": 4922733,
            "compression_ratio": 1.0026467005218442,
            "cumulative_compression_ratio": 1.6156905117543452,
            "num_uses": 43,
            "rewritten": null,
            "rewritten_dreamcoder": null,
            "uses": {
                "fn_44 $41 $112 $40 $111": "(fn_10 (sub $111 $40) lte (sub $112 $41))"
            },
            "dc_comparison_millis": null
        },
        {
            "body": "(fn_21 #0 #1 #0)",
            "dreamcoder": "#(lambda (lambda (fn_21 $1 $0 $1)))",
            "arity": 2,
            "name": "fn_45",
            "utility": 12421,
            "final_cost": 4910209,
            "compression_ratio": 1.002550604261448,
            "cumulative_compression_ratio": 1.619811498858807,
            "num_uses": 79,
            "rewritten": null,
            "rewritten_dreamcoder": null,
            "uses": {
                "fn_45 $1 $4": "(fn_21 $1 $4 $1)"
            },
            "dc_comparison_millis": null
        },
        {
            "body": "(__tuple__ 1)",
            "dreamcoder": "#(__tuple__ 1)",
            "arity": 0,
            "name": "fn_46",
            "utility": 11616,
            "final_cost": 4898392,
            "compression_ratio": 1.002412424322104,
            "cumulative_compression_ratio": 1.6237191715158776,
            "num_uses": 117,
            "rewritten": null,
            "rewritten_dreamcoder": null,
            "uses": {
                "fn_46 ": "(__tuple__ 1)"
            },
            "dc_comparison_millis": null
        },
        {
            "body": "(ifElse (gt #3 3) (#2 (fn_24 (hmirror (vmirror #1)) #0)))",
            "dreamcoder": "#(lambda (lambda (lambda (lambda (ifElse (gt $0 3) ($1 (fn_24 (hmirror (vmirror $2)) $3)))))))",
            "arity": 4,
            "name": "fn_47",
            "utility": 11511,
            "final_cost": 4886272,
            "compression_ratio": 1.0024804186095249,
            "cumulative_compression_ratio": 1.6277466747655478,
            "num_uses": 24,
            "rewritten": null,
            "rewritten_dreamcoder": null,
            "uses": {
                "fn_47 $0 $3 (lam ((lam (fn_42 $1 (replace $0 bgc 8))) (fn_24 (hmirror (vmirror $3)) $102))) $0": "(ifElse (gt $0 3) ((lam ((lam (fn_42 $1 (replace $0 bgc 8))) (fn_24 (hmirror (vmirror $3)) $102))) (fn_24 (hmirror (vmirror $3)) $0)))"
            },
            "dc_comparison_millis": null
        },
        {
            "body": "(sub #0 2)",
            "dreamcoder": "#(lambda (sub $0 2))",
            "arity": 1,
            "name": "fn_48",
            "utility": 11211,
            "final_cost": 4874859,
            "compression_ratio": 1.002341195919718,
            "cumulative_compression_ratio": 1.6315575486388434,
            "num_uses": 113,
            "rewritten": null,
            "rewritten_dreamcoder": null,
            "uses": {
                "fn_48 $0": "(sub $0 2)"
            },
            "dc_comparison_millis": null
        },
        {
            "body": "(ifElse (andOp (lt #2 #1) #0))",
            "dreamcoder": "#(lambda (lambda (lambda (ifElse (andOp (lt $0 $1) $2)))))",
            "arity": 3,
            "name": "fn_49",
            "utility": 11007,
            "final_cost": 4863547,
            "compression_ratio": 1.002325874510928,
            "cumulative_compression_ratio": 1.6353523467543347,
            "num_uses": 56,
            "rewritten": null,
            "rewritten_dreamcoder": null,
            "uses": {
                "fn_49 (lt $1 $18) $14 $0": "(ifElse (andOp (lt $0 $14) (lt $1 $18)))"
            },
            "dc_comparison_millis": null
        },
        {
            "body": "(__tuple__ 0)",
            "dreamcoder": "#(__tuple__ 0)",
            "arity": 0,
            "name": "fn_50",
            "utility": 10909,
            "final_cost": 4852437,
            "compression_ratio": 1.0022895711989666,
            "cumulative_compression_ratio": 1.639096602387626,
            "num_uses": 110,
            "rewritten": null,
            "rewritten_dreamcoder": null,
            "uses": {
                "fn_50 ": "(__tuple__ 0)"
            },
            "dc_comparison_millis": null
        },
        {
            "body": "(getItem (__list__ #1 #0) -1)",
            "dreamcoder": "#(lambda (lambda (getItem (__list__ $0 $1) -1)))",
            "arity": 2,
            "name": "fn_51",
            "utility": 10806,
            "final_cost": 4841327,
            "compression_ratio": 1.002294825365029,
            "cumulative_compression_ratio": 1.6428580428465178,
            "num_uses": 55,
            "rewritten": null,
            "rewritten_dreamcoder": null,
            "uses": {
                "fn_51 ((lam ((lam (x53 $0 $3 $2 $1)) (next $8 $9))) (remove $1 $0)) (add_M $10 $0)": "(getItem (__list__ (add_M $10 $0) ((lam ((lam (x53 $0 $3 $2 $1)) (next $8 $9))) (remove $1 $0))) -1)"
            },
            "dc_comparison_millis": null
        },
        {
            "body": "(fn_25 (fn_19 (max 1 (floordiv (len #0) #3)) #2 #1) #0)",
            "dreamcoder": "#(lambda (lambda (lambda (lambda (fn_25 (fn_19 (max 1 (floordiv (len $3) $0)) $1 $2) $3)))))",
            "arity": 4,
            "name": "fn_52",
            "utility": 10298,
            "final_cost": 4830419,
            "compression_ratio": 1.0022581891964237,
            "cumulative_compression_ratio": 1.6465679271301317,
            "num_uses": 18,
            "rewritten": null,
            "rewritten_dreamcoder": null,
            "uses": {
                "fn_52 $55 $19 $18 $11": "(fn_25 (fn_19 (max 1 (floordiv (len $55) $11)) $18 $19) $55)"
            },
            "dc_comparison_millis": null
        },
        {
            "body": "(ifElse (choice (__tuple__ True False)))",
            "dreamcoder": "#(ifElse (choice (__tuple__ True False)))",
            "arity": 0,
            "name": "fn_53",
            "utility": 10000,
            "final_cost": 4819915,
            "compression_ratio": 1.002179291543523,
            "cumulative_compression_ratio": 1.6501562786895627,
            "num_uses": 26,
            "rewritten": null,
            "rewritten_dreamcoder": null,
            "uses": {
                "fn_53 ": "(ifElse (choice (__tuple__ True False)))"
            },
            "dc_comparison_millis": null
        },
        {
            "body": "(fn_5 (sample #0 2))",
            "dreamcoder": "#(lambda (fn_5 (sample $0 2)))",
            "arity": 1,
            "name": "fn_54",
            "utility": 9999,
            "final_cost": 4809613,
            "compression_ratio": 1.002141960278301,
            "cumulative_compression_ratio": 1.653690847891505,
            "num_uses": 51,
            "rewritten": null,
            "rewritten_dreamcoder": null,
            "uses": {
                "fn_54 $0": "(fn_5 (sample $0 2))"
            },
            "dc_comparison_millis": null
        },
        {
            "body": "(fn_21 (fn_6 #2) #0 #1 #0)",
            "dreamcoder": "#(lambda (lambda (lambda (fn_21 (fn_6 $0) $2 $1 $2))))",
            "arity": 3,
            "name": "fn_55",
            "utility": 9592,
            "final_cost": 4799816,
            "compression_ratio": 1.0020411199095964,
            "cumulative_compression_ratio": 1.6570662292054537,
            "num_uses": 37,
            "rewritten": null,
            "rewritten_dreamcoder": null,
            "uses": {
                "fn_55 0 0 $0": "(fn_21 (fn_6 $0) 0 0 0)"
            },
            "dc_comparison_millis": null
        },
        {
            "body": "(fn_4 #0 2)",
            "dreamcoder": "#(lambda (fn_4 $0 2))",
            "arity": 1,
            "name": "fn_56",
            "utility": 9292,
            "final_cost": 4790322,
            "compression_ratio": 1.0019819126981444,
            "cumulative_compression_ratio": 1.6603503898067822,
            "num_uses": 94,
            "rewritten": null,
            "rewritten_dreamcoder": null,
            "uses": {
                "fn_56 $1": "(fn_4 $1 2)"
            },
            "dc_comparison_millis": null
        },
        {
            "body": "(fn_4 #0 0)",
            "dreamcoder": "#(lambda (fn_4 $0 0))",
            "arity": 1,
            "name": "fn_57",
            "utility": 9191,
            "final_cost": 4780929,
            "compression_ratio": 1.0019646809228917,
            "cumulative_compression_ratio": 1.6636124485429513,
            "num_uses": 93,
            "rewritten": null,
            "rewritten_dreamcoder": null,
            "uses": {
                "fn_57 $1": "(fn_4 $1 0)"
            },
            "dc_comparison_millis": null
        },
        {
            "body": "(fn_16 10)",
            "dreamcoder": "#(fn_16 10)",
            "arity": 0,
            "name": "fn_58",
            "utility": 8788,
            "final_cost": 4771940,
            "compression_ratio": 1.0018837202479494,
            "cumulative_compression_ratio": 1.6667462289970123,
            "num_uses": 89,
            "rewritten": null,
            "rewritten_dreamcoder": null,
            "uses": {
                "fn_58 ": "(fn_16 10)"
            },
            "dc_comparison_millis": null
        },
        {
            "body": "(lam ((lam ((lam ((lam ((lam ((lam ((lam ((lam ((lam ((lam (#3 (add $9 $2))) (add $8 $2))) (mul $2 $0))) (mul $2 $0))) (choice (__tuple__ None -1)))) (choice (__tuple__ None -1)))) (#2 $2))) (#2 $1))) (fn_50 $1))) (fn_30 (mul #1 #0))))",
            "dreamcoder": "#(lambda (lambda (lambda (lambda (lambda ((lambda ((lambda ((lambda ((lambda ((lambda ((lambda ((lambda ((lambda ((lambda ($10 (add $9 $2))) (add $8 $2))) (mul $2 $0))) (mul $2 $0))) (choice (__tuple__ None -1)))) (choice (__tuple__ None -1)))) ($5 $2))) ($4 $1))) (fn_50 $1))) (fn_30 (mul $3 $4))))))))",
            "arity": 4,
            "name": "fn_59",
            "utility": 8712,
            "final_cost": 4760588,
            "compression_ratio": 1.0023845793838912,
            "cumulative_compression_ratio": 1.6707207176928571,
            "num_uses": 4,
            "rewritten": null,
            "rewritten_dreamcoder": null,
            "uses": {
                "fn_59 $9 $10 (unifint $13 $12) (lam ((lam ((lam ((lam ((lam ((lam ((lam ((lam ((lam (fn_18 $55 $56 $0)) (fill $10 2 (bitAnd (set $5) (set $4))))) (hconcat (hconcat $2 $7) $1))) (fill $8 $9 $2))) (fill $7 $9 $2))) (sample $5 $2))) (sample $4 $2))) (max (min (fn_6 (mul $12 $11)) $0) 1))) (max (min (fn_6 (mul $11 $10)) $0) 1)))": "(lam ((lam ((lam ((lam ((lam ((lam ((lam ((lam ((lam ((lam ((lam ((lam ((lam ((lam ((lam ((lam ((lam ((lam ((lam (fn_18 $65 $66 $0)) (fill $20 2 (bitAnd (set $5) (set $4))))) (hconcat (hconcat $2 $17) $1))) (fill $18 $19 $2))) (fill $17 $19 $2))) (sample $15 $2))) (sample $14 $2))) (max (min (fn_6 (mul $22 $21)) $0) 1))) (max (min (fn_6 (mul $21 $20)) $0) 1))) (add $9 $2))) (add $8 $2))) (mul $2 $0))) (mul $2 $0))) (choice (__tuple__ None -1)))) (choice (__tuple__ None -1)))) (unifint $17 $16 $2))) (unifint $16 $15 $1))) (fn_50 $1))) (fn_30 (mul $11 $10))))"
            },
            "dc_comparison_millis": null
        },
        {
            "body": "(fn_13 #1 #0 bgc)",
            "dreamcoder": "#(lambda (lambda (fn_13 $0 $1 bgc)))",
            "arity": 2,
            "name": "fn_60",
            "utility": 8483,
            "final_cost": 4751902,
            "compression_ratio": 1.0018278996494456,
            "cumulative_compression_ratio": 1.6737746275070495,
            "num_uses": 86,
            "rewritten": null,
            "rewritten_dreamcoder": null,
            "uses": {
                "fn_60 $2 $1": "(fn_13 $1 $2 bgc)"
            },
            "dc_comparison_millis": null
        },
        {
            "body": "(randint 1)",
            "dreamcoder": "#(randint 1)",
            "arity": 0,
            "name": "fn_61",
            "utility": 8081,
            "final_cost": 4743620,
            "compression_ratio": 1.0017459239989712,
            "cumulative_compression_ratio": 1.6766969107980831,
            "num_uses": 82,
            "rewritten": null,
            "rewritten_dreamcoder": null,
            "uses": {
                "fn_61 ": "(randint 1)"
            },
            "dc_comparison_millis": null
        },
        {
            "body": "((lam (#2 (remove #1 #0))) (choice #0))",
            "dreamcoder": "#(lambda (lambda (lambda ((lambda ($1 (remove $2 $3))) (choice $2)))))",
            "arity": 3,
            "name": "fn_62",
            "utility": 7711,
            "final_cost": 4735703,
            "compression_ratio": 1.0016717686898862,
            "cumulative_compression_ratio": 1.6794999601959841,
            "num_uses": 104,
            "rewritten": null,
            "rewritten_dreamcoder": null,
            "uses": {
                "fn_62 $4 $0 (lam ((lam ((lam ((lam ((lam ((lam ((lam ((lam ((lam ((lam ((lam ((lam ((lam ((lam ((lam ((lam ((lam ((lam ((lam ((lam ((lam ((lam (fn_42 $10 (fill $0 $18 $13))) (fill $60 $18 $13))) (fill $59 2 (intersection (set $4) (set $3))))) (fill $58 $15 $2))) (fill $17 $15 $2))) (sfilter $15 (lam (orOp (elem (first $0) $4) (elem (last $0) $3)))))) (sfilter $14 (lam (orOp (elem (first $0) $5) (elem (last $0) $4)))))) (apply last $6))) (apply first $5))) (apply last $5))) (apply first $4))) (fill $0 $7 $2))) (fill $9 $7 $2))) (sample (difference $7 $1) $2))) (sample $6 $2))) (unifint $14 $13 $2))) (unifint $13 $12 $1))) (fn_46 (floordiv (mul $7 $6) 4)))) (choice (remove $1 #0)))) (choice #0))) (totuple (asindices $1)))) (fn_13 $2 $3 $1)))": "((lam ((lam ((lam ((lam ((lam ((lam ((lam ((lam ((lam ((lam ((lam ((lam ((lam ((lam ((lam ((lam ((lam ((lam ((lam ((lam ((lam ((lam ((lam (fn_42 $10 (fill $0 $18 $13))) (fill $61 $18 $13))) (fill $60 2 (intersection (set $4) (set $3))))) (fill $59 $15 $2))) (fill $17 $15 $2))) (sfilter $15 (lam (orOp (elem (first $0) $4) (elem (last $0) $3)))))) (sfilter $14 (lam (orOp (elem (first $0) $5) (elem (last $0) $4)))))) (apply last $6))) (apply first $5))) (apply last $5))) (apply first $4))) (fill $0 $7 $2))) (fill $9 $7 $2))) (sample (difference $7 $1) $2))) (sample $6 $2))) (unifint $15 $14 $2))) (unifint $14 $13 $1))) (fn_46 (floordiv (mul $8 $7) 4)))) (choice (remove $1 $4)))) (choice $3))) (totuple (asindices $1)))) (fn_13 $3 $4 $2))) (remove $1 $5))) (choice $4))"
            },
            "dc_comparison_millis": null
        },
        {
            "body": "(interval 0 #0 1)",
            "dreamcoder": "#(lambda (interval 0 $0 1))",
            "arity": 1,
            "name": "fn_63",
            "utility": 7575,
            "final_cost": 4727825,
            "compression_ratio": 1.0016663053306754,
            "cumulative_compression_ratio": 1.6822985199325278,
            "num_uses": 39,
            "rewritten": null,
            "rewritten_dreamcoder": null,
            "uses": {
                "fn_63 $1": "(interval 0 $1 1)"
            },
            "dc_comparison_millis": null
        },
        {
            "body": "(fn_6 (add #1 #0))",
            "dreamcoder": "#(lambda (lambda (fn_6 (add $0 $1))))",
            "arity": 2,
            "name": "fn_64",
            "utility": 7574,
            "final_cost": 4720048,
            "compression_ratio": 1.001647652735735,
            "cumulative_compression_ratio": 1.6850703636912174,
            "num_uses": 77,
            "rewritten": null,
            "rewritten_dreamcoder": null,
            "uses": {
                "fn_64 $2 $1": "(fn_6 (add $1 $2))"
            },
            "dc_comparison_millis": null
        },
        {
            "body": "(min (max 1 #2) (fn_6 (mul #1 #0)))",
            "dreamcoder": "#(lambda (lambda (lambda (min (max 1 $0) (fn_6 (mul $1 $2))))))",
            "arity": 3,
            "name": "fn_65",
            "utility": 7573,
            "final_cost": 4711968,
            "compression_ratio": 1.0017147824433443,
            "cumulative_compression_ratio": 1.687959892766675,
            "num_uses": 20,
            "rewritten": null,
            "rewritten_dreamcoder": null,
            "uses": {
                "fn_65 $9 $10 $0": "(min (max 1 $0) (fn_6 (mul $10 $9)))"
            },
            "dc_comparison_millis": null
        },
        {
            "body": "(fill #3 #2 (shift #1 #0))",
            "dreamcoder": "#(lambda (lambda (lambda (lambda (fill $0 $1 (shift $2 $3))))))",
            "arity": 4,
            "name": "fn_66",
            "utility": 7067,
            "final_cost": 4704696,
            "compression_ratio": 1.0015456896683654,
            "cumulative_compression_ratio": 1.6905689549335396,
            "num_uses": 72,
            "rewritten": null,
            "rewritten_dreamcoder": null,
            "uses": {
                "fn_66 $1 $3 $14 $0": "(fill $0 $14 (shift $3 $1))"
            },
            "dc_comparison_millis": null
        },
        {
            "body": "(lam ((lam ((lam ((lam ((lam ((lam (x24 $0 $3 $5 $2 $1 $4)) #3)) (difference $0 $2))) (fill $0 #2 $1))) (sample #1 $1))) #0))",
            "dreamcoder": "#(lambda (lambda (lambda (lambda (lambda ((lambda ((lambda ((lambda ((lambda ((lambda (x24 $0 $3 $5 $2 $1 $4)) $5)) (difference $0 $2))) (fill $0 $4 $1))) (sample $4 $1))) $4))))))",
            "arity": 4,
            "name": "fn_67",
            "utility": 6996,
            "final_cost": 4696176,
            "compression_ratio": 1.001814242055664,
            "cumulative_compression_ratio": 1.6936360562295798,
            "num_uses": 6,
            "rewritten": null,
            "rewritten_dreamcoder": null,
            "uses": {
                "fn_67 (fn_19 (max 1 (floordiv (len $57) $11)) $19 $20) $57 $0 (next $7 $8)": "(lam ((lam ((lam ((lam ((lam ((lam (x24 $0 $3 $5 $2 $1 $4)) (next $12 $13))) (difference $0 $2))) (fill $0 $3 $1))) (sample $59 $1))) (fn_19 (max 1 (floordiv (len $58) $12)) $20 $21)))"
            },
            "dc_comparison_millis": null
        },
        {
            "body": "(ifElse (orOp (eq (len #1) 0) (eq (len #0) 0)))",
            "dreamcoder": "#(lambda (lambda (ifElse (orOp (eq (len $0) 0) (eq (len $1) 0)))))",
            "arity": 2,
            "name": "fn_68",
            "utility": 6968,
            "final_cost": 4688399,
            "compression_ratio": 1.0016587752023665,
            "cumulative_compression_ratio": 1.6964454177214872,
            "num_uses": 11,
            "rewritten": null,
            "rewritten_dreamcoder": null,
            "uses": {
                "fn_68 $4 $12": "(ifElse (orOp (eq (len $12) 0) (eq (len $4) 0)))"
            },
            "dc_comparison_millis": null
        },
        {
            "body": "(fn_0 #3 #2 (fn_3 (lam #1) #0))",
            "dreamcoder": "#(lambda (lambda (lambda (lambda (fn_0 $0 $1 (fn_3 (lambda $3) $3))))))",
            "arity": 4,
            "name": "fn_69",
            "utility": 6934,
            "final_cost": 4681259,
            "compression_ratio": 1.001525230712507,
            "cumulative_compression_ratio": 1.699032888374688,
            "num_uses": 70,
            "rewritten": null,
            "rewritten_dreamcoder": null,
            "uses": {
                "fn_69 x73 (lam (lam (lam (lam (fn_20 $4 $3 (fn_35 x79 $5 $4 x74 $110) ((lam ((lam ((lam (ifElse (gt $0 1) ((lam ((lam (ifElse (gt $2 2) ((lam ((lam (fn_47 $0 $7 (lam (fn_42 $0 (fn_24 (hmirror (vmirror $7)) $0))) $4 (fn_1 $125 $124))) (fn_24 (vmirror $5) $125))) (fn_24 (vmirror $5) $123)) (fn_47 $0 $5 (lam (fn_42 $0 (fn_24 (hmirror (vmirror $5)) $0))) $2 (fn_1 $125 $124)))) (fn_24 (hmirror $3) $125))) (fn_24 (hmirror $3) $123)) (ifElse (gt $0 2) ((lam ((lam (fn_47 $0 $5 (lam (fn_42 $0 (fn_24 (hmirror (vmirror $5)) $0))) $2 (fn_1 $129 $128))) (fn_24 (vmirror $3) $129))) (fn_24 (vmirror $3) $127)) (fn_47 $0 $3 (lam (fn_42 $0 (fn_24 (hmirror (vmirror $3)) $0))) $0 (fn_1 $129 $128))))) (fn_19 4 $27 $28))) (fn_43 $128))) (fn_43 $126))))))) $105 $102": "(fn_0 $102 $105 (fn_3 (lam (lam (lam (lam (lam (fn_20 $5 $3 (fn_35 x79 $6 $5 x74 $111) ((lam ((lam ((lam (ifElse (gt $0 1) ((lam ((lam (ifElse (gt $2 2) ((lam ((lam (fn_47 $0 $7 (lam (fn_42 $0 (fn_24 (hmirror (vmirror $7)) $0))) $4 (fn_1 $126 $125))) (fn_24 (vmirror $5) $126))) (fn_24 (vmirror $5) $124)) (fn_47 $0 $5 (lam (fn_42 $0 (fn_24 (hmirror (vmirror $5)) $0))) $2 (fn_1 $126 $125)))) (fn_24 (hmirror $3) $126))) (fn_24 (hmirror $3) $124)) (ifElse (gt $0 2) ((lam ((lam (fn_47 $0 $5 (lam (fn_42 $0 (fn_24 (hmirror (vmirror $5)) $0))) $2 (fn_1 $130 $129))) (fn_24 (vmirror $3) $130))) (fn_24 (vmirror $3) $128)) (fn_47 $0 $3 (lam (fn_42 $0 (fn_24 (hmirror (vmirror $3)) $0))) $0 (fn_1 $130 $129))))) (fn_19 4 $28 $29))) (fn_43 $129))) (fn_43 $127)))))))) x73))"
            },
            "dc_comparison_millis": null
        },
        {
            "body": "(asindices (fn_13 #1 #0 -1))",
            "dreamcoder": "#(lambda (lambda (asindices (fn_13 $0 $1 -1))))",
            "arity": 2,
            "name": "fn_70",
            "utility": 6766,
            "final_cost": 4674189,
            "compression_ratio": 1.0015125618583245,
            "cumulative_compression_ratio": 1.7016027807176823,
            "num_uses": 35,
            "rewritten": null,
            "rewritten_dreamcoder": null,
            "uses": {
                "fn_70 $2 $1": "(asindices (fn_13 $1 $2 -1))"
            },
            "dc_comparison_millis": null
        },
        {
            "body": "(totuple (asindices #0))",
            "dreamcoder": "#(lambda (totuple (asindices $0)))",
            "arity": 1,
            "name": "fn_71",
            "utility": 6666,
            "final_cost": 4667321,
            "compression_ratio": 1.0014715079592769,
            "cumulative_compression_ratio": 1.704106702753036,
            "num_uses": 68,
            "rewritten": null,
            "rewritten_dreamcoder": null,
            "uses": {
                "fn_71 $1": "(totuple (asindices $1))"
            },
            "dc_comparison_millis": null
        },
        {
            "body": "(lam (lam (lam (#2 (#1 $2 $1 $0) #0))))",
            "dreamcoder": "#(lambda (lambda (lambda (lambda (lambda (lambda ($3 ($4 $2 $1 $0) $5)))))))",
            "arity": 3,
            "name": "fn_72",
            "utility": 6662,
            "final_cost": 4660351,
            "compression_ratio": 1.0014955955034288,
            "cumulative_compression_ratio": 1.7066553570750365,
            "num_uses": 34,
            "rewritten": null,
            "rewritten_dreamcoder": null,
            "uses": {
                "fn_72 (lam (lam (lam (lam (lam (lam (lam (lam (lam (lam (lam (lam (lam (lam (lam (fn_20 $15 $13 ((lam ((lam ((lam ((lam ((lam ((lam ((lam ((lam ((lam ((lam (fn_22 $3 (ifElse None (x32 $51 $3 $49 $6 $5 $53 $28 $19 $52 $18 $33 $69 $17 $177 $16 $2 $7 $8 $29 $38 $37 $179 $50 $0 $1 $55) (fn_1 $33 $18)) (fn_23 (lam (lam (lam (fn_49 None $6 $0 ((lam ((lam (ifElse (issubset_M (bitAnd (shift $13 $0) $34) $23) ((lam (ifElse None ((lam (ifElse None (x32 $59 $11 $57 $14 $13 $61 $36 $0 $60 $26 $41 $77 $25 $185 $2 $10 $15 $16 $37 $46 $45 $187 $58 $1 $3 $63) (fn_1 $41 $26))) False) ((lam ((lam ((lam (x117 $0 $13 $16 $15 $259 $2 $1 $4 $12 $19 $17 $18 $3 $5)) (next $34 $35))) (sub $0 (shift $16 $3)))) (paint $0 (shift $16 $2))))) True) (x146 $0 $254 $1))) (fn_33 $9))) (fn_12 $0)) (ifElse None ((lam (ifElse None (x32 $56 $8 $54 $11 $10 $58 $33 $0 $57 $255 $38 $74 $256 $182 $252 $7 $12 $13 $34 $43 $42 $184 $55 $253 $251 $60) (fn_1 $38 $255))) False) ((lam ((lam ((lam (x117 $0 $10 $13 $12 $260 $2 $1 $254 $9 $16 $14 $15 $255 $253)) (next $31 $32))) (sub $0 (shift $13 $253)))) (paint $0 (shift $13 $252)))))))) x145 $248 $249 (fn_27 $247)))) False)) 0)) 10)) (bitOr (bitOr (bitOr (bitOr $0 (shift $0 (__tuple__ (neg $2) 0))) (shift $0 (fn_50 (neg $2)))) (shift $0 (__tuple__ $2 0))) (shift $0 (fn_50 $2))))) (fn_44 $2 $49 $2 $48 $24))) (max 0 (fn_6 (fn_30 $1))))) (width $3))) (toindices $1))) (normalize $1))) $247) (ifElse None (x32 $41 $224 $39 $221 $222 $43 $18 $243 $42 $244 $23 $59 $245 $167 $237 $225 $220 $219 $19 $28 $27 $169 $40 $238 $236 $45) (fn_1 $23 $244)))))))))))))))))) x116 fn_11": "(lam (lam (lam (fn_11 (x116 $2 $1 $0) (lam (lam (lam (lam (lam (lam (lam (lam (lam (lam (lam (lam (lam (lam (lam (fn_20 $18 $13 ((lam ((lam ((lam ((lam ((lam ((lam ((lam ((lam ((lam ((lam (fn_22 $3 (ifElse None (x32 $54 $3 $52 $6 $5 $56 $31 $19 $55 $18 $36 $72 $17 $180 $16 $2 $7 $8 $32 $41 $40 $182 $53 $0 $1 $58) (fn_1 $36 $18)) (fn_23 (lam (lam (lam (fn_49 None $6 $0 ((lam ((lam (ifElse (issubset_M (bitAnd (shift $13 $0) $37) $23) ((lam (ifElse None ((lam (ifElse None (x32 $62 $11 $60 $14 $13 $64 $39 $0 $63 $26 $44 $80 $25 $188 $2 $10 $15 $16 $40 $49 $48 $190 $61 $1 $3 $66) (fn_1 $44 $26))) False) ((lam ((lam ((lam (x117 $0 $13 $16 $15 $262 $2 $1 $4 $12 $19 $17 $18 $3 $5)) (next $37 $38))) (sub $0 (shift $16 $3)))) (paint $0 (shift $16 $2))))) True) (x146 $0 $257 $1))) (fn_33 $9))) (fn_12 $0)) (ifElse None ((lam (ifElse None (x32 $59 $8 $57 $11 $10 $61 $36 $0 $60 $258 $41 $77 $259 $185 $255 $7 $12 $13 $37 $46 $45 $187 $58 $256 $254 $63) (fn_1 $41 $258))) False) ((lam ((lam ((lam (x117 $0 $10 $13 $12 $263 $2 $1 $257 $9 $16 $14 $15 $258 $256)) (next $34 $35))) (sub $0 (shift $13 $256)))) (paint $0 (shift $13 $255)))))))) x145 $251 $252 (fn_27 $250)))) False)) 0)) 10)) (bitOr (bitOr (bitOr (bitOr $0 (shift $0 (__tuple__ (neg $2) 0))) (shift $0 (fn_50 (neg $2)))) (shift $0 (__tuple__ $2 0))) (shift $0 (fn_50 $2))))) (fn_44 $2 $52 $2 $51 $27))) (max 0 (fn_6 (fn_30 $1))))) (width $3))) (toindices $1))) (normalize $1))) $250) (ifElse None (x32 $44 $227 $42 $224 $225 $46 $21 $246 $45 $247 $26 $62 $248 $170 $240 $228 $223 $222 $22 $31 $30 $172 $43 $241 $239 $48) (fn_1 $26 $247))))))))))))))))))))))"
            },
            "dc_comparison_millis": null
        },
        {
            "body": "(ifElse (issubset_M #1 #0))",
            "dreamcoder": "#(lambda (lambda (ifElse (issubset_M $0 $1))))",
            "arity": 2,
            "name": "fn_73",
            "utility": 6564,
            "final_cost": 4653584,
            "compression_ratio": 1.0014541480287023,
            "cumulative_compression_ratio": 1.7091370865982012,
            "num_uses": 67,
            "rewritten": null,
            "rewritten_dreamcoder": null,
            "uses": {
                "fn_73 $10 $0": "(ifElse (issubset_M $0 $10))"
            },
            "dc_comparison_millis": null
        },
        {
            "body": "(fn_19 (floordiv (mul #2 #1) #0))",
            "dreamcoder": "#(lambda (lambda (lambda (fn_19 (floordiv (mul $0 $1) $2)))))",
            "arity": 3,
            "name": "fn_74",
            "utility": 6563,
            "final_cost": 4646716,
            "compression_ratio": 1.0014780330883144,
            "cumulative_compression_ratio": 1.7116632477646585,
            "num_uses": 34,
            "rewritten": null,
            "rewritten_dreamcoder": null,
            "uses": {
                "fn_74 10 $1 $2": "(fn_19 (floordiv (mul $2 $1) 10))"
            },
            "dc_comparison_millis": null
        },
        {
            "body": "((lam (#1 $0)) (fn_12 #0))",
            "dreamcoder": "#(lambda (lambda ((lambda ($1 $0)) (fn_12 $1))))",
            "arity": 2,
            "name": "fn_75",
            "utility": 6528,
            "final_cost": 4639984,
            "compression_ratio": 1.0014508670719555,
            "cumulative_compression_ratio": 1.7141466436091166,
            "num_uses": 66,
            "rewritten": null,
            "rewritten_dreamcoder": null,
            "uses": {
                "fn_75 $0 (x131 $238 $239 $241 $1 $0 $240)": "((lam (x131 $239 $240 $242 $2 $1 $241 $0)) (fn_12 $0))"
            },
            "dc_comparison_millis": null
        },
        {
            "body": "(lam ((lam ((lam (#3 $0 $1 $2)) (next #2 #1))) (#0 $0)))",
            "dreamcoder": "#(lambda (lambda (lambda (lambda (lambda ((lambda ((lambda ($3 $0 $1 $2)) (next $3 $4))) ($4 $0)))))))",
            "arity": 4,
            "name": "fn_76",
            "utility": 6408,
            "final_cost": 4633065,
            "compression_ratio": 1.0014933958405505,
            "cumulative_compression_ratio": 1.716706543076776,
            "num_uses": 17,
            "rewritten": null,
            "rewritten_dreamcoder": null,
            "uses": {
                "fn_76 (fn_41 $0 (choice $7)) $4 $3 x105": "(lam ((lam ((lam (x105 $0 $1 $2)) (next $5 $6))) (fn_41 $1 (choice $8) $0)))"
            },
            "dc_comparison_millis": null
        },
        {
            "body": "(fn_9 (range #0))",
            "dreamcoder": "#(lambda (fn_9 (range $0)))",
            "arity": 1,
            "name": "fn_77",
            "utility": 6060,
            "final_cost": 4626803,
            "compression_ratio": 1.0013534183322697,
            "cumulative_compression_ratio": 1.7190299651833034,
            "num_uses": 62,
            "rewritten": null,
            "rewritten_dreamcoder": null,
            "uses": {
                "fn_77 $1": "(fn_9 (range $1))"
            },
            "dc_comparison_millis": null
        },
        {
            "body": "(fn_15 ((lam (#3 $0 #2)) (next #1 #0)))",
            "dreamcoder": "#(lambda (lambda (lambda (lambda (fn_15 ((lambda ($1 $0 $2)) (next $2 $3)))))))",
            "arity": 4,
            "name": "fn_78",
            "utility": 5986,
            "final_cost": 4620510,
            "compression_ratio": 1.0013619708646881,
            "cumulative_compression_ratio": 1.721371233911409,
            "num_uses": 31,
            "rewritten": null,
            "rewritten_dreamcoder": null,
            "uses": {
                "fn_78 $5 $4 $0 x100": "(fn_15 ((lam (x100 $0 $1)) (next $4 $5)))"
            },
            "dc_comparison_millis": null
        },
        {
            "body": "(fn_57 (min 9 (mul #1 #0)))",
            "dreamcoder": "#(lambda (lambda (fn_57 (min 9 (mul $0 $1)))))",
            "arity": 2,
            "name": "fn_79",
            "utility": 5958,
            "final_cost": 4614147,
            "compression_ratio": 1.0013790197841552,
            "cumulative_compression_ratio": 1.7237450388988484,
            "num_uses": 21,
            "rewritten": null,
            "rewritten_dreamcoder": null,
            "uses": {
                "fn_79 $4 $5": "(fn_57 (min 9 (mul $5 $4)))"
            },
            "dc_comparison_millis": null
        },
        {
            "body": "(frozenset (__set__ #2 (__tuple__ #1 #0)))",
            "dreamcoder": "#(lambda (lambda (lambda (frozenset (__set__ $0 (__tuple__ $1 $2))))))",
            "arity": 3,
            "name": "fn_80",
            "utility": 5957,
            "final_cost": 4607885,
            "compression_ratio": 1.001358974887611,
            "cumulative_compression_ratio": 1.7260875651193561,
            "num_uses": 31,
            "rewritten": null,
            "rewritten_dreamcoder": null,
            "uses": {
                "fn_80 (fn_64 $3 $15) (fn_64 $4 $16) $1": "(frozenset (__set__ $1 (__tuple__ (fn_64 $4 $16) (fn_64 $3 $15))))"
            },
            "dc_comparison_millis": null
        },
        {
            "body": "(remove #0 fn_7)",
            "dreamcoder": "#(lambda (remove $0 fn_7))",
            "arity": 1,
            "name": "fn_81",
            "utility": 5858,
            "final_cost": 4601825,
            "compression_ratio": 1.001316868850945,
            "cumulative_compression_ratio": 1.7283605960678654,
            "num_uses": 60,
            "rewritten": null,
            "rewritten_dreamcoder": null,
            "uses": {
                "fn_81 1": "(remove 1 fn_7)"
            },
            "dc_comparison_millis": null
        },
        {
            "body": "(choice (fn_46 2))",
            "dreamcoder": "#(choice (fn_46 2))",
            "arity": 0,
            "name": "fn_82",
            "utility": 5758,
            "final_cost": 4595765,
            "compression_ratio": 1.0013186052811665,
            "cumulative_compression_ratio": 1.7306396214776005,
            "num_uses": 30,
            "rewritten": null,
            "rewritten_dreamcoder": null,
            "uses": {
                "fn_82 ": "(choice (fn_46 2))"
            },
            "dc_comparison_millis": null
        },
        {
            "body": "(sample (totuple #0))",
            "dreamcoder": "#(lambda (sample (totuple $0)))",
            "arity": 1,
            "name": "fn_83",
            "utility": 5757,
            "final_cost": 4589806,
            "compression_ratio": 1.0012983119547971,
            "cumulative_compression_ratio": 1.7328865315876105,
            "num_uses": 59,
            "rewritten": null,
            "rewritten_dreamcoder": null,
            "uses": {
                "fn_83 $0": "(sample (totuple $0))"
            },
            "dc_comparison_millis": null
        },
        {
            "body": "(choice (__tuple__ #0 (sub #1 #0)))",
            "dreamcoder": "#(lambda (lambda (choice (__tuple__ $1 (sub $0 $1)))))",
            "arity": 2,
            "name": "fn_84",
            "utility": 5755,
            "final_cost": 4583746,
            "compression_ratio": 1.0013220627844561,
            "cumulative_compression_ratio": 1.7351775163807077,
            "num_uses": 20,
            "rewritten": null,
            "rewritten_dreamcoder": null,
            "uses": {
                "fn_84 $1 $3": "(choice (__tuple__ $1 (sub $3 $1)))"
            },
            "dc_comparison_millis": null
        },
        {
            "body": "((lam ((lam (#1 0)) 0)) (mul 4 #0))",
            "dreamcoder": "#(lambda (lambda ((lambda ((lambda ($2 0)) 0)) (mul 4 $1))))",
            "arity": 2,
            "name": "fn_85",
            "utility": 5693,
            "final_cost": 4577646,
            "compression_ratio": 1.001332562631536,
            "cumulative_compression_ratio": 1.737489749098118,
            "num_uses": 20,
            "rewritten": null,
            "rewritten_dreamcoder": null,
            "uses": {
                "fn_85 $3 (lam ((lam ((lam (fn_0 $100 $93 (fn_0 $98 $73 (fn_0 $67 $66 (fn_0 $77 $89 (fn_0 $57 $56 (fn_0 $72 $97 (fn_0 $76 $92 (fn_0 $104 $90 (fn_0 $68 $74 (lam (fn_34 (lam (lam (lam (lam (lam (lam (lam (lam (lam (lam (lam (lam (lam (lam (lam (lam (lam (lam (lam (fn_49 (lt $2 $26) $23 $0 ((lam ((lam ((lam (fn_22 $0 ((lam ((lam ((lam (fn_1 $19 $0)) (fill $0 dotc $1))) (fn_83 $16 $1))) (fn_57 (max 0 (fn_6 (fn_30 (len $15)))) $34 $35)) ((lam (fn_5 $0 $12 $13 ((lam ((lam (fn_73 $17 $0 ((lam ((lam (ifElse (isComp $14 None) ((lam ((lam ((lam ((lam (ifElse $1 ((lam ((lam ((lam ((lam (fn_75 $0 (x34 $10 $13 $6 $4 $3 $8 $1 $12 $25 $24 $23 $7 $15 $14 $11 $0 $2))) (fn_12 $0))) (sub (sub $0 $9) (outbox $9)))) False)) (replace (subgrid $8 $1) sqc dotc)) ((lam ((lam (fn_75 $0 (x34 $8 $11 $4 $2 $115 $6 $1 $10 $23 $22 $21 $5 $13 $12 $9 $0 $116))) (fn_12 $0))) (sub (sub $0 $7) (outbox $7))))) (fill $0 dotc $2))) True)) (fn_83 $2 $1))) (fn_19 (len $1) $39 $40)) ((lam ((lam ((lam (ifElse $113 ((lam ((lam ((lam ((lam (fn_75 $0 (x34 $9 $12 $5 $4 $3 $7 $1 $11 $24 $23 $6 $112 $14 $13 $10 $0 $2))) (fn_12 $0))) (sub (sub $0 $8) (outbox $8)))) False)) (replace (subgrid $7 $1) sqc dotc)) ((lam ((lam (fn_75 $0 (x34 $7 $10 $3 $2 $125 $5 $1 $9 $22 $21 $4 $110 $12 $11 $8 $0 $126))) (fn_12 $0))) (sub (sub $0 $6) (outbox $6))))) (fill $0 dotc $1))) (fn_83 $2 $1))) (fn_57 (min (max 0 (fn_6 $106)) (len $1)) $39 $40)))) (backdrop (inbox $3)))) (fill $118 sqc $2)) (fn_75 $0 (x34 $0 $3 $116 $117 $118 $102 $123 $2 $15 $14 $115 $103 $5 $4 $1 $124 $119)))) (backdrop $1))) (box (fn_14 $3 $13 $4 $14))))) (fn_33 $1)))) (fn_44 $2 $31 $1 $30 $120))) (randint 3 7))) (randint 3 7)) ((lam ((lam ((lam (fn_1 $115 $0)) (fill $0 dotc $1))) (fn_83 $119 $1))) (fn_57 (max 0 (fn_6 (fn_30 (len $118)))) $31 $32)))))))))))))))))))))) (x33 $0))))))))))))) False)) None))": "((lam ((lam ((lam ((lam ((lam (fn_0 $102 $95 (fn_0 $100 $75 (fn_0 $69 $68 (fn_0 $79 $91 (fn_0 $59 $58 (fn_0 $74 $99 (fn_0 $78 $94 (fn_0 $106 $92 (fn_0 $70 $76 (lam (fn_34 (lam (lam (lam (lam (lam (lam (lam (lam (lam (lam (lam (lam (lam (lam (lam (lam (lam (lam (lam (fn_49 (lt $2 $28) $25 $0 ((lam ((lam ((lam (fn_22 $0 ((lam ((lam ((lam (fn_1 $19 $0)) (fill $0 dotc $1))) (fn_83 $16 $1))) (fn_57 (max 0 (fn_6 (fn_30 (len $15)))) $36 $37)) ((lam (fn_5 $0 $12 $13 ((lam ((lam (fn_73 $17 $0 ((lam ((lam (ifElse (isComp $14 None) ((lam ((lam ((lam ((lam (ifElse $1 ((lam ((lam ((lam ((lam (fn_75 $0 (x34 $10 $13 $6 $4 $3 $8 $1 $12 $25 $24 $23 $7 $15 $14 $11 $0 $2))) (fn_12 $0))) (sub (sub $0 $9) (outbox $9)))) False)) (replace (subgrid $8 $1) sqc dotc)) ((lam ((lam (fn_75 $0 (x34 $8 $11 $4 $2 $117 $6 $1 $10 $23 $22 $21 $5 $13 $12 $9 $0 $118))) (fn_12 $0))) (sub (sub $0 $7) (outbox $7))))) (fill $0 dotc $2))) True)) (fn_83 $2 $1))) (fn_19 (len $1) $41 $42)) ((lam ((lam ((lam (ifElse $115 ((lam ((lam ((lam ((lam (fn_75 $0 (x34 $9 $12 $5 $4 $3 $7 $1 $11 $24 $23 $6 $114 $14 $13 $10 $0 $2))) (fn_12 $0))) (sub (sub $0 $8) (outbox $8)))) False)) (replace (subgrid $7 $1) sqc dotc)) ((lam ((lam (fn_75 $0 (x34 $7 $10 $3 $2 $127 $5 $1 $9 $22 $21 $4 $112 $12 $11 $8 $0 $128))) (fn_12 $0))) (sub (sub $0 $6) (outbox $6))))) (fill $0 dotc $1))) (fn_83 $2 $1))) (fn_57 (min (max 0 (fn_6 $108)) (len $1)) $41 $42)))) (backdrop (inbox $3)))) (fill $120 sqc $2)) (fn_75 $0 (x34 $0 $3 $118 $119 $120 $104 $125 $2 $15 $14 $117 $105 $5 $4 $1 $126 $121)))) (backdrop $1))) (box (fn_14 $3 $13 $4 $14))))) (fn_33 $1)))) (fn_44 $2 $33 $1 $32 $122))) (randint 3 7))) (randint 3 7)) ((lam ((lam ((lam (fn_1 $117 $0)) (fill $0 dotc $1))) (fn_83 $121 $1))) (fn_57 (max 0 (fn_6 (fn_30 (len $120)))) $33 $34)))))))))))))))))))))) (x33 $0))))))))))))) False)) None)) 0)) 0)) (mul 4 $3))"
            },
            "dc_comparison_millis": null
        },
        {
            "body": "(fn_53 (fn_5 (__tuple__ #2 #1) #2 #1 #0) #0)",
            "dreamcoder": "#(lambda (lambda (lambda (fn_53 (fn_5 (__tuple__ $0 $1) $0 $1 $2) $2))))",
            "arity": 3,
            "name": "fn_86",
            "utility": 5553,
            "final_cost": 4571785,
            "compression_ratio": 1.0012819937945463,
            "cumulative_compression_ratio": 1.7397172001745496,
            "num_uses": 6,
            "rewritten": null,
            "rewritten_dreamcoder": null,
            "uses": {
                "fn_86 (fn_1 $0 $111) $111 $0": "(fn_53 (fn_5 (__tuple__ $0 $111) $0 $111 (fn_1 $0 $111)) (fn_1 $0 $111))"
            },
            "dc_comparison_millis": null
        },
        {
            "body": "(lam (#2 (fill $0 #1 #0)))",
            "dreamcoder": "#(lambda (lambda (lambda (lambda ($1 (fill $0 $2 $3))))))",
            "arity": 3,
            "name": "fn_87",
            "utility": 5507,
            "final_cost": 4566073,
            "compression_ratio": 1.0012509655452289,
            "cumulative_compression_ratio": 1.7418935264504098,
            "num_uses": 203,
            "rewritten": null,
            "rewritten_dreamcoder": null,
            "uses": {
                "fn_87 (bitOr $4 $3) ringc (lam ((lam ((lam ((lam ((lam ((lam ((lam ((lam ((lam ((lam ((lam ((lam ((lam ((lam (fn_42 $9 (fill $0 ringc $2))) (fill #0 inc $2))) (bitAnd $2 (ofcolor #0 inc)))) (bitAnd $1 (ofcolor #0 bgc)))) (bitOr (set $2) (set $1)))) (mapply vfrontier $2))) (mapply hfrontier $2))) (difference $4 $1))) (sfilter $3 (lam (andOp (gt (getItem $0 0) (fn_12 $14)) (lt (getItem $0 0) $2)))))) (lowermost $8))) (fill #0 inc $1))) (sample $2 $1))) (fn_19 (fn_30 (len $1)) $15 $16))) (totuple (sub $4 (corners $4)))))": "(lam ((lam ((lam ((lam ((lam ((lam ((lam ((lam ((lam ((lam ((lam ((lam ((lam ((lam ((lam (fn_42 $9 (fill $0 ringc $2))) (fill $13 inc $2))) (bitAnd $2 (ofcolor $12 inc)))) (bitAnd $1 (ofcolor $11 bgc)))) (bitOr (set $2) (set $1)))) (mapply vfrontier $2))) (mapply hfrontier $2))) (difference $4 $1))) (sfilter $3 (lam (andOp (gt (getItem $0 0) (fn_12 $15)) (lt (getItem $0 0) $2)))))) (lowermost $9))) (fill $4 inc $1))) (sample $2 $1))) (fn_19 (fn_30 (len $1)) $16 $17))) (totuple (sub $5 (corners $5))))) (fill $0 ringc (bitOr $5 $4))))"
            },
            "dc_comparison_millis": null
        },
        {
            "body": "(lam ((lam ((lam ((lam ((lam (fn_5 (center (ofcolor $0 2)) b a (fn_5 (center (ofcolor $0 #3)) d c ((lam ((lam ((lam (fn_42 $3 (fn_41 (__tuple__ c d) #3 $0))) (fn_41 (__tuple__ a b) 2 #2))) (fill #2 #1 (fn_45 d c a)))) (fill $1 #1 (fn_21 d a b a)))))) (x18 $2))) (choice (__tuple__ identity rot90 rot180 rot270)))) (fn_41 $1 2 $0))) #0))",
            "dreamcoder": "#(lambda (lambda (lambda (lambda (lambda ((lambda ((lambda ((lambda ((lambda (fn_5 (center (ofcolor $0 2)) b a (fn_5 (center (ofcolor $0 $5)) d c ((lambda ((lambda ((lambda (fn_42 $3 (fn_41 (__tuple__ c d) $8 $0))) (fn_41 (__tuple__ a b) 2 $8))) (fill $7 $8 (fn_45 d c a)))) (fill $1 $7 (fn_21 d a b a)))))) (x18 $2))) (choice (__tuple__ identity rot90 rot180 rot270)))) (fn_41 $1 2 $0))) $4))))))",
            "arity": 4,
            "name": "fn_88",
            "utility": 5355,
            "final_cost": 4555755,
            "compression_ratio": 1.002264827674008,
            "cumulative_compression_ratio": 1.7458386151142902,
            "num_uses": 2,
            "rewritten": null,
            "rewritten_dreamcoder": null,
            "uses": {
                "fn_88 (__tuple__ $1 $0) 8 $38 3": "(lam ((lam ((lam ((lam ((lam (fn_5 (center (ofcolor $0 2)) b a (fn_5 (center (ofcolor $0 3)) d c ((lam ((lam ((lam (fn_42 $3 (fn_41 (__tuple__ c d) 3 $0))) (fn_41 (__tuple__ a b) 2 $45))) (fill $44 8 (fn_45 d c a)))) (fill $1 8 (fn_21 d a b a)))))) (x18 $2))) (choice (__tuple__ identity rot90 rot180 rot270)))) (fn_41 $1 2 $0))) (__tuple__ $2 $1)))"
            },
            "dc_comparison_millis": null
        },
        {
            "body": "(getItem #0 0)",
            "dreamcoder": "#(lambda (getItem $0 0))",
            "arity": 1,
            "name": "fn_89",
            "utility": 5151,
            "final_cost": 4550402,
            "compression_ratio": 1.0011763795814084,
            "cumulative_compression_ratio": 1.747892384013545,
            "num_uses": 53,
            "rewritten": null,
            "rewritten_dreamcoder": null,
            "uses": {
                "fn_89 $0": "(getItem $0 0)"
            },
            "dc_comparison_millis": null
        },
        {
            "body": "(fn_45 #1 (fn_6 #0) 0)",
            "dreamcoder": "#(lambda (lambda (fn_45 $0 (fn_6 $1) 0)))",
            "arity": 2,
            "name": "fn_90",
            "utility": 5150,
            "final_cost": 4544948,
            "compression_ratio": 1.00120001372953,
            "cumulative_compression_ratio": 1.7499898788721022,
            "num_uses": 27,
            "rewritten": null,
            "rewritten_dreamcoder": null,
            "uses": {
                "fn_90 $13 $1": "(fn_45 $1 (fn_6 $13) 0)"
            },
            "dc_comparison_millis": null
        },
        {
            "body": "(fn_0 #3 #2 (lam (lam (fn_29 (#1 $1 $0) #0))))",
            "dreamcoder": "#(lambda (lambda (lambda (lambda (fn_0 $0 $1 (lambda (lambda (fn_29 ($4 $1 $0) $5))))))))",
            "arity": 4,
            "name": "fn_91",
            "utility": 5081,
            "final_cost": 4539458,
            "compression_ratio": 1.001209395482897,
            "cumulative_compression_ratio": 1.7521063087267255,
            "num_uses": 18,
            "rewritten": null,
            "rewritten_dreamcoder": null,
            "uses": {
                "fn_91 (lam (lam (lam (lam (lam (lam (lam (lam (lam (fn_20 $9 $7 ((lam ((lam ((lam ((lam ((lam ((lam ((lam ((lam (x64 $0 $5 $6 $7 $1 $4 $3 $2)) (next $16 $17))) (fill $0 $6 $1))) (sample $3 $1))) (randint (max 0 (fn_48 (fn_30 $1))) (min $1 (fn_12 (fn_30 $1)))))) (len $1))) (totuple (bitAnd (bitAnd $13 (ofcolor $130 $44)) (mapply dneighbors (ofcolor $130 $2)))))) (ofcolor $129 $1))) $129) ((lam (x40 $0 $124 $123 $128 $125 $126 $12 $11 $127)) (next $22 $23)))))))))))) x63 $119 $114": "(fn_0 $114 $119 (lam (lam (fn_29 (x63 $1 $0) (lam (lam (lam (lam (lam (lam (lam (lam (lam (fn_20 $11 $7 ((lam ((lam ((lam ((lam ((lam ((lam ((lam ((lam (x64 $0 $5 $6 $7 $1 $4 $3 $2)) (next $18 $19))) (fill $0 $6 $1))) (sample $3 $1))) (randint (max 0 (fn_48 (fn_30 $1))) (min $1 (fn_12 (fn_30 $1)))))) (len $1))) (totuple (bitAnd (bitAnd $15 (ofcolor $132 $46)) (mapply dneighbors (ofcolor $132 $2)))))) (ofcolor $131 $1))) $131) ((lam (x40 $0 $126 $125 $130 $127 $128 $14 $13 $129)) (next $24 $25))))))))))))))))"
            },
            "dc_comparison_millis": null
        },
        {
            "body": "(fn_8 x39 x37 x38)",
            "dreamcoder": "#(fn_8 x39 x37 x38)",
            "arity": 0,
            "name": "fn_92",
            "utility": 5051,
            "final_cost": 4534004,
            "compression_ratio": 1.0012029102753328,
            "cumulative_compression_ratio": 1.7542139354089683,
            "num_uses": 18,
            "rewritten": null,
            "rewritten_dreamcoder": null,
            "uses": {
                "fn_92 ": "(fn_8 x39 x37 x38)"
            },
            "dc_comparison_millis": null
        },
        {
            "body": "(lam (lam (lam (lam (lam (fn_34 #1 (#0 $4 $3 $2 $1 $0)))))))",
            "dreamcoder": "#(lambda (lambda (lambda (lambda (lambda (lambda (lambda (fn_34 $5 ($6 $4 $3 $2 $1 $0)))))))))",
            "arity": 2,
            "name": "fn_93",
            "utility": 4998,
            "final_cost": 4528394,
            "compression_ratio": 1.0012388497997302,
            "cumulative_compression_ratio": 1.7563871429915336,
            "num_uses": 11,
            "rewritten": null,
            "rewritten_dreamcoder": null,
            "uses": {
                "fn_93 x40 (lam (lam (lam (lam (lam (lam (lam (lam (lam (lam (lam (lam (lam (lam (lam (lam (lam (lam (lam (lam (lam (lam (lam (fn_49 (lt $0 $27) $29 $1 ((lam (fn_22 $12 (fn_1 $15 $16) ((lam ((lam ((lam ((lam ((lam (fn_22 $0 (x41 $27 $0 $25 $2 $23 $1 $21 $20 $19 $18 $17 $16 $15 $14 $13 $12 $11 $10 $4 $3 $7 $5) ((lam (fn_5 $0 $14 $15 ((lam (fn_73 $19 $0 ((lam ((lam (fn_54 $40 $14 $22 ((lam ((lam (fn_87 $1 $17 (lam ((lam ((lam ((lam ((lam ((lam ((lam ((lam (x41 $1 $14 $2 $16 $12 $15 $7 $0 $4 $32 $10 $3 $13 $28 $27 $9 $8 $24 $18 $17 $11 $19)) (fill $0 $24 $1))) (sfilter (sub $11 (bitOr $8 $7)) $1))) (lam (orOp (elem (fn_89 $0) $3) (elem (getItem $0 1) $2))))) (apply last $5))) (apply first $4))) (fill $139 $27 $3))) (fill $138 $18 $3))) (fill $130 $25 $2))) (outbox $1))) (backdrop (fn_80 (add $18 (mul 2 $8)) (add $19 (mul 2 $9)) (__tuple__ (fn_12 (add $19 $9)) (fn_12 (add $18 $8)))))))) (sub $0 $2))) (fn_12 $0)) (x41 $131 $2 $130 $4 $0 $3 $125 $132 $128 $20 $121 $129 $1 $16 $15 $122 $123 $12 $6 $5 $120 $7))) (backdrop (fn_80 (fn_64 $3 $15) (fn_64 $4 $16) $1))))) (fn_33 $1)))) (fn_44 $2 $41 $1 $40 $119))) (add 2 (mul 3 $2)))) (add 2 (mul 3 $2)))) fn_82)) fn_82))) (fn_12 $0)) (fn_1 $124 $117)))))))))))))))))))))))))": "(lam (lam (lam (lam (lam (fn_34 (lam (lam (lam (lam (lam (lam (lam (lam (lam (lam (lam (lam (lam (lam (lam (lam (lam (lam (lam (lam (lam (lam (lam (fn_49 (lt $0 $32) $34 $1 ((lam (fn_22 $12 (fn_1 $15 $16) ((lam ((lam ((lam ((lam ((lam (fn_22 $0 (x41 $27 $0 $25 $2 $23 $1 $21 $20 $19 $18 $17 $16 $15 $14 $13 $12 $11 $10 $4 $3 $7 $5) ((lam (fn_5 $0 $14 $15 ((lam (fn_73 $19 $0 ((lam ((lam (fn_54 $45 $14 $22 ((lam ((lam (fn_87 $1 $17 (lam ((lam ((lam ((lam ((lam ((lam ((lam ((lam (x41 $1 $14 $2 $16 $12 $15 $7 $0 $4 $32 $10 $3 $13 $28 $27 $9 $8 $24 $18 $17 $11 $19)) (fill $0 $24 $1))) (sfilter (sub $11 (bitOr $8 $7)) $1))) (lam (orOp (elem (fn_89 $0) $3) (elem (getItem $0 1) $2))))) (apply last $5))) (apply first $4))) (fill $144 $27 $3))) (fill $143 $18 $3))) (fill $135 $25 $2))) (outbox $1))) (backdrop (fn_80 (add $18 (mul 2 $8)) (add $19 (mul 2 $9)) (__tuple__ (fn_12 (add $19 $9)) (fn_12 (add $18 $8)))))))) (sub $0 $2))) (fn_12 $0)) (x41 $136 $2 $135 $4 $0 $3 $130 $137 $133 $20 $126 $134 $1 $16 $15 $127 $128 $12 $6 $5 $125 $7))) (backdrop (fn_80 (fn_64 $3 $15) (fn_64 $4 $16) $1))))) (fn_33 $1)))) (fn_44 $2 $46 $1 $45 $124))) (add 2 (mul 3 $2)))) (add 2 (mul 3 $2)))) fn_82)) fn_82))) (fn_12 $0)) (fn_1 $129 $122))))))))))))))))))))))))) (x40 $4 $3 $2 $1 $0)))))))"
            },
            "dc_comparison_millis": null
        },
        {
            "body": "(fn_42 #2 (replace #1 bgc #0))",
            "dreamcoder": "#(lambda (lambda (lambda (fn_42 $0 (replace $1 bgc $2)))))",
            "arity": 3,
            "name": "fn_94",
            "utility": 4947,
            "final_cost": 4523142,
            "compression_ratio": 1.0011611397563907,
            "cumulative_compression_ratio": 1.7584265539308745,
            "num_uses": 26,
            "rewritten": null,
            "rewritten_dreamcoder": null,
            "uses": {
                "fn_94 8 $0 $1": "(fn_42 $1 (replace $0 bgc 8))"
            },
            "dc_comparison_millis": null
        },
        {
            "body": "((lam (#3 (#1 #2))) (#1 #0))",
            "dreamcoder": "#(lambda (lambda (lambda (lambda ((lambda ($1 ($3 $2))) ($2 $3))))))",
            "arity": 4,
            "name": "fn_95",
            "utility": 4886,
            "final_cost": 4518251,
            "compression_ratio": 1.0010824985154654,
            "cumulative_compression_ratio": 1.7603300480650597,
            "num_uses": 426,
            "rewritten": null,
            "rewritten_dreamcoder": null,
            "uses": {
                "fn_95 (sub $2 3) fn_61 (sub $1 3) (lam ((lam ((lam ((lam ((lam ((lam ((lam ((lam ((lam ((lam ((lam ((lam ((lam ((lam ((lam ((lam ((lam ((lam ((lam ((lam ((lam ((lam ((lam ((lam ((lam ((lam ((lam ((lam (fn_1 $22 $0)) (fn_41 $5 d $0))) (fn_41 $5 c $66))) (fn_41 $5 b $65))) (fn_41 $5 a $64))) (fill $22 sqc (backdrop (__set__ (__tuple__ $23 #0) (__tuple__ (fn_12 $23) (fn_12 #0))))))) (getItem $8 $4))) (getItem $8 $4))) (getItem $8 $4))) (getItem $8 $4))) (fn_57 (fn_6 (len $4)) $22 $23))) (fn_57 (fn_6 (len $4)) $21 $22))) (fn_57 (fn_6 (len $4)) $20 $21))) (fn_57 (fn_6 (len $4)) $19 $20))) (order $0 (lam (manhattan (__set__ $0) (__set__ (__tuple__ (fn_12 $15) (fn_12 #0)))))))) (order $0 (lam (manhattan (__set__ $0) (__set__ (__tuple__ (fn_12 $14) #0))))))) (order $0 (lam (manhattan (__set__ $0) (__set__ (__tuple__ $13 (fn_12 #0)))))))) (order $0 (lam (manhattan (__set__ $0) (__set__ (__tuple__ $12 #0))))))) (fn_10 (fn_12 #0) gt (fn_12 $10) $4))) (sfilter $3 (lam (andOp (gt (fn_89 $0) (fn_12 $10)) (lt (getItem $0 1) #0)))))) (sfilter $2 (lam (andOp (lt (fn_89 $0) $9) (gt (getItem $0 1) (fn_12 #0))))))) (fn_10 #0 lt $7 $1))) (fn_71 $5))) (fn_41 (__tuple__ (fn_12 $5) (fn_12 #0)) d $0))) (fn_41 (__tuple__ (fn_12 $4) #0) c $22))) (fn_41 (__tuple__ $3 (fn_12 #0)) b $21))) (fn_41 (__tuple__ $2 #0) a $1))) (fn_60 $3 $2)))": "((lam ((lam ((lam ((lam ((lam ((lam ((lam ((lam ((lam ((lam ((lam ((lam ((lam ((lam ((lam ((lam ((lam ((lam ((lam ((lam ((lam ((lam ((lam ((lam ((lam ((lam ((lam ((lam ((lam (fn_1 $22 $0)) (fn_41 $5 d $0))) (fn_41 $5 c $67))) (fn_41 $5 b $66))) (fn_41 $5 a $65))) (fill $22 sqc (backdrop (__set__ (__tuple__ $24 $23) (__tuple__ (fn_12 $24) (fn_12 $23))))))) (getItem $8 $4))) (getItem $8 $4))) (getItem $8 $4))) (getItem $8 $4))) (fn_57 (fn_6 (len $4)) $23 $24))) (fn_57 (fn_6 (len $4)) $22 $23))) (fn_57 (fn_6 (len $4)) $21 $22))) (fn_57 (fn_6 (len $4)) $20 $21))) (order $0 (lam (manhattan (__set__ $0) (__set__ (__tuple__ (fn_12 $16) (fn_12 $15)))))))) (order $0 (lam (manhattan (__set__ $0) (__set__ (__tuple__ (fn_12 $15) $14))))))) (order $0 (lam (manhattan (__set__ $0) (__set__ (__tuple__ $14 (fn_12 $13)))))))) (order $0 (lam (manhattan (__set__ $0) (__set__ (__tuple__ $13 $12))))))) (fn_10 (fn_12 $10) gt (fn_12 $11) $4))) (sfilter $3 (lam (andOp (gt (fn_89 $0) (fn_12 $11)) (lt (getItem $0 1) $10)))))) (sfilter $2 (lam (andOp (lt (fn_89 $0) $10) (gt (getItem $0 1) (fn_12 $9))))))) (fn_10 $7 lt $8 $1))) (fn_71 $5))) (fn_41 (__tuple__ (fn_12 $6) (fn_12 $5)) d $0))) (fn_41 (__tuple__ (fn_12 $5) $4) c $23))) (fn_41 (__tuple__ $4 (fn_12 $3)) b $22))) (fn_41 (__tuple__ $3 $2) a $1))) (fn_60 $4 $3))) (fn_61 (sub $2 3)))) (fn_61 (sub $2 3)))"
            },
            "dc_comparison_millis": null
        },
        {
            "body": "(fn_22 #3 #2 (#1 (fn_33 #0)))",
            "dreamcoder": "#(lambda (lambda (lambda (lambda (fn_22 $0 $1 ($2 (fn_33 $3)))))))",
            "arity": 4,
            "name": "fn_96",
            "utility": 4744,
            "final_cost": 4513302,
            "compression_ratio": 1.0010965364161317,
            "cumulative_compression_ratio": 1.762260314067174,
            "num_uses": 49,
            "rewritten": null,
            "rewritten_dreamcoder": null,
            "uses": {
                "fn_96 $1 (lam (fn_5 $0 $9 $10 ((lam ((lam (fn_73 $89 $0 ((lam ((lam ((lam (fn_75 $0 (x25 $6 $2 $0 $5 $15 $14 $3 $8 $7 $1))) (sub (sub $0 $3) (outbox $3)))) (fn_12 $0))) (fill $0 fgc $1)) (fn_75 $0 (x25 $3 $95 $97 $2 $12 $11 $0 $5 $4 $96)))) (shift $0 $2))) (backdrop (fn_14 $3 $10 $4 $11))))) ((lam ((lam ((lam (fn_2 (range $2) $0 $89 (fn_0 $88 $90 (fn_0 $91 $92 (lam (fn_3 (lam (lam (lam (lam (lam (lam (fn_20 $7 $4 ((lam ((lam ((lam ((lam ((lam (x52 $0 $1 $2 $4 $3)) (next $11 $12))) (fn_41 $2 fgc $0))) (sub $0 (dneighbors $1)))) (fn_33 $99))) $100) (fn_1 $23 $98)))))))) (x51 $0))))))) (fn_43 $15))) (fn_57 (fn_6 (fn_30 (len $88))) $25 $26))) (ofcolor $13 bgc)) $0": "(fn_22 $0 ((lam ((lam ((lam (fn_2 (range $2) $0 $89 (fn_0 $88 $90 (fn_0 $91 $92 (lam (fn_3 (lam (lam (lam (lam (lam (lam (fn_20 $7 $4 ((lam ((lam ((lam ((lam ((lam (x52 $0 $1 $2 $4 $3)) (next $11 $12))) (fn_41 $2 fgc $0))) (sub $0 (dneighbors $1)))) (fn_33 $99))) $100) (fn_1 $23 $98)))))))) (x51 $0))))))) (fn_43 $15))) (fn_57 (fn_6 (fn_30 (len $88))) $25 $26))) (ofcolor $13 bgc)) ((lam (fn_5 $0 $9 $10 ((lam ((lam (fn_73 $89 $0 ((lam ((lam ((lam (fn_75 $0 (x25 $6 $2 $0 $5 $15 $14 $3 $8 $7 $1))) (sub (sub $0 $3) (outbox $3)))) (fn_12 $0))) (fill $0 fgc $1)) (fn_75 $0 (x25 $3 $95 $97 $2 $12 $11 $0 $5 $4 $96)))) (shift $0 $2))) (backdrop (fn_14 $3 $10 $4 $11))))) (fn_33 $1)))"
            },
            "dc_comparison_millis": null
        },
        {
            "body": "(fill #0 fgc)",
            "dreamcoder": "#(lambda (fill $0 fgc))",
            "arity": 1,
            "name": "fn_97",
            "utility": 4646,
            "final_cost": 4508454,
            "compression_ratio": 1.001075313178309,
            "cumulative_compression_ratio": 1.7641552958065014,
            "num_uses": 48,
            "rewritten": null,
            "rewritten_dreamcoder": null,
            "uses": {
                "fn_97 $0": "(fill $0 fgc)"
            },
            "dc_comparison_millis": null
        },
        {
            "body": "(fn_2 (range #0))",
            "dreamcoder": "#(lambda (fn_2 (range $0)))",
            "arity": 1,
            "name": "fn_98",
            "utility": 4646,
            "final_cost": 4503606,
            "compression_ratio": 1.0010764707214619,
            "cumulative_compression_ratio": 1.7660543573305492,
            "num_uses": 48,
            "rewritten": null,
            "rewritten_dreamcoder": null,
            "uses": {
                "fn_98 $1": "(fn_2 (range $1))"
            },
            "dc_comparison_millis": null
        },
        {
            "body": "(sub (sub #1 #0) (outbox #0))",
            "dreamcoder": "#(lambda (lambda (sub (sub $0 $1) (outbox $1))))",
            "arity": 2,
            "name": "fn_99",
            "utility": 4644,
            "final_cost": 4498657,
            "compression_ratio": 1.001100106098331,
            "cumulative_compression_ratio": 1.7679972044990326,
            "num_uses": 16,
            "rewritten": null,
            "rewritten_dreamcoder": null,
            "uses": {
                "fn_99 $1 $0": "(sub (sub $0 $1) (outbox $1))"
            },
            "dc_comparison_millis": null
        },
        {
            "body": "(fn_24 (hmirror (vmirror #0)))",
            "dreamcoder": "#(lambda (fn_24 (hmirror (vmirror $0))))",
            "arity": 1,
            "name": "fn_100",
            "utility": 4545,
            "final_cost": 4493809,
            "compression_ratio": 1.0010788175465402,
            "cumulative_compression_ratio": 1.76990455090548,
            "num_uses": 24,
            "rewritten": null,
            "rewritten_dreamcoder": null,
            "uses": {
                "fn_100 $3": "(fn_24 (hmirror (vmirror $3)))"
            },
            "dc_comparison_millis": null
        },
        {
            "body": "(ifElse (eq #1 #0))",
            "dreamcoder": "#(lambda (lambda (ifElse (eq $0 $1))))",
            "arity": 2,
            "name": "fn_101",
            "utility": 4544,
            "final_cost": 4489062,
            "compression_ratio": 1.0010574592197656,
            "cumulative_compression_ratio": 1.7717761527909401,
            "num_uses": 47,
            "rewritten": null,
            "rewritten_dreamcoder": null,
            "uses": {
                "fn_101 $36 $0": "(ifElse (eq $0 $36))"
            },
            "dc_comparison_millis": null
        },
        {
            "body": "(fn_6 (sub #1 #0))",
            "dreamcoder": "#(lambda (lambda (fn_6 (sub $0 $1))))",
            "arity": 2,
            "name": "fn_102",
            "utility": 4443,
            "final_cost": 4484416,
            "compression_ratio": 1.001036032339551,
            "cumulative_compression_ratio": 1.7736117701836769,
            "num_uses": 46,
            "rewritten": null,
            "rewritten_dreamcoder": null,
            "uses": {
                "fn_102 $6 $13": "(fn_6 (sub $13 $6))"
            },
            "dc_comparison_millis": null
        },
        {
            "body": "(fn_41 (__tuple__ #1 #0))",
            "dreamcoder": "#(lambda (lambda (fn_41 (__tuple__ $0 $1))))",
            "arity": 2,
            "name": "fn_103",
            "utility": 4443,
            "final_cost": 4479770,
            "compression_ratio": 1.0010371068157518,
            "cumulative_compression_ratio": 1.775451195039032,
            "num_uses": 46,
            "rewritten": null,
            "rewritten_dreamcoder": null,
            "uses": {
                "fn_103 $2 $1": "(fn_41 (__tuple__ $1 $2))"
            },
            "dc_comparison_millis": null
        },
        {
            "body": "(ifElse (gt #1 #0))",
            "dreamcoder": "#(lambda (lambda (ifElse (gt $0 $1))))",
            "arity": 2,
            "name": "fn_104",
            "utility": 4443,
            "final_cost": 4475124,
            "compression_ratio": 1.0010381835229594,
            "cumulative_compression_ratio": 1.7772944392155399,
            "num_uses": 46,
            "rewritten": null,
            "rewritten_dreamcoder": null,
            "uses": {
                "fn_104 1 $0": "(ifElse (gt $0 1))"
            },
            "dc_comparison_millis": null
        },
        {
            "body": "(fn_0 #3 #2 (lam (fn_3 (lam #1) (#0 $0))))",
            "dreamcoder": "#(lambda (lambda (lambda (lambda (fn_0 $0 $1 (lambda (fn_3 (lambda $4) ($4 $0))))))))",
            "arity": 4,
            "name": "fn_105",
            "utility": 4180,
            "final_cost": 4470636,
            "compression_ratio": 1.001003884011134,
            "cumulative_compression_ratio": 1.7790786366861455,
            "num_uses": 22,
            "rewritten": null,
            "rewritten_dreamcoder": null,
            "uses": {
                "fn_105 x57 (lam (lam (lam (lam (lam (fn_20 $5 $4 ((lam ((lam ((lam (fn_38 (lam (lam (lam (ifElse True ((lam ((lam (ifElse (nelem $1 $25) (fn_104 2 (len $7) (fn_51 ((lam (x58 $0 $9 $8 $2 $1)) (next $14 $15)) (append_M $15 $7)) ((lam (x58 $0 $9 $8 $2 $1)) (next $14 $15))) (fn_51 (x70 $1 $0) (append_M $7 $1)))) (fn_12 $0))) (add $15 (multiply $124 $7))) (fn_104 2 (len $5) (fn_51 ((lam (x58 $0 $7 $6 $123 $124)) (next $12 $13)) (append_M $13 $5)) ((lam (x58 $0 $7 $6 $123 $124)) (next $12 $13))))))) x69 $119 $120)) 1)) (__list__ $9))) $121) (fn_104 0 (len $6) ((lam ((lam ((lam ((lam ((lam ((lam ((lam ((lam ((lam (x32 $3 $4 $2 $1 $6 $0 $5 $7 $16 $124 $125 $8 $17)) (sub $0 (set $5)))) (fill $0 $3 (set $4)))) (fill $0 $2 (fn_32 -1 (getItem $3) 0 __set__)))) (getItemFrom $0 1))) (fn_89 $131))) (getItem $2 $1))) (fn_57 (fn_6 (len $1)) $42 $43))) (sorted $0))) (fn_12 $0)) (x32 $126 $125 $127 $128 $123 $129 $124 $122 $7 $115 $116 $121 $8)))))))) $115 $101": "(fn_0 $101 $115 (lam (fn_3 (lam (lam (lam (lam (lam (lam (fn_20 $7 $4 ((lam ((lam ((lam (fn_38 (lam (lam (lam (ifElse True ((lam ((lam (ifElse (nelem $1 $27) (fn_104 2 (len $7) (fn_51 ((lam (x58 $0 $9 $8 $2 $1)) (next $16 $17)) (append_M $17 $7)) ((lam (x58 $0 $9 $8 $2 $1)) (next $16 $17))) (fn_51 (x70 $1 $0) (append_M $7 $1)))) (fn_12 $0))) (add $17 (multiply $126 $7))) (fn_104 2 (len $5) (fn_51 ((lam (x58 $0 $7 $6 $125 $126)) (next $14 $15)) (append_M $15 $5)) ((lam (x58 $0 $7 $6 $125 $126)) (next $14 $15))))))) x69 $121 $122)) 1)) (__list__ $11))) $123) (fn_104 0 (len $8) ((lam ((lam ((lam ((lam ((lam ((lam ((lam ((lam ((lam (x32 $3 $4 $2 $1 $6 $0 $5 $7 $18 $126 $127 $8 $19)) (sub $0 (set $5)))) (fill $0 $3 (set $4)))) (fill $0 $2 (fn_32 -1 (getItem $3) 0 __set__)))) (getItemFrom $0 1))) (fn_89 $133))) (getItem $2 $1))) (fn_57 (fn_6 (len $1)) $44 $45))) (sorted $0))) (fn_12 $0)) (x32 $128 $127 $129 $130 $125 $131 $126 $124 $9 $117 $118 $123 $10))))))))) (x57 $0))))"
            },
            "dc_comparison_millis": null
        },
        {
            "body": "(fn_0 #3 #2 (lam (fn_29 (#1 $0) (lam #0))))",
            "dreamcoder": "#(lambda (lambda (lambda (lambda (fn_0 $0 $1 (lambda (fn_29 ($3 $0) (lambda $5))))))))",
            "arity": 4,
            "name": "fn_106",
            "utility": 4180,
            "final_cost": 4466148,
            "compression_ratio": 1.0010048928069557,
            "cumulative_compression_ratio": 1.78086642001116,
            "num_uses": 22,
            "rewritten": null,
            "rewritten_dreamcoder": null,
            "uses": {
                "fn_106 (lam (lam (lam (lam (lam (lam (lam (fn_20 $7 $6 ((lam (fn_96 $109 (lam ((lam ((lam (fn_23 (lam (lam (lam (ifElse (andOp None (lt $0 $16)) ((lam ((lam (fn_75 $0 (x66 $1 $0))) (shift $9 $1))) (fn_33 $13)) (ifElse (lt $114 $16) ((lam ((lam ((lam (x50 $0 $1 $2 $115 $116 $10 $117)) (next $17 $18))) (paint $0 $115))) (difference $0 (bitOr (toindices $114) (outbox $114)))) ((lam (x50 $0 $117 $116 $113 $114 $8 $115)) (next $15 $16))))))) x65 $109 $110 (fn_27 $111))) 0)) (shift $2 $107))) (fn_1 $12 $6) $5)) $111) (fn_1 $11 $108))))))))) x49 $103 $101": "(fn_0 $101 $103 (lam (fn_29 (x49 $0) (lam (lam (lam (lam (lam (lam (lam (lam (fn_20 $9 $6 ((lam (fn_96 $111 (lam ((lam ((lam (fn_23 (lam (lam (lam (ifElse (andOp None (lt $0 $18)) ((lam ((lam (fn_75 $0 (x66 $1 $0))) (shift $9 $1))) (fn_33 $13)) (ifElse (lt $116 $18) ((lam ((lam ((lam (x50 $0 $1 $2 $117 $118 $10 $119)) (next $19 $20))) (paint $0 $117))) (difference $0 (bitOr (toindices $116) (outbox $116)))) ((lam (x50 $0 $119 $118 $115 $116 $8 $117)) (next $17 $18))))))) x65 $111 $112 (fn_27 $113))) 0)) (shift $2 $109))) (fn_1 $14 $6) $5)) $113) (fn_1 $13 $110)))))))))))))"
            },
            "dc_comparison_millis": null
        },
        {
            "body": "(fn_16 3)",
            "dreamcoder": "#(fn_16 3)",
            "arity": 0,
            "name": "fn_107",
            "utility": 4142,
            "final_cost": 4461805,
            "compression_ratio": 1.0009733728838441,
            "cumulative_compression_ratio": 1.7825998670941474,
            "num_uses": 43,
            "rewritten": null,
            "rewritten_dreamcoder": null,
            "uses": {
                "fn_107 ": "(fn_16 3)"
            },
            "dc_comparison_millis": null
        },
        {
            "body": "(mul 2)",
            "dreamcoder": "#(mul 2)",
            "arity": 0,
            "name": "fn_108",
            "utility": 4142,
            "final_cost": 4457462,
            "compression_ratio": 1.0009743212617404,
            "cumulative_compression_ratio": 1.7843366920458328,
            "num_uses": 43,
            "rewritten": null,
            "rewritten_dreamcoder": null,
            "uses": {
                "fn_108 ": "(mul 2)"
            },
            "dc_comparison_millis": null
        },
        {
            "body": "(fn_4 #0 3)",
            "dreamcoder": "#(lambda (fn_4 $0 3))",
            "arity": 1,
            "name": "fn_109",
            "utility": 4141,
            "final_cost": 4453119,
            "compression_ratio": 1.0009752714894886,
            "cumulative_compression_ratio": 1.7860769047492335,
            "num_uses": 43,
            "rewritten": null,
            "rewritten_dreamcoder": null,
            "uses": {
                "fn_109 $2": "(fn_4 $2 3)"
            },
            "dc_comparison_millis": null
        },
        {
            "body": "(fn_16 5)",
            "dreamcoder": "#(fn_16 5)",
            "arity": 0,
            "name": "fn_110",
            "utility": 3940,
            "final_cost": 4448978,
            "compression_ratio": 1.0009307755623875,
            "cumulative_compression_ratio": 1.787739341484719,
            "num_uses": 41,
            "rewritten": null,
            "rewritten_dreamcoder": null,
            "uses": {
                "fn_110 ": "(fn_16 5)"
            },
            "dc_comparison_millis": null
        },
        {
            "body": "(floordiv #0 3)",
            "dreamcoder": "#(lambda (floordiv $0 3))",
            "arity": 1,
            "name": "fn_111",
            "utility": 3939,
            "final_cost": 4444837,
            "compression_ratio": 1.0009316427126573,
            "cumulative_compression_ratio": 1.789404875814344,
            "num_uses": 41,
            "rewritten": null,
            "rewritten_dreamcoder": null,
            "uses": {
                "fn_111 $2": "(floordiv $2 3)"
            },
            "dc_comparison_millis": null
        },
        {
            "body": "(fn_30 (mul #1 #0))",
            "dreamcoder": "#(lambda (lambda (fn_30 (mul $0 $1))))",
            "arity": 2,
            "name": "fn_112",
            "utility": 3938,
            "final_cost": 4440696,
            "compression_ratio": 1.0009325114801824,
            "cumulative_compression_ratio": 1.791073516403735,
            "num_uses": 41,
            "rewritten": null,
            "rewritten_dreamcoder": null,
            "uses": {
                "fn_112 $9 $10": "(fn_30 (mul $10 $9))"
            },
            "dc_comparison_millis": null
        },
        {
            "body": "(max (min (fn_6 (mul #2 #1)) #0) 1)",
            "dreamcoder": "#(lambda (lambda (lambda (max (min (fn_6 (mul $0 $1)) $2) 1))))",
            "arity": 3,
            "name": "fn_113",
            "utility": 3937,
            "final_cost": 4436252,
            "compression_ratio": 1.001001746519359,
            "cumulative_compression_ratio": 1.7928677180647086,
            "num_uses": 11,
            "rewritten": null,
            "rewritten_dreamcoder": null,
            "uses": {
                "fn_113 $0 $9 $10": "(max (min (fn_6 (mul $10 $9)) $0) 1)"
            },
            "dc_comparison_millis": null
        },
        {
            "body": "(fn_51 (#3 (next #2 #1)) (append_M #1 #0))",
            "dreamcoder": "#(lambda (lambda (lambda (lambda (fn_51 ($0 (next $1 $2)) (append_M $2 $3))))))",
            "arity": 4,
            "name": "fn_114",
            "utility": 3935,
            "final_cost": 4432010,
            "compression_ratio": 1.0009571278043146,
            "cumulative_compression_ratio": 1.7945837216071263,
            "num_uses": 14,
            "rewritten": null,
            "rewritten_dreamcoder": null,
            "uses": {
                "fn_114 $0 $6 $5 (lam (x121 $0 $2 $1))": "(fn_51 ((lam (x121 $0 $2 $1)) (next $5 $6)) (append_M $6 $0))"
            },
            "dc_comparison_millis": null
        },
        {
            "body": "(fn_73 #2 #0 (#1 (fn_12 #0)))",
            "dreamcoder": "#(lambda (lambda (lambda (fn_73 $0 $2 ($1 (fn_12 $2))))))",
            "arity": 3,
            "name": "fn_115",
            "utility": 3835,
            "final_cost": 4427970,
            "compression_ratio": 1.0009123819718742,
            "cumulative_compression_ratio": 1.7962210674417394,
            "num_uses": 20,
            "rewritten": null,
            "rewritten_dreamcoder": null,
            "uses": {
                "fn_115 $0 (lam ((lam ((lam ((lam (fn_75 $0 (x35 $2 $1 $0 $13 $6 $5 $4 $9 $3))) (sub $0 $4))) (paint $0 $4))) (paint $0 (shift $11 $4)))) $10": "(fn_73 $10 $0 ((lam ((lam ((lam ((lam (fn_75 $0 (x35 $2 $1 $0 $13 $6 $5 $4 $9 $3))) (sub $0 $4))) (paint $0 $4))) (paint $0 (shift $11 $4)))) (fn_12 $0)))"
            },
            "dc_comparison_millis": null
        },
        {
            "body": "(totuple (fn_10 (sub #3 #2) lt #1 #0))",
            "dreamcoder": "#(lambda (lambda (lambda (lambda (totuple (fn_10 (sub $0 $1) lt $2 $3))))))",
            "arity": 4,
            "name": "fn_116",
            "utility": 3835,
            "final_cost": 4423728,
            "compression_ratio": 1.000958919716583,
            "cumulative_compression_ratio": 1.797943499238651,
            "num_uses": 14,
            "rewritten": null,
            "rewritten_dreamcoder": null,
            "uses": {
                "fn_116 $87 (sub $25 $2) $1 $24": "(totuple (fn_10 (sub $24 $1) lt (sub $25 $2) $87))"
            },
            "dc_comparison_millis": null
        },
        {
            "body": "(fn_0 #3 #2 (fn_29 #1 (lam #0)))",
            "dreamcoder": "#(lambda (lambda (lambda (lambda (fn_0 $0 $1 (fn_29 $2 (lambda $4)))))))",
            "arity": 4,
            "name": "fn_117",
            "utility": 3772,
            "final_cost": 4419750,
            "compression_ratio": 1.0009000509078567,
            "cumulative_compression_ratio": 1.7995617399174157,
            "num_uses": 39,
            "rewritten": null,
            "rewritten_dreamcoder": null,
            "uses": {
                "fn_117 (lam (lam (lam (lam (lam (lam (fn_20 $6 $5 ((lam ((lam ((lam ((lam ((lam ((lam (x61 $0 $2 $1 $4 $5 $3)) (next $11 $12))) (fill $0 barc (fn_45 $4 (add loci2 $3) (fn_12 loci2))))) (fill $0 dotc (apply (rbind astuple $3) $1)))) (sample (interval (fn_12 loci2) $30 1) $1))) (fn_19 (fn_48 (sub $29 loci2)) $31 $32))) $106) (fn_18 $106 $107 $0)))))))) x60 $99 $100": "(fn_0 $100 $99 (fn_29 x60 (lam (lam (lam (lam (lam (lam (lam (fn_20 $7 $5 ((lam ((lam ((lam ((lam ((lam ((lam (x61 $0 $2 $1 $4 $5 $3)) (next $12 $13))) (fill $0 barc (fn_45 $4 (add loci2 $3) (fn_12 loci2))))) (fill $0 dotc (apply (rbind astuple $3) $1)))) (sample (interval (fn_12 loci2) $31 1) $1))) (fn_19 (fn_48 (sub $30 loci2)) $32 $33))) $107) (fn_18 $107 $108 $0)))))))))))"
            },
            "dc_comparison_millis": null
        },
        {
            "body": "(add #0 2)",
            "dreamcoder": "#(lambda (add $0 2))",
            "arity": 1,
            "name": "fn_118",
            "utility": 3636,
            "final_cost": 4415912,
            "compression_ratio": 1.0008691296384529,
            "cumulative_compression_ratio": 1.8011257923618038,
            "num_uses": 38,
            "rewritten": null,
            "rewritten_dreamcoder": null,
            "uses": {
                "fn_118 $11": "(add $11 2)"
            },
            "dc_comparison_millis": null
        },
        {
            "body": "(fn_38 (lam (lam (lam (fn_20 #2 $1 #1 #0)))))",
            "dreamcoder": "#(lambda (lambda (lambda (fn_38 (lambda (lambda (lambda (fn_20 $3 $1 $4 $5))))))))",
            "arity": 3,
            "name": "fn_119",
            "utility": 3587,
            "final_cost": 4412017,
            "compression_ratio": 1.0008828161813519,
            "cumulative_compression_ratio": 1.802715855355951,
            "num_uses": 43,
            "rewritten": null,
            "rewritten_dreamcoder": null,
            "uses": {
                "fn_119 ((lam (fn_5 (shape $0) $16 $17 ((lam (fn_96 $1 (lam ((lam (fn_73 $34 $0 ((lam ((lam ((lam (x85 $5 $2 $0 $4 $20 $10 $19 $6 $9 $23 $22 $3 $1 $24 $11)) (fn_40 $3 neighbors $0))) (fn_12 $0))) (fill $0 (choice $43) $1)) (x85 $2 $227 $229 $1 $17 $7 $16 $3 $6 $20 $19 $0 $228 $21 $8))) (shift #0 $1))) (x85 $0 $33 $32 $31 $15 $5 $14 $1 $4 $18 $17 $23 $22 $19 $6) $0)) (fn_44 $18 $47 $17 $46 $227)))) (normalize #0)) ((lam (fn_51 ((lam (x132 $0 $1)) (next $1 $2)) (add_M $2 (fn_33 (bitAnd (sub $3 $2) (bitAnd (mapply dneighbors $2) $3)))))) $219) $0": "(fn_38 (lam (lam (lam (fn_20 $3 $1 ((lam (fn_51 ((lam (x132 $0 $1)) (next $4 $5)) (add_M $5 (fn_33 (bitAnd (sub $6 $5) (bitAnd (mapply dneighbors $5) $6)))))) $222) ((lam (fn_5 (shape $0) $19 $20 ((lam (fn_96 $1 (lam ((lam (fn_73 $37 $0 ((lam ((lam ((lam (x85 $5 $2 $0 $4 $23 $13 $22 $6 $12 $26 $25 $3 $1 $27 $14)) (fn_40 $3 neighbors $0))) (fn_12 $0))) (fill $0 (choice $46) $1)) (x85 $2 $230 $232 $1 $20 $10 $19 $3 $9 $23 $22 $0 $231 $24 $11))) (shift $3 $1))) (x85 $0 $36 $35 $34 $18 $8 $17 $1 $7 $21 $20 $26 $25 $22 $9) $0)) (fn_44 $21 $50 $20 $49 $230)))) (normalize $0)))))))"
            },
            "dc_comparison_millis": null
        },
        {
            "body": "(lam ((lam (#3 $0 #2 $1)) (next #1 #0)))",
            "dreamcoder": "#(lambda (lambda (lambda (lambda (lambda ((lambda ($2 $0 $3 $1)) (next $3 $4)))))))",
            "arity": 4,
            "name": "fn_120",
            "utility": 3568,
            "final_cost": 4408141,
            "compression_ratio": 1.0008792822189672,
            "cumulative_compression_ratio": 1.8043009513534156,
            "num_uses": 19,
            "rewritten": null,
            "rewritten_dreamcoder": null,
            "uses": {
                "fn_120 $5 $4 $0 x100": "(lam ((lam (x100 $0 $2 $1)) (next $5 $6)))"
            },
            "dc_comparison_millis": null
        },
        {
            "body": "(__tuple__ #0 0)",
            "dreamcoder": "#(lambda (__tuple__ $0 0))",
            "arity": 1,
            "name": "fn_121",
            "utility": 3535,
            "final_cost": 4404404,
            "compression_ratio": 1.0008484689415413,
            "cumulative_compression_ratio": 1.8058318446718324,
            "num_uses": 37,
            "rewritten": null,
            "rewritten_dreamcoder": null,
            "uses": {
                "fn_121 $1": "(__tuple__ $1 0)"
            },
            "dc_comparison_millis": null
        },
        {
            "body": "(fn_49 (lt #1 #0))",
            "dreamcoder": "#(lambda (lambda (fn_49 (lt $0 $1))))",
            "arity": 2,
            "name": "fn_122",
            "utility": 3534,
            "final_cost": 4400667,
            "compression_ratio": 1.0008491894524172,
            "cumulative_compression_ratio": 1.8073653380271668,
            "num_uses": 37,
            "rewritten": null,
            "rewritten_dreamcoder": null,
            "uses": {
                "fn_122 $10 $0": "(fn_49 (lt $0 $10))"
            },
            "dc_comparison_millis": null
        },
        {
            "body": "((lam (#3 (remove (#2 #1) #0))) (remove #1 #0))",
            "dreamcoder": "#(lambda (lambda (lambda (lambda ((lambda ($1 (remove ($2 $3) $4))) (remove $2 $3))))))",
            "arity": 4,
            "name": "fn_123",
            "utility": 3440,
            "final_cost": 4397019,
            "compression_ratio": 1.0008296529989977,
            "cumulative_compression_ratio": 1.8088648241001457,
            "num_uses": 12,
            "rewritten": null,
            "rewritten_dreamcoder": null,
            "uses": {
                "fn_123 $73 $1 fn_12 (lam ((lam ((lam ((lam ((lam ((lam ((lam ((lam ((lam ((lam ((lam ((lam (x27 $0 $6 $3 $1 $5 $13 $12 $7 $8 $4)) (next $25 $26))) (fn_103 $11 (fn_6 $31) 4 $0))) (fill $89 $4 $2))) (fill $0 $3 $1))) (sub (neighbors $1) (fn_21 (fn_12 $8) (fn_12 $3) (fn_6 $8) (fn_12 $3))))) (__tuple__ $2 $7))) (choice $23))) (fn_61 (fn_6 $25)))) (remove (fn_48 $4) $0))) (remove (fn_118 $3) $75))) (remove (fn_6 $2) $74)))": "((lam ((lam ((lam ((lam ((lam ((lam ((lam ((lam ((lam ((lam ((lam ((lam ((lam (x27 $0 $6 $3 $1 $5 $14 $13 $7 $8 $4)) (next $26 $27))) (fn_103 $12 (fn_6 $32) 4 $0))) (fill $90 $4 $2))) (fill $0 $3 $1))) (sub (neighbors $1) (fn_21 (fn_12 $9) (fn_12 $3) (fn_6 $9) (fn_12 $3))))) (__tuple__ $2 $8))) (choice $24))) (fn_61 (fn_6 $26)))) (remove (fn_48 $5) $0))) (remove (fn_118 $4) $76))) (remove (fn_6 $3) $75))) (remove (fn_12 $2) $74))) (remove $1 $73))"
            },
            "dc_comparison_millis": null
        },
        {
            "body": "(fn_50 0)",
            "dreamcoder": "#(fn_50 0)",
            "arity": 0,
            "name": "fn_124",
            "utility": 3435,
            "final_cost": 4393383,
            "compression_ratio": 1.0008276082463103,
            "cumulative_compression_ratio": 1.8103618555450316,
            "num_uses": 36,
            "rewritten": null,
            "rewritten_dreamcoder": null,
            "uses": {
                "fn_124 ": "(fn_50 0)"
            },
            "dc_comparison_millis": null
        },
        {
            "body": "(frozenset (__set__ (frozenset (__set__ ORIGIN DOWN UNITY)) (frozenset (__set__ ORIGIN DOWN RIGHT)) (frozenset (__set__ UNITY DOWN RIGHT)) (frozenset (__set__ UNITY ORIGIN RIGHT)) (shift (frozenset (__set__ ORIGIN UP DOWN)) DOWN) (shift (frozenset (__set__ ORIGIN LEFT RIGHT)) RIGHT)))",
            "dreamcoder": "#(frozenset (__set__ (frozenset (__set__ ORIGIN DOWN UNITY)) (frozenset (__set__ ORIGIN DOWN RIGHT)) (frozenset (__set__ UNITY DOWN RIGHT)) (frozenset (__set__ UNITY ORIGIN RIGHT)) (shift (frozenset (__set__ ORIGIN UP DOWN)) DOWN) (shift (frozenset (__set__ ORIGIN LEFT RIGHT)) RIGHT)))",
            "arity": 0,
            "name": "fn_125",
            "utility": 3435,
            "final_cost": 4386313,
            "compression_ratio": 1.001611832078559,
            "cumulative_compression_ratio": 1.8132798548575986,
            "num_uses": 2,
            "rewritten": null,
            "rewritten_dreamcoder": null,
            "uses": {
                "fn_125 ": "(frozenset (__set__ (frozenset (__set__ ORIGIN DOWN UNITY)) (frozenset (__set__ ORIGIN DOWN RIGHT)) (frozenset (__set__ UNITY DOWN RIGHT)) (frozenset (__set__ UNITY ORIGIN RIGHT)) (shift (frozenset (__set__ ORIGIN UP DOWN)) DOWN) (shift (frozenset (__set__ ORIGIN LEFT RIGHT)) RIGHT)))"
            },
            "dc_comparison_millis": null
        },
        {
            "body": "(randint 2)",
            "dreamcoder": "#(randint 2)",
            "arity": 0,
            "name": "fn_126",
            "utility": 3435,
            "final_cost": 4382677,
            "compression_ratio": 1.0008296299270971,
            "cumulative_compression_ratio": 1.8147842060913908,
            "num_uses": 36,
            "rewritten": null,
            "rewritten_dreamcoder": null,
            "uses": {
                "fn_126 ": "(randint 2)"
            },
            "dc_comparison_millis": null
        },
        {
            "body": "(interval #1 #0 1)",
            "dreamcoder": "#(lambda (lambda (interval $0 $1 1)))",
            "arity": 2,
            "name": "fn_127",
            "utility": 3433,
            "final_cost": 4379041,
            "compression_ratio": 1.0008303187844096,
            "cumulative_compression_ratio": 1.8162910555073584,
            "num_uses": 36,
            "rewritten": null,
            "rewritten_dreamcoder": null,
            "uses": {
                "fn_127 (add $0 $33) $0": "(interval $0 (add $0 $33) 1)"
            },
            "dc_comparison_millis": null
        },
        {
            "body": "(fn_0 #3 #2 #1 (fn_27 #0))",
            "dreamcoder": "#(lambda (lambda (lambda (lambda (fn_0 $0 $1 $2 (fn_27 $3))))))",
            "arity": 4,
            "name": "fn_128",
            "utility": 3431,
            "final_cost": 4375405,
            "compression_ratio": 1.0008310087866152,
            "cumulative_compression_ratio": 1.8178004093335356,
            "num_uses": 36,
            "rewritten": null,
            "rewritten_dreamcoder": null,
            "uses": {
                "fn_128 $103 (fn_0 $70 $69 (fn_0 $94 $77 (fn_0 $79 $60 (fn_0 $59 $92 (fn_0 $101 $99 (fn_0 $97 $96 (fn_0 $74 $95 (fn_34 (lam (lam (lam (lam (lam (lam (lam (lam (lam (lam (lam (lam (lam (lam (lam (lam (lam (lam (fn_49 (lte $0 $19) $21 $1 (fn_22 $11 (fn_1 $12 $13) ((lam ((lam ((lam (fn_22 $0 (fn_75 $0 (x36 $19 $18 $17 $16 $15 $14 $13 $12 $11 $10 $9 $8 $2 $1 $0 $4)) (fn_5 (choice $0) $11 $12 ((lam ((lam ((lam ((lam ((lam ((lam ((lam (fn_98 $1 $0 $120 (fn_23 (lam (lam (lam (fn_20 $3 $2 ((lam (fn_51 ((lam ((lam (x72 $0 $1 $2)) (next $5 $6))) (sub $0 $10)) (add_M $9 (fn_33 (bitAnd $2 (mapply neighbors $9)))))) $126) (fn_5 (shape $126) $12 $13 ((lam ((lam ((lam (fn_73 $28 $1 ((lam (fn_87 $4 $2 (lam ((lam ((lam (fn_75 $0 (x36 $5 $16 $4 $3 $2 $0 $131 $30 $29 $11 $13 $6 $20 $19 $18 $1))) (fn_99 $5 $0))) (fn_12 $0))) (fill $136 7 $3))) (fill $0 $1 $3)) (fn_75 $0 (x36 $1 $12 $0 $132 $134 $136 $127 $26 $25 $7 $9 $2 $16 $15 $14 $135)))) (choice $40))) (backdrop $1))) (shift $0 (__tuple__ $24 $23)))))))) x71 $122 $121))) (min (max 2 $0) (fn_6 (mul $9 $8))))) (fn_84 $1 (mul $8 $7)))) (fn_57 (fn_112 $6 $7) $38 $39))) (remove $2 $117))) (__set__ $1))) (fn_33 $115))) (fn_70 $3 $2))))) (fn_116 $122 (sub $31 $2) $1 $30))) (fn_126 7))) (fn_126 7))) (fn_1 $117 $115)))))))))))))))))))) x35)))))))) $71 $100": "(fn_0 $100 $71 (fn_0 $70 $69 (fn_0 $94 $77 (fn_0 $79 $60 (fn_0 $59 $92 (fn_0 $101 $99 (fn_0 $97 $96 (fn_0 $74 $95 (fn_34 (lam (lam (lam (lam (lam (lam (lam (lam (lam (lam (lam (lam (lam (lam (lam (lam (lam (lam (fn_49 (lte $0 $19) $21 $1 (fn_22 $11 (fn_1 $12 $13) ((lam ((lam ((lam (fn_22 $0 (fn_75 $0 (x36 $19 $18 $17 $16 $15 $14 $13 $12 $11 $10 $9 $8 $2 $1 $0 $4)) (fn_5 (choice $0) $11 $12 ((lam ((lam ((lam ((lam ((lam ((lam ((lam (fn_98 $1 $0 $120 (fn_23 (lam (lam (lam (fn_20 $3 $2 ((lam (fn_51 ((lam ((lam (x72 $0 $1 $2)) (next $5 $6))) (sub $0 $10)) (add_M $9 (fn_33 (bitAnd $2 (mapply neighbors $9)))))) $126) (fn_5 (shape $126) $12 $13 ((lam ((lam ((lam (fn_73 $28 $1 ((lam (fn_87 $4 $2 (lam ((lam ((lam (fn_75 $0 (x36 $5 $16 $4 $3 $2 $0 $131 $30 $29 $11 $13 $6 $20 $19 $18 $1))) (fn_99 $5 $0))) (fn_12 $0))) (fill $136 7 $3))) (fill $0 $1 $3)) (fn_75 $0 (x36 $1 $12 $0 $132 $134 $136 $127 $26 $25 $7 $9 $2 $16 $15 $14 $135)))) (choice $40))) (backdrop $1))) (shift $0 (__tuple__ $24 $23)))))))) x71 $122 $121))) (min (max 2 $0) (fn_6 (mul $9 $8))))) (fn_84 $1 (mul $8 $7)))) (fn_57 (fn_112 $6 $7) $38 $39))) (remove $2 $117))) (__set__ $1))) (fn_33 $115))) (fn_70 $3 $2))))) (fn_116 $122 (sub $31 $2) $1 $30))) (fn_126 7))) (fn_126 7))) (fn_1 $117 $115)))))))))))))))))))) x35)))))))) (fn_27 $103))"
            },
            "dc_comparison_millis": null
        },
        {
            "body": "(fn_5 (shape #0))",
            "dreamcoder": "#(lambda (fn_5 (shape $0)))",
            "arity": 1,
            "name": "fn_129",
            "utility": 3333,
            "final_cost": 4371870,
            "compression_ratio": 1.000808578480147,
            "cumulative_compression_ratio": 1.819270243625725,
            "num_uses": 35,
            "rewritten": null,
            "rewritten_dreamcoder": null,
            "uses": {
                "fn_129 $0": "(fn_5 (shape $0))"
            },
            "dc_comparison_millis": null
        },
        {
            "body": "(fn_128 #3 (fn_0 #2 #1 #0))",
            "dreamcoder": "#(lambda (lambda (lambda (lambda (fn_128 $0 (fn_0 $1 $2 $3))))))",
            "arity": 4,
            "name": "fn_130",
            "utility": 3330,
            "final_cost": 4368335,
            "compression_ratio": 1.0008092328083813,
            "cumulative_compression_ratio": 1.8207424567941788,
            "num_uses": 35,
            "rewritten": null,
            "rewritten_dreamcoder": null,
            "uses": {
                "fn_130 (fn_0 $94 $77 (fn_0 $79 $60 (fn_0 $59 $92 (fn_0 $101 $99 (fn_0 $97 $96 (fn_0 $74 $95 (fn_34 (lam (lam (lam (lam (lam (lam (lam (lam (lam (lam (lam (lam (lam (lam (lam (lam (lam (lam (fn_49 (lte $0 $19) $21 $1 (fn_22 $11 (fn_1 $12 $13) ((lam ((lam ((lam (fn_22 $0 (fn_75 $0 (x36 $19 $18 $17 $16 $15 $14 $13 $12 $11 $10 $9 $8 $2 $1 $0 $4)) (fn_5 (choice $0) $11 $12 ((lam ((lam ((lam ((lam ((lam ((lam ((lam (fn_98 $1 $0 $120 (fn_23 (lam (lam (lam (fn_20 $3 $2 ((lam (fn_51 ((lam ((lam (x72 $0 $1 $2)) (next $5 $6))) (sub $0 $10)) (add_M $9 (fn_33 (bitAnd $2 (mapply neighbors $9)))))) $126) (fn_129 $126 $12 $13 ((lam ((lam ((lam (fn_73 $28 $1 ((lam (fn_87 $4 $2 (lam ((lam ((lam (fn_75 $0 (x36 $5 $16 $4 $3 $2 $0 $131 $30 $29 $11 $13 $6 $20 $19 $18 $1))) (fn_99 $5 $0))) (fn_12 $0))) (fill $136 7 $3))) (fill $0 $1 $3)) (fn_75 $0 (x36 $1 $12 $0 $132 $134 $136 $127 $26 $25 $7 $9 $2 $16 $15 $14 $135)))) (choice $40))) (backdrop $1))) (shift $0 (__tuple__ $24 $23)))))))) x71 $122 $121))) (min (max 2 $0) (fn_6 (mul $9 $8))))) (fn_84 $1 (mul $8 $7)))) (fn_57 (fn_112 $6 $7) $38 $39))) (remove $2 $117))) (__set__ $1))) (fn_33 $115))) (fn_70 $3 $2))))) (fn_116 $122 (sub $31 $2) $1 $30))) (fn_126 7))) (fn_126 7))) (fn_1 $117 $115)))))))))))))))))))) x35))))))) $69 $70 $103": "(fn_128 $103 (fn_0 $70 $69 (fn_0 $94 $77 (fn_0 $79 $60 (fn_0 $59 $92 (fn_0 $101 $99 (fn_0 $97 $96 (fn_0 $74 $95 (fn_34 (lam (lam (lam (lam (lam (lam (lam (lam (lam (lam (lam (lam (lam (lam (lam (lam (lam (lam (fn_49 (lte $0 $19) $21 $1 (fn_22 $11 (fn_1 $12 $13) ((lam ((lam ((lam (fn_22 $0 (fn_75 $0 (x36 $19 $18 $17 $16 $15 $14 $13 $12 $11 $10 $9 $8 $2 $1 $0 $4)) (fn_5 (choice $0) $11 $12 ((lam ((lam ((lam ((lam ((lam ((lam ((lam (fn_98 $1 $0 $120 (fn_23 (lam (lam (lam (fn_20 $3 $2 ((lam (fn_51 ((lam ((lam (x72 $0 $1 $2)) (next $5 $6))) (sub $0 $10)) (add_M $9 (fn_33 (bitAnd $2 (mapply neighbors $9)))))) $126) (fn_129 $126 $12 $13 ((lam ((lam ((lam (fn_73 $28 $1 ((lam (fn_87 $4 $2 (lam ((lam ((lam (fn_75 $0 (x36 $5 $16 $4 $3 $2 $0 $131 $30 $29 $11 $13 $6 $20 $19 $18 $1))) (fn_99 $5 $0))) (fn_12 $0))) (fill $136 7 $3))) (fill $0 $1 $3)) (fn_75 $0 (x36 $1 $12 $0 $132 $134 $136 $127 $26 $25 $7 $9 $2 $16 $15 $14 $135)))) (choice $40))) (backdrop $1))) (shift $0 (__tuple__ $24 $23)))))))) x71 $122 $121))) (min (max 2 $0) (fn_6 (mul $9 $8))))) (fn_84 $1 (mul $8 $7)))) (fn_57 (fn_112 $6 $7) $38 $39))) (remove $2 $117))) (__set__ $1))) (fn_33 $115))) (fn_70 $3 $2))))) (fn_116 $122 (sub $31 $2) $1 $30))) (fn_126 7))) (fn_126 7))) (fn_1 $117 $115)))))))))))))))))))) x35)))))))))"
            },
            "dc_comparison_millis": null
        },
        {
            "body": "(fn_54 #1 #3 bgc (#2 (fn_60 #1 #0)))",
            "dreamcoder": "#(lambda (lambda (lambda (lambda (fn_54 $2 $0 bgc ($1 (fn_60 $2 $3)))))))",
            "arity": 4,
            "name": "fn_131",
            "utility": 3329,
            "final_cost": 4364699,
            "compression_ratio": 1.0008330471356672,
            "cumulative_compression_ratio": 1.822259221082599,
            "num_uses": 12,
            "rewritten": null,
            "rewritten_dreamcoder": null,
            "uses": {
                "fn_131 $11 $12 (lam ((lam (fn_2 $3 $0 $91 (fn_0 $92 $95 (fn_105 x65 (lam (lam (lam (lam (lam (fn_20 $5 $4 ((lam ((lam ((lam (fn_87 (getItemWithStep $2 1 -1 2) 4 (lam ((lam (x66 $0 $2 $1 $3 $4)) (next $9 $10))) (fn_97 $104 $2))) (fn_97 $0 $1))) (order (shoot $1 (fn_46 1)) first))) $102) (fn_1 $100 $98))))))) $96 $93)))) (fn_60 $13 $12))) fgc": "(fn_54 $12 fgc bgc ((lam ((lam (fn_2 $3 $0 $91 (fn_0 $92 $95 (fn_105 x65 (lam (lam (lam (lam (lam (fn_20 $5 $4 ((lam ((lam ((lam (fn_87 (getItemWithStep $2 1 -1 2) 4 (lam ((lam (x66 $0 $2 $1 $3 $4)) (next $9 $10))) (fn_97 $104 $2))) (fn_97 $0 $1))) (order (shoot $1 (fn_46 1)) first))) $102) (fn_1 $100 $98))))))) $96 $93)))) (fn_60 $13 $12))) (fn_60 $12 $11)))"
            },
            "dc_comparison_millis": null
        },
        {
            "body": "(#3 (#2 #0) (#1 #0))",
            "dreamcoder": "#(lambda (lambda (lambda (lambda ($0 ($1 $3) ($2 $3))))))",
            "arity": 4,
            "name": "fn_132",
            "utility": 3329,
            "final_cost": 4361366,
            "compression_ratio": 1.000764210112153,
            "cumulative_compression_ratio": 1.8236518100063144,
            "num_uses": 88,
            "rewritten": null,
            "rewritten_dreamcoder": null,
            "uses": {
                "fn_132 (fn_64 $5 $3) (__tuple__ (fn_12 $4)) (__tuple__ $4) __set__": "(__set__ (__tuple__ $4 (fn_64 $5 $3)) (__tuple__ (fn_12 $4) (fn_64 $5 $3)))"
            },
            "dc_comparison_millis": null
        },
        {
            "body": "(fn_104 2 #3 ((lam #2) (fn_24 (vmirror #1) #0)))",
            "dreamcoder": "#(lambda (lambda (lambda (lambda (fn_104 2 $0 ((lambda $2) (fn_24 (vmirror $2) $3)))))))",
            "arity": 4,
            "name": "fn_133",
            "utility": 3240,
            "final_cost": 4357718,
            "compression_ratio": 1.0008371353997665,
            "cumulative_compression_ratio": 1.8251784534933189,
            "num_uses": 12,
            "rewritten": null,
            "rewritten_dreamcoder": null,
            "uses": {
                "fn_133 $138 $3 ((lam (fn_47 $0 $4 (lam ((lam (fn_94 8 $0 $1)) (fn_100 $4 $142))) $1 (fn_94 8 $0 $138))) (fn_24 (vmirror $2) $141)) $0": "(fn_104 2 $0 ((lam ((lam (fn_47 $0 $5 (lam ((lam (fn_94 8 $0 $1)) (fn_100 $5 $143))) $2 (fn_94 8 $0 $139))) (fn_24 (vmirror $3) $142))) (fn_24 (vmirror $3) $138)))"
            },
            "dc_comparison_millis": null
        },
        {
            "body": "(fill #0 2)",
            "dreamcoder": "#(lambda (fill $0 2))",
            "arity": 1,
            "name": "fn_134",
            "utility": 3232,
            "final_cost": 4354284,
            "compression_ratio": 1.0007886486044548,
            "cumulative_compression_ratio": 1.8266178779335474,
            "num_uses": 34,
            "rewritten": null,
            "rewritten_dreamcoder": null,
            "uses": {
                "fn_134 $0": "(fill $0 2)"
            },
            "dc_comparison_millis": null
        },
        {
            "body": "(min (max #1 #0))",
            "dreamcoder": "#(lambda (lambda (min (max $0 $1))))",
            "arity": 2,
            "name": "fn_135",
            "utility": 3231,
            "final_cost": 4350850,
            "compression_ratio": 1.0007892710619763,
            "cumulative_compression_ratio": 1.828059574565889,
            "num_uses": 34,
            "rewritten": null,
            "rewritten_dreamcoder": null,
            "uses": {
                "fn_135 0 $0": "(min (max $0 0))"
            },
            "dc_comparison_millis": null
        },
        {
            "body": "(fn_69 #3 (lam (lam (lam (lam (fn_20 #2 $3 #1 #0))))))",
            "dreamcoder": "#(lambda (lambda (lambda (lambda (fn_69 $0 (lambda (lambda (lambda (lambda (fn_20 $5 $3 $6 $7))))))))))",
            "arity": 4,
            "name": "fn_136",
            "utility": 3192,
            "final_cost": 4347348,
            "compression_ratio": 1.0008055485781215,
            "cumulative_compression_ratio": 1.8295321653569019,
            "num_uses": 65,
            "rewritten": null,
            "rewritten_dreamcoder": null,
            "uses": {
                "fn_136 (fn_1 $137 $136) (fn_35 x111 $1 $0 x106 $139) $0 x105": "(fn_69 x105 (lam (lam (lam (lam (fn_20 $4 $3 (fn_35 x111 $5 $4 x106 $143) (fn_1 $141 $140)))))))"
            },
            "dc_comparison_millis": null
        },
        {
            "body": "(lam ((lam ((lam (#3 $0 $1 $2)) #2)) (fill $0 #1 #0)))",
            "dreamcoder": "#(lambda (lambda (lambda (lambda (lambda ((lambda ((lambda ($3 $0 $1 $2)) $3)) (fill $0 $3 $4)))))))",
            "arity": 4,
            "name": "fn_137",
            "utility": 3152,
            "final_cost": 4343685,
            "compression_ratio": 1.0008432931946032,
            "cumulative_compression_ratio": 1.831074997381255,
            "num_uses": 9,
            "rewritten": null,
            "rewritten_dreamcoder": null,
            "uses": {
                "fn_137 (fn_55 $0 0 $6) barc (next $3 $4) x15": "(lam ((lam ((lam (x15 $0 $1 $2)) (next $5 $6))) (fill $0 barc (fn_55 $1 0 $7))))"
            },
            "dc_comparison_millis": null
        },
        {
            "body": "(randint 3)",
            "dreamcoder": "#(randint 3)",
            "arity": 0,
            "name": "fn_138",
            "utility": 3132,
            "final_cost": 4340352,
            "compression_ratio": 1.0007679100681235,
            "cumulative_compression_ratio": 1.8324810983072333,
            "num_uses": 33,
            "rewritten": null,
            "rewritten_dreamcoder": null,
            "uses": {
                "fn_138 ": "(randint 3)"
            },
            "dc_comparison_millis": null
        },
        {
            "body": "(fn_16 2)",
            "dreamcoder": "#(fn_16 2)",
            "arity": 0,
            "name": "fn_139",
            "utility": 3132,
            "final_cost": 4337019,
            "compression_ratio": 1.00076850020717,
            "cumulative_compression_ratio": 1.8338893604109174,
            "num_uses": 33,
            "rewritten": null,
            "rewritten_dreamcoder": null,
            "uses": {
                "fn_139 ": "(fn_16 2)"
            },
            "dc_comparison_millis": null
        },
        {
            "body": "(fn_22 #1 (fn_75 #1 (#2 #1 #0)))",
            "dreamcoder": "#(lambda (lambda (lambda (fn_22 $1 (fn_75 $1 ($0 $1 $2))))))",
            "arity": 3,
            "name": "fn_140",
            "utility": 3127,
            "final_cost": 4333686,
            "compression_ratio": 1.000769091253958,
            "cumulative_compression_ratio": 1.835299788678736,
            "num_uses": 11,
            "rewritten": null,
            "rewritten_dreamcoder": null,
            "uses": {
                "fn_140 $4 $0 (x30 $15 $14 $13 $12 $11 $10 $9 $8 $2 $1)": "(fn_22 $0 (fn_75 $0 (x30 $15 $14 $13 $12 $11 $10 $9 $8 $2 $1 $0 $4)))"
            },
            "dc_comparison_millis": null
        },
        {
            "body": "((lam ((lam (fn_62 #3 $0 (lam (fn_28 $1 #2 $2 #1)))) #0)) #0)",
            "dreamcoder": "#(lambda (lambda (lambda (lambda ((lambda ((lambda (fn_62 $2 $0 (lambda (fn_28 $1 $4 $2 $5)))) $4)) $3)))))",
            "arity": 4,
            "name": "fn_141",
            "utility": 3038,
            "final_cost": 4330136,
            "compression_ratio": 1.0008198356818354,
            "cumulative_compression_ratio": 1.8368044329323598,
            "num_uses": 6,
            "rewritten": null,
            "rewritten_dreamcoder": null,
            "uses": {
                "fn_141 (fn_107 $2 $3) (lam ((lam ((lam (fn_2 $1 $0 $42 (fn_0 $43 $40 (fn_0 $45 $44 (fn_106 (lam (lam (lam (lam (lam (lam (lam (fn_20 $7 $6 ((lam ((lam ((lam ((lam ((lam ((lam ((lam (x24 $0 $5 $2 $1 $6 $3 $4)) (next $13 $14))) (fill $0 $4 (connect $2 (__tuple__ (fn_6 $16) $5))))) (fn_41 $1 $3 $0))) (__tuple__ $1 $3))) (randint 0 (fn_6 $13)))) (choice #1))) $54) (fn_1 $52 $51))))))))) x23 $46 $41))))) (sample (fn_63 #2) $1))) (fn_19 #2 $3 $4))) $0 $1": "((lam ((lam (fn_62 $3 $0 (lam (fn_28 $1 $3 $2 (lam ((lam ((lam (fn_2 $1 $0 $45 (fn_0 $46 $43 (fn_0 $48 $47 (fn_106 (lam (lam (lam (lam (lam (lam (lam (fn_20 $7 $6 ((lam ((lam ((lam ((lam ((lam ((lam ((lam (x24 $0 $5 $2 $1 $6 $3 $4)) (next $13 $14))) (fill $0 $4 (connect $2 (__tuple__ (fn_6 $19) $5))))) (fn_41 $1 $3 $0))) (__tuple__ $1 $3))) (randint 0 (fn_6 $16)))) (choice $12))) $57) (fn_1 $55 $54))))))))) x23 $49 $44))))) (sample (fn_63 $4) $1))) (fn_19 $3 $6 $7))))))) (fn_107 $3 $4))) (fn_107 $2 $3))"
            },
            "dc_comparison_millis": null
        },
        {
            "body": "(lam (fn_51 ((lam (#3 $0 $1)) (next #2 #1)) (add_M #1 (fn_33 #0))))",
            "dreamcoder": "#(lambda (lambda (lambda (lambda (lambda (fn_51 ((lambda ($2 $0 $1)) (next $2 $3)) (add_M $3 (fn_33 $4))))))))",
            "arity": 4,
            "name": "fn_142",
            "utility": 3036,
            "final_cost": 4326488,
            "compression_ratio": 1.0008431781158298,
            "cumulative_compression_ratio": 1.8383531862332676,
            "num_uses": 6,
            "rewritten": null,
            "rewritten_dreamcoder": null,
            "uses": {
                "fn_142 (bitAnd (sub $5 $4) (bitAnd (mapply dneighbors $4) $5)) $4 $3 x132": "(lam (fn_51 ((lam (x132 $0 $1)) (next $4 $5)) (add_M $5 (fn_33 (bitAnd (sub $6 $5) (bitAnd (mapply dneighbors $5) $6))))))"
            },
            "dc_comparison_millis": null
        },
        {
            "body": "(fn_16 4)",
            "dreamcoder": "#(fn_16 4)",
            "arity": 0,
            "name": "fn_143",
            "utility": 3031,
            "final_cost": 4323256,
            "compression_ratio": 1.0007475846907978,
            "cumulative_compression_ratio": 1.839727510931575,
            "num_uses": 32,
            "rewritten": null,
            "rewritten_dreamcoder": null,
            "uses": {
                "fn_143 ": "(fn_16 4)"
            },
            "dc_comparison_millis": null
        },
        {
            "body": "(fn_130 (fn_0 #2 #1 #0))",
            "dreamcoder": "#(lambda (lambda (lambda (fn_130 (fn_0 $0 $1 $2)))))",
            "arity": 3,
            "name": "fn_144",
            "utility": 3028,
            "final_cost": 4320024,
            "compression_ratio": 1.0007481439917927,
            "cumulative_compression_ratio": 1.8411038920154141,
            "num_uses": 32,
            "rewritten": null,
            "rewritten_dreamcoder": null,
            "uses": {
                "fn_144 (fn_0 $73 $72 (fn_0 $85 $103 (fn_0 $106 $109 (fn_0 $108 $66 (fn_0 $107 $102 (fn_34 (lam (lam (lam (lam (lam (lam (lam (lam (lam (lam (lam (lam (lam (lam (lam (lam (lam (lam (fn_122 $21 $0 $24 $1 ((lam (fn_89 (__listComp__ ((lam ((lam ((lam ((lam ((lam (fn_2 (sample $2 $1) $0 $125 (fn_23 (lam (lam (lam (fn_20 $3 $2 ((lam ((lam (fn_120 $6 $5 $1 x72 (normalize $0))) (x76 $130))) $130) (fn_129 $128 $7 $8 ((lam (fn_96 $1 (lam ((lam (fn_115 $0 (lam ((lam ((lam ((lam ((lam (x41 $7 $2 $32 $1 $0 $3 $6 $13 $26 $25 $12 $136 $16 $15 $5 $4 $17)) (fill $0 (getItem $49 $32) $5))) (fill $0 $1 $4))) (choice $41))) (fn_40 $2 dneighbors $0))) $24 (x41 $2 $138 $27 $139 $140 $137 $1 $8 $21 $20 $7 $131 $11 $10 $0 $136 $12))) (shift $131 $1))) (x41 $0 $26 $25 $24 $23 $22 $21 $6 $19 $18 $5 $129 $9 $8 $13 $12 $10) $0)) (fn_44 $9 $41 $8 $40 $135))))))) x71 $126 $123))) fn_82)) (__tuple__ identity dmirror cmirror vmirror hmirror))) (x44 $2 $1))) (randint $10 6))) (randint $10 6)) (__tuple__ $9 $8 $15) (__list__ (choice $33))))) (fn_12 $0)) (fn_1 $127 $126)))))))))))))))))))) x40)))))) $86 $100": "(fn_130 (fn_0 $100 $86 (fn_0 $73 $72 (fn_0 $85 $103 (fn_0 $106 $109 (fn_0 $108 $66 (fn_0 $107 $102 (fn_34 (lam (lam (lam (lam (lam (lam (lam (lam (lam (lam (lam (lam (lam (lam (lam (lam (lam (lam (fn_122 $21 $0 $24 $1 ((lam (fn_89 (__listComp__ ((lam ((lam ((lam ((lam ((lam (fn_2 (sample $2 $1) $0 $125 (fn_23 (lam (lam (lam (fn_20 $3 $2 ((lam ((lam (fn_120 $6 $5 $1 x72 (normalize $0))) (x76 $130))) $130) (fn_129 $128 $7 $8 ((lam (fn_96 $1 (lam ((lam (fn_115 $0 (lam ((lam ((lam ((lam ((lam (x41 $7 $2 $32 $1 $0 $3 $6 $13 $26 $25 $12 $136 $16 $15 $5 $4 $17)) (fill $0 (getItem $49 $32) $5))) (fill $0 $1 $4))) (choice $41))) (fn_40 $2 dneighbors $0))) $24 (x41 $2 $138 $27 $139 $140 $137 $1 $8 $21 $20 $7 $131 $11 $10 $0 $136 $12))) (shift $131 $1))) (x41 $0 $26 $25 $24 $23 $22 $21 $6 $19 $18 $5 $129 $9 $8 $13 $12 $10) $0)) (fn_44 $9 $41 $8 $40 $135))))))) x71 $126 $123))) fn_82)) (__tuple__ identity dmirror cmirror vmirror hmirror))) (x44 $2 $1))) (randint $10 6))) (randint $10 6)) (__tuple__ $9 $8 $15) (__list__ (choice $33))))) (fn_12 $0)) (fn_1 $127 $126)))))))))))))))))))) x40))))))))"
            },
            "dc_comparison_millis": null
        },
        {
            "body": "(fn_144 (fn_0 #2 #1 #0))",
            "dreamcoder": "#(lambda (lambda (lambda (fn_144 (fn_0 $0 $1 $2)))))",
            "arity": 3,
            "name": "fn_145",
            "utility": 3028,
            "final_cost": 4316792,
            "compression_ratio": 1.0007487041302894,
            "cumulative_compression_ratio": 1.842482334103658,
            "num_uses": 32,
            "rewritten": null,
            "rewritten_dreamcoder": null,
            "uses": {
                "fn_145 (fn_0 $77 $50 (fn_11 x24 (lam (lam (lam (lam (lam (lam (lam (lam (lam (lam (lam (lam (fn_122 $16 $1 $15 $0 ((lam ((lam ((lam (fn_96 $1 (lam (fn_5 $0 $9 $10 ((lam ((lam (fn_73 $89 $0 ((lam ((lam ((lam (fn_75 $0 (x25 $6 $2 $0 $5 $15 $14 $3 $8 $7 $1))) (fn_99 $3 $0))) (fn_12 $0))) (fn_97 $0 $1)) (fn_75 $0 (x25 $3 $95 $97 $2 $12 $11 $0 $5 $4 $96)))) (shift $0 $2))) (backdrop (fn_14 $3 $10 $4 $11))))) ((lam ((lam ((lam (fn_98 $2 $0 $89 (fn_0 $88 $90 (fn_105 x51 (lam (lam (lam (lam (lam (fn_20 $5 $4 ((lam ((lam ((lam ((lam ((lam (x52 $0 $1 $2 $4 $3)) (next $9 $10))) (fn_41 $2 fgc $0))) (sub $0 (dneighbors $1)))) (fn_33 $97))) $98) (fn_1 $21 $96))))))) $92 $91)))) (fn_43 $15))) (fn_57 (fn_6 (fn_30 (len $88))) $25 $26))) (ofcolor $13 bgc)) $0)) (fn_44 $2 $21 $1 $20 $94))) (fn_126 6))) (fn_126 6)) ((lam ((lam ((lam (fn_98 $2 $0 $118 (fn_0 $117 $119 (fn_105 x83 (lam (lam (lam (lam (lam (fn_20 $5 $4 ((lam ((lam ((lam ((lam ((lam (x84 $0 $1 $2 $4 $3)) (next $9 $10))) (fn_41 $2 fgc $0))) (sub $0 (dneighbors $1)))) (fn_33 $126))) $127) (fn_1 $98 $125))))))) $121 $120)))) (fn_43 $92))) (fn_57 (fn_6 (fn_30 (len $117))) $22 $23))) (ofcolor $90 bgc))))))))))))))))) $103 $102": "(fn_144 (fn_0 $102 $103 (fn_0 $77 $50 (fn_11 x24 (lam (lam (lam (lam (lam (lam (lam (lam (lam (lam (lam (lam (fn_122 $16 $1 $15 $0 ((lam ((lam ((lam (fn_96 $1 (lam (fn_5 $0 $9 $10 ((lam ((lam (fn_73 $89 $0 ((lam ((lam ((lam (fn_75 $0 (x25 $6 $2 $0 $5 $15 $14 $3 $8 $7 $1))) (fn_99 $3 $0))) (fn_12 $0))) (fn_97 $0 $1)) (fn_75 $0 (x25 $3 $95 $97 $2 $12 $11 $0 $5 $4 $96)))) (shift $0 $2))) (backdrop (fn_14 $3 $10 $4 $11))))) ((lam ((lam ((lam (fn_98 $2 $0 $89 (fn_0 $88 $90 (fn_105 x51 (lam (lam (lam (lam (lam (fn_20 $5 $4 ((lam ((lam ((lam ((lam ((lam (x52 $0 $1 $2 $4 $3)) (next $9 $10))) (fn_41 $2 fgc $0))) (sub $0 (dneighbors $1)))) (fn_33 $97))) $98) (fn_1 $21 $96))))))) $92 $91)))) (fn_43 $15))) (fn_57 (fn_6 (fn_30 (len $88))) $25 $26))) (ofcolor $13 bgc)) $0)) (fn_44 $2 $21 $1 $20 $94))) (fn_126 6))) (fn_126 6)) ((lam ((lam ((lam (fn_98 $2 $0 $118 (fn_0 $117 $119 (fn_105 x83 (lam (lam (lam (lam (lam (fn_20 $5 $4 ((lam ((lam ((lam ((lam ((lam (x84 $0 $1 $2 $4 $3)) (next $9 $10))) (fn_41 $2 fgc $0))) (sub $0 (dneighbors $1)))) (fn_33 $126))) $127) (fn_1 $98 $125))))))) $121 $120)))) (fn_43 $92))) (fn_57 (fn_6 (fn_30 (len $117))) $22 $23))) (ofcolor $90 bgc)))))))))))))))))))"
            },
            "dc_comparison_millis": null
        },
        {
            "body": "(fn_67 (fn_19 (max 1 (floordiv (len #0) #3)) #2 #1) #0)",
            "dreamcoder": "#(lambda (lambda (lambda (lambda (fn_67 (fn_19 (max 1 (floordiv (len $3) $0)) $1 $2) $3)))))",
            "arity": 4,
            "name": "fn_146",
            "utility": 3026,
            "final_cost": 4313156,
            "compression_ratio": 1.0008430022007087,
            "cumulative_compression_ratio": 1.8440355507660742,
            "num_uses": 6,
            "rewritten": null,
            "rewritten_dreamcoder": null,
            "uses": {
                "fn_146 $56 $19 $18 $10": "(fn_67 (fn_19 (max 1 (floordiv (len $56) $10)) $18 $19) $56)"
            },
            "dc_comparison_millis": null
        },
        {
            "body": "(lam (fn_42 $0 (#0 $0)))",
            "dreamcoder": "#(lambda (lambda (fn_42 $0 ($1 $0))))",
            "arity": 1,
            "name": "fn_147",
            "utility": 2944,
            "final_cost": 4309908,
            "compression_ratio": 1.0007536123740925,
            "cumulative_compression_ratio": 1.845425238775398,
            "num_uses": 16,
            "rewritten": null,
            "rewritten_dreamcoder": null,
            "uses": {
                "fn_147 (fn_100 $2)": "(lam (fn_42 $0 (fn_100 $3 $0)))"
            },
            "dc_comparison_millis": null
        },
        {
            "body": "(difference fn_7)",
            "dreamcoder": "#(difference fn_7)",
            "arity": 0,
            "name": "fn_148",
            "utility": 2930,
            "final_cost": 4306777,
            "compression_ratio": 1.000726993758906,
            "cumulative_compression_ratio": 1.8467668514065154,
            "num_uses": 31,
            "rewritten": null,
            "rewritten_dreamcoder": null,
            "uses": {
                "fn_148 ": "(difference fn_7)"
            },
            "dc_comparison_millis": null
        },
        {
            "body": "(fn_19 (fn_6 #0))",
            "dreamcoder": "#(lambda (fn_19 (fn_6 $0)))",
            "arity": 1,
            "name": "fn_149",
            "utility": 2929,
            "final_cost": 4303646,
            "compression_ratio": 1.0007275226633416,
            "cumulative_compression_ratio": 1.8481104161448216,
            "num_uses": 31,
            "rewritten": null,
            "rewritten_dreamcoder": null,
            "uses": {
                "fn_149 $1": "(fn_19 (fn_6 $1))"
            },
            "dc_comparison_millis": null
        },
        {
            "body": "(objects #0 T F F)",
            "dreamcoder": "#(lambda (objects $0 T F F))",
            "arity": 1,
            "name": "fn_150",
            "utility": 2929,
            "final_cost": 4300313,
            "compression_ratio": 1.0007750598619216,
            "cumulative_compression_ratio": 1.8495428123487747,
            "num_uses": 11,
            "rewritten": null,
            "rewritten_dreamcoder": null,
            "uses": {
                "fn_150 $1": "(objects $1 T F F)"
            },
            "dc_comparison_millis": null
        },
        {
            "body": "(#1 0 (fn_6 #0))",
            "dreamcoder": "#(lambda (lambda ($0 0 (fn_6 $1))))",
            "arity": 2,
            "name": "fn_151",
            "utility": 2928,
            "final_cost": 4297182,
            "compression_ratio": 1.0007286170332093,
            "cumulative_compression_ratio": 1.8508904207455017,
            "num_uses": 31,
            "rewritten": null,
            "rewritten_dreamcoder": null,
            "uses": {
                "fn_151 $15 fn_103": "(fn_103 0 (fn_6 $15))"
            },
            "dc_comparison_millis": null
        },
        {
            "body": "(fn_145 (fn_0 #2 #1 #0))",
            "dreamcoder": "#(lambda (lambda (lambda (fn_145 (fn_0 $0 $1 $2)))))",
            "arity": 3,
            "name": "fn_152",
            "utility": 2927,
            "final_cost": 4294051,
            "compression_ratio": 1.0007291483030825,
            "cumulative_compression_ratio": 1.8522399943549799,
            "num_uses": 31,
            "rewritten": null,
            "rewritten_dreamcoder": null,
            "uses": {
                "fn_152 (fn_0 $100 $101 (lam (lam (fn_11 (x31 $1 $0) (lam (lam (lam (lam (lam (lam (lam (lam (lam (lam (lam (lam (lam (lam (fn_122 $20 $0 $26 $1 ((lam (fn_96 $122 (lam ((lam (fn_2 $23 $0 $111 (fn_0 $110 $119 (fn_105 x57 (lam (lam (lam (lam (lam (fn_20 $5 $4 ((lam ((lam ((lam (fn_38 (lam (lam (lam (ifElse True ((lam ((lam (ifElse (nelem $1 $25) (fn_104 2 (len $7) (fn_114 $7 $15 $14 (lam (x58 $0 $9 $8 $2 $1))) ((lam (x58 $0 $9 $8 $2 $1)) (next $14 $15))) (fn_51 (x70 $1 $0) (append_M $7 $1)))) (fn_12 $0))) (add $15 (multiply $124 $7))) (fn_104 2 (len $5) (fn_114 $5 $13 $12 (lam (x58 $0 $7 $6 $123 $124))) ((lam (x58 $0 $7 $6 $123 $124)) (next $12 $13))))))) x69 $119 $120)) 1)) (__list__ $9))) $121) (fn_104 0 (len $6) ((lam ((lam ((lam ((lam ((lam ((lam ((lam ((lam ((lam (x32 $3 $4 $2 $1 $6 $0 $5 $7 $16 $124 $125 $8 $17)) (sub $0 (set $5)))) (fill $0 $3 (set $4)))) (fill $0 $2 (fn_32 -1 (getItem $3) 0 __set__)))) (getItemFrom $0 1))) (fn_89 $131))) (getItem $2 $1))) (fn_57 (fn_6 (len $1)) $42 $43))) (sorted $0))) (fn_12 $0)) (x32 $126 $125 $127 $128 $123 $129 $124 $122 $7 $115 $116 $121 $8)))))))) $115 $101)))) __list__)) (fn_1 $10 $11) $8)) (fn_12 $0)) (fn_1 $119 $118)))))))))))))))))))) $102 $103": "(fn_145 (fn_0 $103 $102 (fn_0 $100 $101 (lam (lam (fn_11 (x31 $1 $0) (lam (lam (lam (lam (lam (lam (lam (lam (lam (lam (lam (lam (lam (lam (fn_122 $20 $0 $26 $1 ((lam (fn_96 $122 (lam ((lam (fn_2 $23 $0 $111 (fn_0 $110 $119 (fn_105 x57 (lam (lam (lam (lam (lam (fn_20 $5 $4 ((lam ((lam ((lam (fn_38 (lam (lam (lam (ifElse True ((lam ((lam (ifElse (nelem $1 $25) (fn_104 2 (len $7) (fn_114 $7 $15 $14 (lam (x58 $0 $9 $8 $2 $1))) ((lam (x58 $0 $9 $8 $2 $1)) (next $14 $15))) (fn_51 (x70 $1 $0) (append_M $7 $1)))) (fn_12 $0))) (add $15 (multiply $124 $7))) (fn_104 2 (len $5) (fn_114 $5 $13 $12 (lam (x58 $0 $7 $6 $123 $124))) ((lam (x58 $0 $7 $6 $123 $124)) (next $12 $13))))))) x69 $119 $120)) 1)) (__list__ $9))) $121) (fn_104 0 (len $6) ((lam ((lam ((lam ((lam ((lam ((lam ((lam ((lam ((lam (x32 $3 $4 $2 $1 $6 $0 $5 $7 $16 $124 $125 $8 $17)) (sub $0 (set $5)))) (fill $0 $3 (set $4)))) (fill $0 $2 (fn_32 -1 (getItem $3) 0 __set__)))) (getItemFrom $0 1))) (fn_89 $131))) (getItem $2 $1))) (fn_57 (fn_6 (len $1)) $42 $43))) (sorted $0))) (fn_12 $0)) (x32 $126 $125 $127 $128 $123 $129 $124 $122 $7 $115 $116 $121 $8)))))))) $115 $101)))) __list__)) (fn_1 $10 $11) $8)) (fn_12 $0)) (fn_1 $119 $118))))))))))))))))))))))"
            },
            "dc_comparison_millis": null
        },
        {
            "body": "(fn_89 (__listComp__ #2 #1 (__list__ #0)))",
            "dreamcoder": "#(lambda (lambda (lambda (fn_89 (__listComp__ $0 $1 (__list__ $2))))))",
            "arity": 3,
            "name": "fn_153",
            "utility": 2927,
            "final_cost": 4290819,
            "compression_ratio": 1.0007532361537506,
            "cumulative_compression_ratio": 1.8536351684841508,
            "num_uses": 16,
            "rewritten": null,
            "rewritten_dreamcoder": null,
            "uses": {
                "fn_153 (sample $2 7) (__tuple__ c1 c2 c3 c4 barc bgc inc) ((lam ((lam ((lam ((lam ((lam ((lam ((lam ((lam ((lam ((lam ((lam ((lam ((lam (fn_95 (fn_55 1 0 $10) (fill $49 barc) (fn_55 (fn_48 $11) 0 $10) (lam (fn_95 (fn_90 $12 1) (fill $50 barc) (fn_90 $12 (fn_48 $11)) (lam ((lam ((lam ((lam ((lam ((lam ((lam ((lam ((lam ((lam ((lam ((lam ((lam (fn_42 $4 (fn_66 (__tuple__ $29 $28) $16 c4 $0))) (fn_66 (fn_121 $28) $16 c3 $67))) (fn_66 (fn_50 $26) $16 c2 $66))) (fn_66 fn_124 $16 c1 $65))) (fn_32 $25 fn_108 $24 fn_13 bgc))) (fn_66 (fn_32 $23 (add 2) $24 __tuple__) $11 inc $0))) (fn_66 (__tuple__ (add 2 $23) 2) $11 inc $57))) (fn_66 (__tuple__ 2 (add 2 $21)) $11 inc $56))) (fn_66 (__tuple__ 2 2) $11 inc $55))) (fn_103 (fn_6 $15) (fn_6 $16) c4 $54))) (fn_151 $15 fn_103 c3 $53))) (fn_41 (fn_50 (fn_6 $13)) c2 $52))) (fn_41 fn_124 c1 $51))))))) (fn_60 (add (fn_108 $14) 4) (add (fn_108 $13) 4)))) (sample $10 $4))) (sample $9 $4))) (sample $8 $4))) (sample $7 $4))) (fn_19 (mul $9 $8) $11 $12))) (fn_19 (mul $8 $7) $10 $11))) (fn_19 (mul $7 $6) $9 $10))) (fn_19 (mul $6 $5) $8 $9))) (add (fn_108 $4) 4))) (add (fn_108 $4) 4))) (fn_71 $1))) (fn_60 $2 $1))": "(fn_89 (__listComp__ ((lam ((lam ((lam ((lam ((lam ((lam ((lam ((lam ((lam ((lam ((lam ((lam ((lam (fn_95 (fn_55 1 0 $10) (fill $49 barc) (fn_55 (fn_48 $11) 0 $10) (lam (fn_95 (fn_90 $12 1) (fill $50 barc) (fn_90 $12 (fn_48 $11)) (lam ((lam ((lam ((lam ((lam ((lam ((lam ((lam ((lam ((lam ((lam ((lam ((lam (fn_42 $4 (fn_66 (__tuple__ $29 $28) $16 c4 $0))) (fn_66 (fn_121 $28) $16 c3 $67))) (fn_66 (fn_50 $26) $16 c2 $66))) (fn_66 fn_124 $16 c1 $65))) (fn_32 $25 fn_108 $24 fn_13 bgc))) (fn_66 (fn_32 $23 (add 2) $24 __tuple__) $11 inc $0))) (fn_66 (__tuple__ (add 2 $23) 2) $11 inc $57))) (fn_66 (__tuple__ 2 (add 2 $21)) $11 inc $56))) (fn_66 (__tuple__ 2 2) $11 inc $55))) (fn_103 (fn_6 $15) (fn_6 $16) c4 $54))) (fn_151 $15 fn_103 c3 $53))) (fn_41 (fn_50 (fn_6 $13)) c2 $52))) (fn_41 fn_124 c1 $51))))))) (fn_60 (add (fn_108 $14) 4) (add (fn_108 $13) 4)))) (sample $10 $4))) (sample $9 $4))) (sample $8 $4))) (sample $7 $4))) (fn_19 (mul $9 $8) $11 $12))) (fn_19 (mul $8 $7) $10 $11))) (fn_19 (mul $7 $6) $9 $10))) (fn_19 (mul $6 $5) $8 $9))) (add (fn_108 $4) 4))) (add (fn_108 $4) 4))) (fn_71 $1))) (fn_60 $2 $1)) (__tuple__ c1 c2 c3 c4 barc bgc inc) (__list__ (sample $2 7))))"
            },
            "dc_comparison_millis": null
        },
        {
            "body": "(fn_16 6)",
            "dreamcoder": "#(fn_16 6)",
            "arity": 0,
            "name": "fn_154",
            "utility": 2728,
            "final_cost": 4287890,
            "compression_ratio": 1.0006830865530598,
            "cumulative_compression_ratio": 1.8549013617420211,
            "num_uses": 29,
            "rewritten": null,
            "rewritten_dreamcoder": null,
            "uses": {
                "fn_154 ": "(fn_16 6)"
            },
            "dc_comparison_millis": null
        },
        {
            "body": "(__tuple__ 2)",
            "dreamcoder": "#(__tuple__ 2)",
            "arity": 0,
            "name": "fn_155",
            "utility": 2728,
            "final_cost": 4284961,
            "compression_ratio": 1.00068355347925,
            "cumulative_compression_ratio": 1.8561692860215053,
            "num_uses": 29,
            "rewritten": null,
            "rewritten_dreamcoder": null,
            "uses": {
                "fn_155 ": "(__tuple__ 2)"
            },
            "dc_comparison_millis": null
        },
        {
            "body": "(getItem #0 1)",
            "dreamcoder": "#(lambda (getItem $0 1))",
            "arity": 1,
            "name": "fn_156",
            "utility": 2727,
            "final_cost": 4282032,
            "compression_ratio": 1.0006840210442145,
            "cumulative_compression_ratio": 1.8574389448747686,
            "num_uses": 29,
            "rewritten": null,
            "rewritten_dreamcoder": null,
            "uses": {
                "fn_156 $0": "(getItem $0 1)"
            },
            "dc_comparison_millis": null
        },
        {
            "body": "(backdrop (__set__ (__tuple__ #2 #0) (__tuple__ (#1 #2) (#1 #0))))",
            "dreamcoder": "#(lambda (lambda (lambda (backdrop (__set__ (__tuple__ $0 $2) (__tuple__ ($1 $0) ($1 $2)))))))",
            "arity": 3,
            "name": "fn_157",
            "utility": 2722,
            "final_cost": 4278901,
            "compression_ratio": 1.0007317299465446,
            "cumulative_compression_ratio": 1.8587980885746116,
            "num_uses": 4,
            "rewritten": null,
            "rewritten_dreamcoder": null,
            "uses": {
                "fn_157 $22 fn_12 $23": "(backdrop (__set__ (__tuple__ $23 $22) (__tuple__ (fn_12 $23) (fn_12 $22))))"
            },
            "dc_comparison_millis": null
        },
        {
            "body": "(fn_77 (fn_6 #0))",
            "dreamcoder": "#(lambda (fn_77 (fn_6 $0)))",
            "arity": 1,
            "name": "fn_158",
            "utility": 2626,
            "final_cost": 4276073,
            "compression_ratio": 1.0006613544717313,
            "cumulative_compression_ratio": 1.860027413002536,
            "num_uses": 28,
            "rewritten": null,
            "rewritten_dreamcoder": null,
            "uses": {
                "fn_158 $1": "(fn_77 (fn_6 $1))"
            },
            "dc_comparison_millis": null
        },
        {
            "body": "(sub #0 3)",
            "dreamcoder": "#(lambda (sub $0 3))",
            "arity": 1,
            "name": "fn_159",
            "utility": 2626,
            "final_cost": 4273245,
            "compression_ratio": 1.0006617921509298,
            "cumulative_compression_ratio": 1.8612583645449754,
            "num_uses": 28,
            "rewritten": null,
            "rewritten_dreamcoder": null,
            "uses": {
                "fn_159 $10": "(sub $10 3)"
            },
            "dc_comparison_millis": null
        },
        {
            "body": "(fill #0 dotc)",
            "dreamcoder": "#(lambda (fill $0 dotc))",
            "arity": 1,
            "name": "fn_160",
            "utility": 2626,
            "final_cost": 4270417,
            "compression_ratio": 1.0006622304098172,
            "cumulative_compression_ratio": 1.8624909464345036,
            "num_uses": 28,
            "rewritten": null,
            "rewritten_dreamcoder": null,
            "uses": {
                "fn_160 $0": "(fill $0 dotc)"
            },
            "dc_comparison_millis": null
        },
        {
            "body": "(lam ((lam (#0 0)) 0))",
            "dreamcoder": "#(lambda (lambda ((lambda ($2 0)) 0)))",
            "arity": 1,
            "name": "fn_161",
            "utility": 2577,
            "final_cost": 4267636,
            "compression_ratio": 1.0006516488285317,
            "cumulative_compression_ratio": 1.8637046364778986,
            "num_uses": 29,
            "rewritten": null,
            "rewritten_dreamcoder": null,
            "uses": {
                "fn_161 (lam ((lam ((lam ((lam ((lam ((lam (fn_0 $136 $142 (fn_0 $141 $140 (fn_0 $131 $130 (fn_0 $137 $139 (fn_0 $143 $152 (fn_0 $151 $138 (lam (fn_11 (x87 $0) (lam (lam (lam (lam (lam (lam (lam (lam (lam (lam (lam (lam (lam (fn_122 $20 $1 $19 $0 ((lam ((lam (fn_129 $0 $6 $7 ((lam (fn_96 $1 (lam ((lam ((lam (fn_115 $0 (lam ((lam ((lam ((lam (x88 $7 $1 $0 $2 $6 $8 $15 $14 $5 $4 $3 $9)) (paint $0 $5))) (paint $0 (sfilter $4 (lam (elem (fn_89 $0) (fn_155 3))))))) (fn_40 $2 neighbors $0))) $14 (x88 $3 $164 $165 $163 $2 $4 $11 $10 $1 $0 $162 $5))) (toindices $1))) (shift $3 $1))) (x88 $0 $13 $12 $11 $10 $1 $8 $7 $6 $5 $4 $2) $0)) (fn_44 $8 $47 $7 $46 $160)))) (choice $17))) (fn_12 $0)) (ifElse (lt (fn_19 100 $46 $47) 30) ((lam ((lam (fn_87 (mfilter $1 (lam (elem $3 (palette $0)))) bgc (lam (fn_42 $0 (fill $0 bgc (mfilter $1 (lam (elem $4 (palette $0))))))) (objects $169 F T T))) (objects $167 F T T))) (choice (fn_155 3))) (fn_1 $166 $165))))))))))))))))))))))))) (__list__ $3 gobj))) (fn_43 $149))) (sub (ofcolor $148 bgc) (fn_32 (toindices $5) (mapply neighbors) (toindices $6) bitOr)))) (vmirror $0))) (mul 5 $1)))": "(lam ((lam ((lam ((lam ((lam ((lam ((lam ((lam (fn_0 $138 $144 (fn_0 $143 $142 (fn_0 $133 $132 (fn_0 $139 $141 (fn_0 $145 $154 (fn_0 $153 $140 (lam (fn_11 (x87 $0) (lam (lam (lam (lam (lam (lam (lam (lam (lam (lam (lam (lam (lam (fn_122 $22 $1 $19 $0 ((lam ((lam (fn_129 $0 $6 $7 ((lam (fn_96 $1 (lam ((lam ((lam (fn_115 $0 (lam ((lam ((lam ((lam (x88 $7 $1 $0 $2 $6 $8 $15 $14 $5 $4 $3 $9)) (paint $0 $5))) (paint $0 (sfilter $4 (lam (elem (fn_89 $0) (fn_155 3))))))) (fn_40 $2 neighbors $0))) $14 (x88 $3 $166 $167 $165 $2 $4 $11 $10 $1 $0 $164 $5))) (toindices $1))) (shift $3 $1))) (x88 $0 $13 $12 $11 $10 $1 $8 $7 $6 $5 $4 $2) $0)) (fn_44 $8 $49 $7 $48 $162)))) (choice $17))) (fn_12 $0)) (ifElse (lt (fn_19 100 $48 $49) 30) ((lam ((lam (fn_87 (mfilter $1 (lam (elem $3 (palette $0)))) bgc (lam (fn_42 $0 (fill $0 bgc (mfilter $1 (lam (elem $4 (palette $0))))))) (objects $171 F T T))) (objects $169 F T T))) (choice (fn_155 3))) (fn_1 $168 $167))))))))))))))))))))))))) (__list__ $3 gobj))) (fn_43 $151))) (sub (ofcolor $150 bgc) (fn_32 (toindices $7) (mapply neighbors) (toindices $8) bitOr)))) (vmirror $0))) (mul 5 $3))) 0)) 0))"
            },
            "dc_comparison_millis": null
        },
        {
            "body": "(sfilter #3 (lam (#2 (#1 $0) #0)))",
            "dreamcoder": "#(lambda (lambda (lambda (lambda (sfilter $0 (lambda ($2 ($3 $0) $4)))))))",
            "arity": 4,
            "name": "fn_162",
            "utility": 2548,
            "final_cost": 4264882,
            "compression_ratio": 1.0006457388504535,
            "cumulative_compression_ratio": 1.8649081029674428,
            "num_uses": 27,
            "rewritten": null,
            "rewritten_dreamcoder": null,
            "uses": {
                "fn_162 $60 fn_156 elem $0": "(sfilter $0 (lam (elem (fn_156 $0) $61)))"
            },
            "dc_comparison_millis": null
        },
        {
            "body": "(fn_16 1)",
            "dreamcoder": "#(fn_16 1)",
            "arity": 0,
            "name": "fn_163",
            "utility": 2526,
            "final_cost": 4262155,
            "compression_ratio": 1.000639817181684,
            "cumulative_compression_ratio": 1.866101303213983,
            "num_uses": 27,
            "rewritten": null,
            "rewritten_dreamcoder": null,
            "uses": {
                "fn_163 ": "(fn_16 1)"
            },
            "dc_comparison_millis": null
        },
        {
            "body": "(fn_55 #0 0)",
            "dreamcoder": "#(lambda (fn_55 $0 0))",
            "arity": 1,
            "name": "fn_164",
            "utility": 2525,
            "final_cost": 4259428,
            "compression_ratio": 1.000640226809797,
            "cumulative_compression_ratio": 1.8672960312980975,
            "num_uses": 27,
            "rewritten": null,
            "rewritten_dreamcoder": null,
            "uses": {
                "fn_164 $0": "(fn_55 $0 0)"
            },
            "dc_comparison_millis": null
        },
        {
            "body": "(fn_19 (min #1 #0))",
            "dreamcoder": "#(lambda (lambda (fn_19 (min $0 $1))))",
            "arity": 2,
            "name": "fn_165",
            "utility": 2524,
            "final_cost": 4256701,
            "compression_ratio": 1.0006406369627558,
            "cumulative_compression_ratio": 1.8684922901561545,
            "num_uses": 27,
            "rewritten": null,
            "rewritten_dreamcoder": null,
            "uses": {
                "fn_165 5 $3": "(fn_19 (min $3 5))"
            },
            "dc_comparison_millis": null
        },
        {
            "body": "(lam ((lam (#3 (fill #2 #1 $1))) #0))",
            "dreamcoder": "#(lambda (lambda (lambda (lambda (lambda ((lambda ($2 (fill $3 $4 $1))) $4))))))",
            "arity": 4,
            "name": "fn_166",
            "utility": 2471,
            "final_cost": 4254023,
            "compression_ratio": 1.0006295217491772,
            "cumulative_compression_ratio": 1.8696685466909777,
            "num_uses": 72,
            "rewritten": null,
            "rewritten_dreamcoder": null,
            "uses": {
                "fn_166 (corners (fn_14 $2 $0 $3 $1)) cornc $128 (lam ((lam ((lam ((lam ((lam ((lam ((lam ((lam ((lam ((lam ((lam (ifElse (andOp (choice (__tuple__ True False)) (gt (len $24) 3)) ((lam (fn_5 $0 idxj idxi ((lam ((lam ((lam ((lam (fn_9 (sample $2 $1) $0 (fn_0 $125 $124 (fn_136 (fn_1 $125 $124) (fn_35 x75 $1 $0 x70 $127) $0 x69 $126 $123)))) fn_82)) fn_31)) (fill $121 objc $1))) (shift (fn_70 $23 $22) (__tuple__ (add $8 (mul idxi $23)) (add $7 (mul idxj $22))))))) (fn_33 (toindices (fn_162 objc fn_89 eq $25)))) ((lam ((lam (fn_9 (sample $2 $1) $0 (fn_0 $142 $141 (fn_136 (fn_1 $142 $141) (fn_35 x95 $1 $0 x90 $144) $0 x89 $143 $140)))) fn_82)) fn_31))) (paint $138 $1))) (fn_162 (__tuple__ ac1 ac2) fn_89 elem $3))) (subgrid #1 $137))) (paint $135 $1))) (shift $3 (__tuple__ $2 $1)))) (randint (fn_12 $5) (sub (fn_64 $7 $5) (width $2))))) (randint (fn_12 $5) (sub (fn_64 $7 $5) (height $1))))) (asobject $0))) (vupscale (hupscale $1 $12) $13))) (subgrid $8 $129)))": "(lam ((lam ((lam ((lam ((lam ((lam ((lam ((lam ((lam ((lam ((lam ((lam ((lam (ifElse (andOp (choice (__tuple__ True False)) (gt (len $26) 3)) ((lam (fn_5 $0 idxj idxi ((lam ((lam ((lam ((lam (fn_9 (sample $2 $1) $0 (fn_0 $127 $126 (fn_136 (fn_1 $127 $126) (fn_35 x75 $1 $0 x70 $129) $0 x69 $128 $125)))) fn_82)) fn_31)) (fill $123 objc $1))) (shift (fn_70 $25 $24) (__tuple__ (add $8 (mul idxi $25)) (add $7 (mul idxj $24))))))) (fn_33 (toindices (fn_162 objc fn_89 eq $27)))) ((lam ((lam (fn_9 (sample $2 $1) $0 (fn_0 $144 $143 (fn_136 (fn_1 $144 $143) (fn_35 x95 $1 $0 x90 $146) $0 x89 $145 $142)))) fn_82)) fn_31))) (paint $140 $1))) (fn_162 (__tuple__ ac1 ac2) fn_89 elem $3))) (subgrid $9 $139))) (paint $137 $1))) (shift $3 (__tuple__ $2 $1)))) (randint (fn_12 $7) (sub (fn_64 $9 $7) (width $2))))) (randint (fn_12 $7) (sub (fn_64 $9 $7) (height $1))))) (asobject $0))) (vupscale (hupscale $1 $14) $15))) (subgrid $10 $131))) (fill $130 cornc $1))) (corners (fn_14 $3 $1 $4 $2))))"
            },
            "dc_comparison_millis": null
        },
        {
            "body": "(fn_46 1)",
            "dreamcoder": "#(fn_46 1)",
            "arity": 0,
            "name": "fn_167",
            "utility": 2425,
            "final_cost": 4251397,
            "compression_ratio": 1.0006176793181158,
            "cumulative_compression_ratio": 1.8708234022840005,
            "num_uses": 26,
            "rewritten": null,
            "rewritten_dreamcoder": null,
            "uses": {
                "fn_167 ": "(fn_46 1)"
            },
            "dc_comparison_millis": null
        },
        {
            "body": "(randint (fn_12 #0))",
            "dreamcoder": "#(lambda (randint (fn_12 $0)))",
            "arity": 1,
            "name": "fn_168",
            "utility": 2424,
            "final_cost": 4248771,
            "compression_ratio": 1.0006180610816633,
            "cumulative_compression_ratio": 1.8719796854196171,
            "num_uses": 26,
            "rewritten": null,
            "rewritten_dreamcoder": null,
            "uses": {
                "fn_168 $1": "(randint (fn_12 $1))"
            },
            "dc_comparison_millis": null
        },
        {
            "body": "(lam ((lam (fn_51 ((lam (#3 $0 $1 $2)) #2) (add_M #1 $0))) (fn_33 #0)))",
            "dreamcoder": "#(lambda (lambda (lambda (lambda (lambda ((lambda (fn_51 ((lambda ($3 $0 $1 $2)) $3) (add_M $4 $0))) (fn_33 $4)))))))",
            "arity": 4,
            "name": "fn_169",
            "utility": 2332,
            "final_cost": 4245726,
            "compression_ratio": 1.00071719183009,
            "cumulative_compression_ratio": 1.8733222539560943,
            "num_uses": 5,
            "rewritten": null,
            "rewritten_dreamcoder": null,
            "uses": {
                "fn_169 (bitAnd (sub $17 $9) (mapply neighbors $9)) $8 (next $3 $4) x104": "(lam ((lam (fn_51 ((lam (x104 $0 $1 $2)) (next $5 $6)) (add_M $10 $0))) (fn_33 (bitAnd (sub $18 $10) (mapply neighbors $10)))))"
            },
            "dc_comparison_millis": null
        },
        {
            "body": "(fn_0 #3 #2 (lam (fn_72 #1 (#0 $0) fn_11)))",
            "dreamcoder": "#(lambda (lambda (lambda (lambda (fn_0 $0 $1 (lambda (fn_72 $3 ($4 $0) fn_11)))))))",
            "arity": 4,
            "name": "fn_170",
            "utility": 2328,
            "final_cost": 4242990,
            "compression_ratio": 1.0006448282932554,
            "cumulative_compression_ratio": 1.8745302251478302,
            "num_uses": 9,
            "rewritten": null,
            "rewritten_dreamcoder": null,
            "uses": {
                "fn_170 x62 (lam (lam (lam (lam (lam (lam (lam (lam (lam (lam (lam (lam (lam (lam (lam (lam (fn_20 $16 $14 ((lam ((lam (fn_96 $1 (lam ((lam ((lam ((lam (fn_2 $2 $0 $155 (fn_0 $154 $184 (fn_0 $170 $187 (fn_0 $186 $181 (fn_0 $156 $157 (fn_0 $180 $185 (fn_11 x99 (lam (lam (lam (lam (lam (lam (lam (lam (lam (lam (lam (lam (fn_20 $12 $10 ((lam (fn_5 $0 $1 $2 ((lam (fn_2 (range 1 (max $52 $51)) $0 $185 (fn_23 (lam (lam (lam (fn_20 $3 $2 ((lam ((lam (ifElse (nelem $0 $25) (ifElse (lt (len $6) 2) ((lam (x100 $0 $18 $7 $8 $15 $14 $13 $1 $11 $10 $9)) (next $20 $21)) ((lam ((lam ((lam ((lam ((lam ((lam (x100 $0 $5 $12 $13 $4 $3 $2 $6 $1 $15 $14)) (next $25 $26))) (fn_12 $0))) (fill $0 $30 (set (getItemUpTo $10 (fn_12 $3)))))) (fn_41 $1 $29 $0))) (getItem $8 $1))) (fn_149 (len $7) $62 $63))) (fn_114 $0 $6 $5 (lam (x121 $0 $2 $1))))) (add $24 (__tuple__ (mul (mul $1 $9) (fn_12 $59)) (mul (mul $1 $8) (fn_12 $58)))))) $197) (ifElse (lt (len $4) 2) ((lam (x100 $0 $191 $5 $6 $192 $193 $194 $189 $195 $8 $7)) (next $18 $19)) ((lam ((lam ((lam ((lam ((lam ((lam (x100 $0 $5 $10 $11 $4 $3 $2 $194 $1 $13 $12)) (next $23 $24))) (fn_12 $0))) (fill $0 $28 (set (getItemUpTo $8 (fn_12 $3)))))) (fn_41 $1 $27 $0))) (getItem $6 $1))) (fn_149 (len $5) $60 $61))))))) x120 $193 $184))) __list__))) $198) (fn_104 0 $196 ((lam ((lam ((lam (x63 $0 $195 $172 $17 $21 $196 $2 $1 $20 $19 $18 $185 $199 $4 $3)) (next $37 $38))) (fn_41 $18 $20 $0))) (fn_41 $17 $19 $0)) ((lam (x63 $0 $193 $170 $15 $19 $194 $199 $200 $18 $17 $16 $183 $197 $2 $1)) (next $35 $36)))))))))))))))))))))))) 0)) (fn_83 (dneighbors fn_124) $1))) (fn_61 4))) (fn_1 $9 $10) $0)) (ofcolor $182 bgc))) $183) (fn_1 $180 $179)))))))))))))))))) $166 $157": "(fn_0 $157 $166 (lam (fn_72 (lam (lam (lam (lam (lam (lam (lam (lam (lam (lam (lam (lam (lam (lam (lam (lam (fn_20 $17 $14 ((lam ((lam (fn_96 $1 (lam ((lam ((lam ((lam (fn_2 $2 $0 $156 (fn_0 $155 $185 (fn_0 $171 $188 (fn_0 $187 $182 (fn_0 $157 $158 (fn_0 $181 $186 (fn_11 x99 (lam (lam (lam (lam (lam (lam (lam (lam (lam (lam (lam (lam (fn_20 $12 $10 ((lam (fn_5 $0 $1 $2 ((lam (fn_2 (range 1 (max $53 $52)) $0 $186 (fn_23 (lam (lam (lam (fn_20 $3 $2 ((lam ((lam (ifElse (nelem $0 $25) (ifElse (lt (len $6) 2) ((lam (x100 $0 $18 $7 $8 $15 $14 $13 $1 $11 $10 $9)) (next $20 $21)) ((lam ((lam ((lam ((lam ((lam ((lam (x100 $0 $5 $12 $13 $4 $3 $2 $6 $1 $15 $14)) (next $25 $26))) (fn_12 $0))) (fill $0 $30 (set (getItemUpTo $10 (fn_12 $3)))))) (fn_41 $1 $29 $0))) (getItem $8 $1))) (fn_149 (len $7) $63 $64))) (fn_114 $0 $6 $5 (lam (x121 $0 $2 $1))))) (add $24 (__tuple__ (mul (mul $1 $9) (fn_12 $60)) (mul (mul $1 $8) (fn_12 $59)))))) $198) (ifElse (lt (len $4) 2) ((lam (x100 $0 $192 $5 $6 $193 $194 $195 $190 $196 $8 $7)) (next $18 $19)) ((lam ((lam ((lam ((lam ((lam ((lam (x100 $0 $5 $10 $11 $4 $3 $2 $195 $1 $13 $12)) (next $23 $24))) (fn_12 $0))) (fill $0 $28 (set (getItemUpTo $8 (fn_12 $3)))))) (fn_41 $1 $27 $0))) (getItem $6 $1))) (fn_149 (len $5) $61 $62))))))) x120 $194 $185))) __list__))) $199) (fn_104 0 $197 ((lam ((lam ((lam (x63 $0 $196 $173 $17 $21 $197 $2 $1 $20 $19 $18 $186 $200 $4 $3)) (next $38 $39))) (fn_41 $18 $20 $0))) (fn_41 $17 $19 $0)) ((lam (x63 $0 $194 $171 $15 $19 $195 $200 $201 $18 $17 $16 $184 $198 $2 $1)) (next $36 $37)))))))))))))))))))))))) 0)) (fn_83 (dneighbors fn_124) $1))) (fn_61 4))) (fn_1 $9 $10) $0)) (ofcolor $183 bgc))) $184) (fn_1 $181 $180)))))))))))))))))) (x62 $0) fn_11)))"
            },
            "dc_comparison_millis": null
        },
        {
            "body": "(mul #0 2)",
            "dreamcoder": "#(lambda (mul $0 2))",
            "arity": 1,
            "name": "fn_171",
            "utility": 2323,
            "final_cost": 4240465,
            "compression_ratio": 1.0005954535646444,
            "cumulative_compression_ratio": 1.8756464208524282,
            "num_uses": 25,
            "rewritten": null,
            "rewritten_dreamcoder": null,
            "uses": {
                "fn_171 $0": "(mul $0 2)"
            },
            "dc_comparison_millis": null
        },
        {
            "body": "(fn_42 #1 (fn_13 1 1 #0))",
            "dreamcoder": "#(lambda (lambda (fn_42 $0 (fn_13 1 1 $1))))",
            "arity": 2,
            "name": "fn_172",
            "utility": 2322,
            "final_cost": 4237738,
            "compression_ratio": 1.0006435036805013,
            "cumulative_compression_ratio": 1.8768534062275657,
            "num_uses": 9,
            "rewritten": null,
            "rewritten_dreamcoder": null,
            "uses": {
                "fn_172 noisec $0": "(fn_42 $0 (fn_13 1 1 noisec))"
            },
            "dc_comparison_millis": null
        },
        {
            "body": "(fn_152 (fn_0 #2 #1 #0))",
            "dreamcoder": "#(lambda (lambda (lambda (fn_152 (fn_0 $0 $1 $2)))))",
            "arity": 3,
            "name": "fn_173",
            "utility": 2321,
            "final_cost": 4235213,
            "compression_ratio": 1.000596191974288,
            "cumulative_compression_ratio": 1.8779723711652738,
            "num_uses": 25,
            "rewritten": null,
            "rewritten_dreamcoder": null,
            "uses": {
                "fn_173 (fn_0 $97 $96 (fn_0 $74 $95 (fn_34 (lam (lam (lam (lam (lam (lam (lam (lam (lam (lam (lam (lam (lam (lam (lam (lam (lam (lam (fn_49 (lte $0 $19) $21 $1 (fn_22 $11 (fn_1 $12 $13) ((lam ((lam ((lam (fn_140 $4 $0 (x36 $19 $18 $17 $16 $15 $14 $13 $12 $11 $10 $9 $8 $2 $1) (fn_5 (choice $0) $11 $12 ((lam ((lam ((lam ((lam ((lam ((lam ((lam (fn_98 $1 $0 $120 (fn_23 (lam (lam (lam (fn_20 $3 $2 ((lam (fn_51 ((lam ((lam (x72 $0 $1 $2)) (next $5 $6))) (sub $0 $10)) (add_M $9 (fn_33 (bitAnd $2 (mapply neighbors $9)))))) $126) (fn_129 $126 $12 $13 ((lam ((lam ((lam (fn_73 $28 $1 ((lam (fn_87 $4 $2 (lam ((lam ((lam (fn_75 $0 (x36 $5 $16 $4 $3 $2 $0 $131 $30 $29 $11 $13 $6 $20 $19 $18 $1))) (fn_99 $5 $0))) (fn_12 $0))) (fill $136 7 $3))) (fill $0 $1 $3)) (fn_75 $0 (x36 $1 $12 $0 $132 $134 $136 $127 $26 $25 $7 $9 $2 $16 $15 $14 $135)))) (choice $40))) (backdrop $1))) (shift $0 (__tuple__ $24 $23)))))))) x71 $122 $121))) (fn_135 $0 2 (fn_6 (mul $9 $8))))) (fn_84 $1 (mul $8 $7)))) (fn_57 (fn_112 $6 $7) $38 $39))) (remove $2 $117))) (__set__ $1))) (fn_33 $115))) (fn_70 $3 $2))))) (fn_116 $122 (sub $31 $2) $1 $30))) (fn_126 7))) (fn_126 7))) (fn_1 $117 $115)))))))))))))))))))) x35))) $99 $101": "(fn_152 (fn_0 $101 $99 (fn_0 $97 $96 (fn_0 $74 $95 (fn_34 (lam (lam (lam (lam (lam (lam (lam (lam (lam (lam (lam (lam (lam (lam (lam (lam (lam (lam (fn_49 (lte $0 $19) $21 $1 (fn_22 $11 (fn_1 $12 $13) ((lam ((lam ((lam (fn_140 $4 $0 (x36 $19 $18 $17 $16 $15 $14 $13 $12 $11 $10 $9 $8 $2 $1) (fn_5 (choice $0) $11 $12 ((lam ((lam ((lam ((lam ((lam ((lam ((lam (fn_98 $1 $0 $120 (fn_23 (lam (lam (lam (fn_20 $3 $2 ((lam (fn_51 ((lam ((lam (x72 $0 $1 $2)) (next $5 $6))) (sub $0 $10)) (add_M $9 (fn_33 (bitAnd $2 (mapply neighbors $9)))))) $126) (fn_129 $126 $12 $13 ((lam ((lam ((lam (fn_73 $28 $1 ((lam (fn_87 $4 $2 (lam ((lam ((lam (fn_75 $0 (x36 $5 $16 $4 $3 $2 $0 $131 $30 $29 $11 $13 $6 $20 $19 $18 $1))) (fn_99 $5 $0))) (fn_12 $0))) (fill $136 7 $3))) (fill $0 $1 $3)) (fn_75 $0 (x36 $1 $12 $0 $132 $134 $136 $127 $26 $25 $7 $9 $2 $16 $15 $14 $135)))) (choice $40))) (backdrop $1))) (shift $0 (__tuple__ $24 $23)))))))) x71 $122 $121))) (fn_135 $0 2 (fn_6 (mul $9 $8))))) (fn_84 $1 (mul $8 $7)))) (fn_57 (fn_112 $6 $7) $38 $39))) (remove $2 $117))) (__set__ $1))) (fn_33 $115))) (fn_70 $3 $2))))) (fn_116 $122 (sub $31 $2) $1 $30))) (fn_126 7))) (fn_126 7))) (fn_1 $117 $115)))))))))))))))))))) x35)))))"
            },
            "dc_comparison_millis": null
        },
        {
            "body": "(__tuple__ 3)",
            "dreamcoder": "#(__tuple__ 3)",
            "arity": 0,
            "name": "fn_174",
            "utility": 2122,
            "final_cost": 4232890,
            "compression_ratio": 1.000548797629988,
            "cumulative_compression_ratio": 1.8790029979517524,
            "num_uses": 23,
            "rewritten": null,
            "rewritten_dreamcoder": null,
            "uses": {
                "fn_174 ": "(__tuple__ 3)"
            },
            "dc_comparison_millis": null
        },
        {
            "body": "(fn_40 #0 dneighbors)",
            "dreamcoder": "#(lambda (fn_40 $0 dneighbors))",
            "arity": 1,
            "name": "fn_175",
            "utility": 2121,
            "final_cost": 4230567,
            "compression_ratio": 1.0005490989742036,
            "cumulative_compression_ratio": 1.8800347565704532,
            "num_uses": 23,
            "rewritten": null,
            "rewritten_dreamcoder": null,
            "uses": {
                "fn_175 $1": "(fn_40 $1 dneighbors)"
            },
            "dc_comparison_millis": null
        },
        {
            "body": "(fn_9 (sample #1 #0))",
            "dreamcoder": "#(lambda (lambda (fn_9 (sample $0 $1))))",
            "arity": 2,
            "name": "fn_176",
            "utility": 2120,
            "final_cost": 4228244,
            "compression_ratio": 1.0005494006495368,
            "cumulative_compression_ratio": 1.8810676488868647,
            "num_uses": 23,
            "rewritten": null,
            "rewritten_dreamcoder": null,
            "uses": {
                "fn_176 $1 $2": "(fn_9 (sample $2 $1))"
            },
            "dc_comparison_millis": null
        },
        {
            "body": "(randint 0)",
            "dreamcoder": "#(randint 0)",
            "arity": 0,
            "name": "fn_177",
            "utility": 2021,
            "final_cost": 4226022,
            "compression_ratio": 1.0005257899745907,
            "cumulative_compression_ratio": 1.8820566953981763,
            "num_uses": 22,
            "rewritten": null,
            "rewritten_dreamcoder": null,
            "uses": {
                "fn_177 ": "(randint 0)"
            },
            "dc_comparison_millis": null
        },
        {
            "body": "(lam (fn_54 #2 #3 bgc (fn_28 bgc #2 #1 #0)))",
            "dreamcoder": "#(lambda (lambda (lambda (lambda (lambda (fn_54 $2 $1 bgc (fn_28 bgc $2 $3 $4)))))))",
            "arity": 4,
            "name": "fn_178",
            "utility": 2021,
            "final_cost": 4223592,
            "compression_ratio": 1.0005753396634902,
            "cumulative_compression_ratio": 1.8831395172639762,
            "num_uses": 6,
            "rewritten": null,
            "rewritten_dreamcoder": null,
            "uses": {
                "fn_178 (lam (fn_53 ((lam ((lam ((lam ((lam ((lam ((lam ((lam ((lam ((lam ((lam ((lam ((lam ((lam ((lam ((lam ((lam ((lam ((lam ((lam ((lam ((lam ((lam ((lam ((lam ((lam ((lam ((lam ((lam (fn_176 $1 $2 $0 (fn_0 $87 $86 (fn_136 (fn_1 $87 $86) (fn_35 x50 $1 $0 x45 $89) $0 x44 $88 $85)))) fn_82)) fn_31)) (fn_97 $84 $2))) (fn_97 $82 $1))) (fn_83 $2 $1))) (fn_57 (fn_30 (len $1)) $26 $27))) (ofcolor $80 bgc))) (fill $79 3 $4))) (fn_97 $78 $2))) (fn_97 $76 $1))) (__set__ $10 $9))) (bitOr (bitOr $7 $6) $5))) (fn_134 $74 $9))) (fill $73 3 $9))) (fn_134 $71 $7))) (fill $70 3 $7))) (fn_45 (fn_64 $10 $8) (fn_118 $9) $7))) (fn_55 $6 $7 (add $7 $9)))) (fn_45 $6 $5 (fn_64 $9 $7)))) (__tuple__ $4 (add $5 $7)))) (__tuple__ (fn_6 $3) $4))) (fn_132 (fn_64 $5 $3) (__tuple__ (fn_12 $4)) (__tuple__ $4) __set__))) (__set__ (__tuple__ (fn_64 $5 $3) $2) (__tuple__ (fn_48 (add $3 $5)) $2)))) (randint (fn_118 $2) (fn_159 (add $2 $4))))) (fn_61 (fn_102 $2 $4)))) (fn_61 (fn_102 $2 $4)))) (fn_109 (fn_48 $2) $5 $6))) (fn_4 (fn_48 $2) 5 $4 $5)) ((lam ((lam ((lam ((lam (fn_132 (randint $1 (fn_159 (add $1 $3))) (lam ((lam ((lam ((lam ((lam ((lam ((lam ((lam ((lam ((lam ((lam ((lam ((lam ((lam ((lam ((lam ((lam ((lam ((lam ((lam ((lam ((lam ((lam ((lam ((lam (fn_176 $1 $2 $0 (fn_0 $176 $175 (fn_136 (fn_1 $176 $175) (fn_35 x138 $1 $0 x133 $178) $0 x132 $177 $174)))) fn_82)) fn_31)) (fn_97 $173 $2))) (fn_97 $171 $1))) (fn_83 $2 $1))) (fn_57 (fn_30 (len $1)) $27 $28))) (ofcolor $169 bgc))) (fill $168 3 $4))) (fn_97 $167 $2))) (fn_97 $165 $1))) (__set__ $10 $9))) (bitOr (bitOr $7 $6) $5))) (fn_134 $163 $9))) (fill $162 3 $9))) (fn_134 $160 $7))) (fill $159 3 $7))) (fn_55 (fn_64 $12 $10) (fn_118 $8) (add $9 $11)))) (fn_45 (fn_64 $10 $8) (fn_64 $11 $9) $9))) (fn_55 $8 (fn_118 $5) (add $7 $9)))) (__tuple__ (add $7 $9) (fn_64 $8 $6)))) (__tuple__ $6 (add $5 $7)))) (fn_32 (fn_12 $3) (__tuple__ (fn_64 $7 $5)) $3 __set__))) (fn_32 (fn_12 $1) (__tuple__ $4) $1 __set__))) $2)) (lam ((lam ((lam ((lam ((lam ((lam ((lam ((lam ((lam ((lam ((lam ((lam ((lam ((lam ((lam ((lam ((lam ((lam ((lam ((lam ((lam ((lam ((lam ((lam ((lam (fn_176 $1 $2 $0 (fn_0 $134 $133 (fn_136 (fn_1 $134 $133) (fn_35 x96 $1 $0 x91 $136) $0 x90 $135 $132)))) fn_82)) fn_31)) (fn_97 $131 $2))) (fn_97 $129 $1))) (fn_83 $2 $1))) (fn_57 (fn_30 (len $1)) $27 $28))) (ofcolor $127 bgc))) (fill $126 3 $4))) (fn_97 $125 $2))) (fn_97 $123 $1))) (__set__ $10 $9))) (bitOr (bitOr $7 $6) $5))) (fn_134 $121 $9))) (fill $120 3 $9))) (fn_134 $118 $7))) (fill $117 3 $7))) (fn_55 (fn_64 $12 $10) (fn_118 $7) (add $9 $11)))) (fn_45 (fn_64 $10 $8) (fn_64 $11 $9) $9))) (fn_55 $8 (fn_118 $6) (add $7 $9)))) (__tuple__ (add $7 $9) (fn_64 $8 $6)))) (__tuple__ $6 (add $5 $7)))) (fn_32 (fn_12 $2) (__tuple__ (fn_64 $7 $5)) $2 __set__))) (fn_32 (fn_12 $2) (__tuple__ $4) $2 __set__))) $2)) fn_53)) (fn_61 (fn_102 $2 $4)))) (fn_61 (fn_102 $2 $4)))) (fn_109 (fn_48 $2) $5 $6))) (fn_109 (fn_48 $2) $4 $5)))) $0 $1 fgc": "(lam (fn_54 $2 fgc bgc (fn_28 bgc $2 $1 (lam (fn_53 ((lam ((lam ((lam ((lam ((lam ((lam ((lam ((lam ((lam ((lam ((lam ((lam ((lam ((lam ((lam ((lam ((lam ((lam ((lam ((lam ((lam ((lam ((lam ((lam ((lam ((lam ((lam ((lam (fn_176 $1 $2 $0 (fn_0 $88 $87 (fn_136 (fn_1 $88 $87) (fn_35 x50 $1 $0 x45 $90) $0 x44 $89 $86)))) fn_82)) fn_31)) (fn_97 $85 $2))) (fn_97 $83 $1))) (fn_83 $2 $1))) (fn_57 (fn_30 (len $1)) $27 $28))) (ofcolor $81 bgc))) (fill $80 3 $4))) (fn_97 $79 $2))) (fn_97 $77 $1))) (__set__ $10 $9))) (bitOr (bitOr $7 $6) $5))) (fn_134 $75 $9))) (fill $74 3 $9))) (fn_134 $72 $7))) (fill $71 3 $7))) (fn_45 (fn_64 $10 $8) (fn_118 $9) $7))) (fn_55 $6 $7 (add $7 $9)))) (fn_45 $6 $5 (fn_64 $9 $7)))) (__tuple__ $4 (add $5 $7)))) (__tuple__ (fn_6 $3) $4))) (fn_132 (fn_64 $5 $3) (__tuple__ (fn_12 $4)) (__tuple__ $4) __set__))) (__set__ (__tuple__ (fn_64 $5 $3) $2) (__tuple__ (fn_48 (add $3 $5)) $2)))) (randint (fn_118 $2) (fn_159 (add $2 $4))))) (fn_61 (fn_102 $2 $5)))) (fn_61 (fn_102 $2 $5)))) (fn_109 (fn_48 $3) $6 $7))) (fn_4 (fn_48 $3) 5 $5 $6)) ((lam ((lam ((lam ((lam (fn_132 (randint $1 (fn_159 (add $1 $3))) (lam ((lam ((lam ((lam ((lam ((lam ((lam ((lam ((lam ((lam ((lam ((lam ((lam ((lam ((lam ((lam ((lam ((lam ((lam ((lam ((lam ((lam ((lam ((lam ((lam (fn_176 $1 $2 $0 (fn_0 $177 $176 (fn_136 (fn_1 $177 $176) (fn_35 x138 $1 $0 x133 $179) $0 x132 $178 $175)))) fn_82)) fn_31)) (fn_97 $174 $2))) (fn_97 $172 $1))) (fn_83 $2 $1))) (fn_57 (fn_30 (len $1)) $28 $29))) (ofcolor $170 bgc))) (fill $169 3 $4))) (fn_97 $168 $2))) (fn_97 $166 $1))) (__set__ $10 $9))) (bitOr (bitOr $7 $6) $5))) (fn_134 $164 $9))) (fill $163 3 $9))) (fn_134 $161 $7))) (fill $160 3 $7))) (fn_55 (fn_64 $12 $10) (fn_118 $8) (add $9 $11)))) (fn_45 (fn_64 $10 $8) (fn_64 $11 $9) $9))) (fn_55 $8 (fn_118 $5) (add $7 $9)))) (__tuple__ (add $7 $9) (fn_64 $8 $6)))) (__tuple__ $6 (add $5 $7)))) (fn_32 (fn_12 $3) (__tuple__ (fn_64 $7 $5)) $3 __set__))) (fn_32 (fn_12 $1) (__tuple__ $4) $1 __set__))) $2)) (lam ((lam ((lam ((lam ((lam ((lam ((lam ((lam ((lam ((lam ((lam ((lam ((lam ((lam ((lam ((lam ((lam ((lam ((lam ((lam ((lam ((lam ((lam ((lam ((lam (fn_176 $1 $2 $0 (fn_0 $135 $134 (fn_136 (fn_1 $135 $134) (fn_35 x96 $1 $0 x91 $137) $0 x90 $136 $133)))) fn_82)) fn_31)) (fn_97 $132 $2))) (fn_97 $130 $1))) (fn_83 $2 $1))) (fn_57 (fn_30 (len $1)) $28 $29))) (ofcolor $128 bgc))) (fill $127 3 $4))) (fn_97 $126 $2))) (fn_97 $124 $1))) (__set__ $10 $9))) (bitOr (bitOr $7 $6) $5))) (fn_134 $122 $9))) (fill $121 3 $9))) (fn_134 $119 $7))) (fill $118 3 $7))) (fn_55 (fn_64 $12 $10) (fn_118 $7) (add $9 $11)))) (fn_45 (fn_64 $10 $8) (fn_64 $11 $9) $9))) (fn_55 $8 (fn_118 $6) (add $7 $9)))) (__tuple__ (add $7 $9) (fn_64 $8 $6)))) (__tuple__ $6 (add $5 $7)))) (fn_32 (fn_12 $2) (__tuple__ (fn_64 $7 $5)) $2 __set__))) (fn_32 (fn_12 $2) (__tuple__ $4) $2 __set__))) $2)) fn_53)) (fn_61 (fn_102 $2 $5)))) (fn_61 (fn_102 $2 $5)))) (fn_109 (fn_48 $3) $6 $7))) (fn_109 (fn_48 $3) $5 $6)))))))"
            },
            "dc_comparison_millis": null
        },
        {
            "body": "(fn_123 #2 #0 fn_12 (lam (#1 (remove (fn_6 #0) $0))))",
            "dreamcoder": "#(lambda (lambda (lambda (fn_123 $0 $2 fn_12 (lambda ($2 (remove (fn_6 $3) $0)))))))",
            "arity": 3,
            "name": "fn_179",
            "utility": 2021,
            "final_cost": 4221062,
            "compression_ratio": 1.0005993752283193,
            "cumulative_compression_ratio": 1.8842682244420934,
            "num_uses": 5,
            "rewritten": null,
            "rewritten_dreamcoder": null,
            "uses": {
                "fn_179 $1 (lam (fn_54 $15 $128 $127 ((lam ((lam ((lam ((lam (x66 $0 $3 $2 $1 $4 $6 $5)) (next $13 $14))) (fill $0 $37 (fn_21 $1 $4 $2 $4)))) (randint $0 (fn_6 $20)))) (fn_177 $0)))) $126": "(fn_123 $126 $1 fn_12 (lam ((lam (fn_54 $16 $129 $128 ((lam ((lam ((lam ((lam (x66 $0 $3 $2 $1 $4 $7 $6)) (next $14 $15))) (fill $0 $38 (fn_21 $1 $5 $2 $5)))) (randint $0 (fn_6 $21)))) (fn_177 $0)))) (remove (fn_6 $2) $0))))"
            },
            "dc_comparison_millis": null
        },
        {
            "body": "(fn_123 #2 #0 fn_6 (lam (#1 (remove (fn_12 #0) $0))))",
            "dreamcoder": "#(lambda (lambda (lambda (fn_123 $0 $2 fn_6 (lambda ($2 (remove (fn_12 $3) $0)))))))",
            "arity": 3,
            "name": "fn_180",
            "utility": 2021,
            "final_cost": 4218532,
            "compression_ratio": 1.0005997346944386,
            "cumulative_compression_ratio": 1.8853982854699196,
            "num_uses": 5,
            "rewritten": null,
            "rewritten_dreamcoder": null,
            "uses": {
                "fn_180 $1 (lam (fn_114 $1 $8 $7 (lam (x41 $0 $3 $2 $1)))) $138": "(fn_123 $138 $1 fn_6 (lam ((lam (fn_114 $2 $9 $8 (lam (x41 $0 $4 $3 $1)))) (remove (fn_12 $2) $0))))"
            },
            "dc_comparison_millis": null
        },
        {
            "body": "(fn_40 #0 neighbors)",
            "dreamcoder": "#(lambda (fn_40 $0 neighbors))",
            "arity": 1,
            "name": "fn_181",
            "utility": 2020,
            "final_cost": 4216310,
            "compression_ratio": 1.0005270010981167,
            "cumulative_compression_ratio": 1.8863918924367495,
            "num_uses": 22,
            "rewritten": null,
            "rewritten_dreamcoder": null,
            "uses": {
                "fn_181 $1": "(fn_40 $1 neighbors)"
            },
            "dc_comparison_millis": null
        },
        {
            "body": "(ifElse (lt #1 #0))",
            "dreamcoder": "#(lambda (lambda (ifElse (lt $0 $1))))",
            "arity": 2,
            "name": "fn_182",
            "utility": 2019,
            "final_cost": 4214088,
            "compression_ratio": 1.0005272789747153,
            "cumulative_compression_ratio": 1.887386547219705,
            "num_uses": 22,
            "rewritten": null,
            "rewritten_dreamcoder": null,
            "uses": {
                "fn_182 (add $16 3) $0": "(ifElse (lt $0 (add $16 3)))"
            },
            "dc_comparison_millis": null
        },
        {
            "body": "(fn_61 (fn_102 #1 #0))",
            "dreamcoder": "#(lambda (lambda (fn_61 (fn_102 $0 $1))))",
            "arity": 2,
            "name": "fn_183",
            "utility": 2019,
            "final_cost": 4211866,
            "compression_ratio": 1.0005275571445056,
            "cumulative_compression_ratio": 1.8883822514771345,
            "num_uses": 22,
            "rewritten": null,
            "rewritten_dreamcoder": null,
            "uses": {
                "fn_183 $3 $1": "(fn_61 (fn_102 $1 $3))"
            },
            "dc_comparison_millis": null
        },
        {
            "body": "(paint #2 (shift #1 #0))",
            "dreamcoder": "#(lambda (lambda (lambda (paint $0 (shift $1 $2)))))",
            "arity": 3,
            "name": "fn_184",
            "utility": 2018,
            "final_cost": 4209644,
            "compression_ratio": 1.0005278356079517,
            "cumulative_compression_ratio": 1.889379006870888,
            "num_uses": 22,
            "rewritten": null,
            "rewritten_dreamcoder": null,
            "uses": {
                "fn_184 $2 $1 $0": "(paint $0 (shift $1 $2))"
            },
            "dc_comparison_millis": null
        },
        {
            "body": "(#2 (fn_6 #1) (fn_6 #0))",
            "dreamcoder": "#(lambda (lambda (lambda ($0 (fn_6 $1) (fn_6 $2)))))",
            "arity": 3,
            "name": "fn_185",
            "utility": 2018,
            "final_cost": 4207422,
            "compression_ratio": 1.000528114365519,
            "cumulative_compression_ratio": 1.8903768150663265,
            "num_uses": 22,
            "rewritten": null,
            "rewritten_dreamcoder": null,
            "uses": {
                "fn_185 $6 $7 __tuple__": "(__tuple__ (fn_6 $7) (fn_6 $6))"
            },
            "dc_comparison_millis": null
        },
        {
            "body": "(backdrop (fn_14 #3 #2 #1 #0))",
            "dreamcoder": "#(lambda (lambda (lambda (lambda (backdrop (fn_14 $0 $1 $2 $3))))))",
            "arity": 4,
            "name": "fn_186",
            "utility": 2017,
            "final_cost": 4205200,
            "compression_ratio": 1.0005283934176734,
            "cumulative_compression_ratio": 1.89137567773233,
            "num_uses": 22,
            "rewritten": null,
            "rewritten_dreamcoder": null,
            "uses": {
                "fn_186 $2 $11 $1 $10": "(backdrop (fn_14 $10 $1 $11 $2))"
            },
            "dc_comparison_millis": null
        },
        {
            "body": "(lam (lam (lam (lam (fn_93 (#1 $3 $2 $1 $0) #0)))))",
            "dreamcoder": "#(lambda (lambda (lambda (lambda (lambda (lambda (fn_93 ($4 $3 $2 $1 $0) $5)))))))",
            "arity": 2,
            "name": "fn_187",
            "utility": 1938,
            "final_cost": 4202752,
            "compression_ratio": 1.0005824754827313,
            "cumulative_compression_ratio": 1.8924773576932434,
            "num_uses": 6,
            "rewritten": null,
            "rewritten_dreamcoder": null,
            "uses": {
                "fn_187 (lam (lam (lam (lam (lam (lam (lam (lam (lam (lam (lam (lam (lam (lam (lam (lam (lam (lam (lam (lam (lam (lam (lam (lam (lam (lam (lam (ifElse True ((lam ((lam ((lam ((lam ((lam ((lam ((lam ((lam ((lam ((lam (fn_173 (fn_170 x84 (lam (lam (lam (lam (lam (lam (lam (lam (lam (lam (lam (lam (lam (lam (lam (lam (fn_122 $21 $1 $24 $2 ((lam ((lam ((lam ((lam (fn_53 ((lam ((lam ((lam (fn_158 $2 $0 (fn_0 $189 $229 (fn_69 x115 (lam (lam (lam (lam (fn_20 $4 $3 ((lam ((lam (fn_22 $0 ((lam ((lam ((lam (fn_77 $3 $0 (fn_38 (lam (lam (lam (fn_20 $3 $1 (fn_142 (bitAnd (sub $5 $4) (bitAnd (mapply dneighbors $4) $5)) $4 $3 x132 $217) ((lam (fn_129 $0 $19 $20 ((lam (fn_96 $1 (lam ((lam (fn_73 $37 $0 ((lam ((lam ((lam (x85 $5 $2 $0 $4 $23 $13 $22 $6 $12 $26 $25 $3 $1 $27 $14)) (fn_181 $3 $0))) (fn_12 $0))) (fill $0 (choice $45) $1)) (x85 $2 $225 $227 $1 $20 $10 $19 $3 $9 $23 $22 $0 $226 $24 $11))) (shift $3 $1))) (x85 $0 $36 $35 $34 $18 $8 $17 $1 $7 $21 $20 $26 $25 $22 $9) $0)) (fn_44 $21 $49 $20 $48 $225)))) (normalize $0)))))) x131 $213 $212))) (set $213))) (fn_132 (outbox (outbox $212)) outbox (bitOr (outbox $212)) bitOr))) (fn_57 (add $13 $12) $71 $72)) ((lam ((lam (x116 $0 $210 $1 $2)) (next $7 $8))) (remove (fn_33 $1) $0)))) (sfilter $218 (lam (eq (len (bitAnd (dneighbors $0) $219)) 1))))) $218) ((lam ((lam ((lam (fn_77 $3 $0 (fn_38 (lam (lam (lam (fn_20 $3 $1 (fn_142 (bitAnd (sub $5 $4) (bitAnd (mapply dneighbors $4) $5)) $4 $3 x157 $240) ((lam (fn_129 $0 $17 $18 ((lam (fn_96 $1 (lam ((lam (fn_73 $225 $0 ((lam ((lam ((lam (x85 $5 $2 $0 $4 $21 $13 $20 $6 $12 $24 $23 $3 $1 $25 $207)) (fn_181 $3 $0))) (fn_12 $0))) (fill $0 (choice $43) $1)) (x85 $2 $248 $250 $1 $18 $10 $17 $3 $9 $21 $20 $0 $249 $22 $204))) (shift $3 $1))) (x85 $0 $221 $223 $219 $16 $8 $15 $1 $7 $19 $18 $220 $222 $20 $202) $0)) (fn_44 $19 $47 $18 $46 $248)))) (normalize $0)))))) x156 $236 $235))) (set $236))) (fn_132 (outbox (outbox $235)) outbox (bitOr (outbox $235)) bitOr))) (fn_57 (add $11 $10) $69 $70))))))) $213 $227)))) (remove (fn_33 (sub $228 (corners $228))) $228))) (sub (len $227) $1))) (fn_56 (fn_6 (len $226)) $61 $62)) ((lam ((lam ((lam (fn_77 $3 $0 (fn_38 (lam (lam (lam (fn_20 $3 $1 (fn_142 (bitAnd (sub $5 $4) (bitAnd (mapply dneighbors $4) $5)) $4 $3 x179 $254) ((lam (fn_129 $0 $9 $10 ((lam (fn_96 $1 (lam ((lam (fn_73 $242 $0 ((lam ((lam ((lam (x85 $5 $2 $0 $4 $182 $13 $183 $6 $12 $16 $15 $3 $1 $17 $199)) (fn_181 $3 $0))) (fn_12 $0))) (fill $0 (choice $35) $1)) (x85 $2 $262 $264 $1 $179 $10 $180 $3 $9 $13 $12 $0 $263 $14 $196))) (shift $3 $1))) (x85 $0 $238 $240 $236 $177 $8 $178 $1 $7 $11 $10 $237 $239 $12 $194) $0)) (fn_44 $11 $39 $10 $38 $262)))) (normalize $0)))))) x178 $250 $249))) (set $250))) (fn_132 (outbox (outbox $249)) outbox (bitOr (outbox $249)) bitOr))) (fn_57 (add $3 $2) $61 $62)))) (box (fn_185 $2 $1 fn_80 fn_124)))) (fn_138 6))) (fn_138 6))) (fn_12 $0)) ((lam ((lam ((lam (fn_104 0 (len $0) ((lam (fn_42 $251 (fill $252 8 $1))) (mfilter (sub $3 $2) (rbind adjacent $1))) (x32 $23 $1 $247 $250 $258 $29 $252 $248 $24 $167 $27 $232 $168 $246 $233 $2 $0 $164 $165 $249 $22 $257 $251 $163 $28 $184))) (mfilter $1 (compose flip (rbind bordering $250))))) (colorfilter $1 $22))) (fn_150 $248))))))))))))))))))) $228 $231) $233 $229 $148 $213 $149 $227 $214 $145 $146 $230 $165 $232 $144)) (asindices $230))) (fn_13 $7 $8 $2))) (remove $1 $36))) (choice $35))) (mul 10 $3))) 0)) 0)) (fn_74 16 $1 $2 $32 $33))) (fn_58 $31 $32))) (fn_58 $30 $31)) (fn_1 $228 $220))))))))))))))))))))))))))))) x31": "(lam (lam (lam (lam (fn_93 (x31 $3 $2 $1 $0) (lam (lam (lam (lam (lam (lam (lam (lam (lam (lam (lam (lam (lam (lam (lam (lam (lam (lam (lam (lam (lam (lam (lam (lam (lam (lam (lam (ifElse True ((lam ((lam ((lam ((lam ((lam ((lam ((lam ((lam ((lam ((lam (fn_173 (fn_170 x84 (lam (lam (lam (lam (lam (lam (lam (lam (lam (lam (lam (lam (lam (lam (lam (lam (fn_122 $21 $1 $24 $2 ((lam ((lam ((lam ((lam (fn_53 ((lam ((lam ((lam (fn_158 $2 $0 (fn_0 $193 $233 (fn_69 x115 (lam (lam (lam (lam (fn_20 $4 $3 ((lam ((lam (fn_22 $0 ((lam ((lam ((lam (fn_77 $3 $0 (fn_38 (lam (lam (lam (fn_20 $3 $1 (fn_142 (bitAnd (sub $5 $4) (bitAnd (mapply dneighbors $4) $5)) $4 $3 x132 $221) ((lam (fn_129 $0 $19 $20 ((lam (fn_96 $1 (lam ((lam (fn_73 $37 $0 ((lam ((lam ((lam (x85 $5 $2 $0 $4 $23 $13 $22 $6 $12 $26 $25 $3 $1 $27 $14)) (fn_181 $3 $0))) (fn_12 $0))) (fill $0 (choice $45) $1)) (x85 $2 $229 $231 $1 $20 $10 $19 $3 $9 $23 $22 $0 $230 $24 $11))) (shift $3 $1))) (x85 $0 $36 $35 $34 $18 $8 $17 $1 $7 $21 $20 $26 $25 $22 $9) $0)) (fn_44 $21 $49 $20 $48 $229)))) (normalize $0)))))) x131 $217 $216))) (set $217))) (fn_132 (outbox (outbox $216)) outbox (bitOr (outbox $216)) bitOr))) (fn_57 (add $13 $12) $75 $76)) ((lam ((lam (x116 $0 $214 $1 $2)) (next $7 $8))) (remove (fn_33 $1) $0)))) (sfilter $222 (lam (eq (len (bitAnd (dneighbors $0) $223)) 1))))) $222) ((lam ((lam ((lam (fn_77 $3 $0 (fn_38 (lam (lam (lam (fn_20 $3 $1 (fn_142 (bitAnd (sub $5 $4) (bitAnd (mapply dneighbors $4) $5)) $4 $3 x157 $244) ((lam (fn_129 $0 $17 $18 ((lam (fn_96 $1 (lam ((lam (fn_73 $229 $0 ((lam ((lam ((lam (x85 $5 $2 $0 $4 $21 $13 $20 $6 $12 $24 $23 $3 $1 $25 $211)) (fn_181 $3 $0))) (fn_12 $0))) (fill $0 (choice $43) $1)) (x85 $2 $252 $254 $1 $18 $10 $17 $3 $9 $21 $20 $0 $253 $22 $208))) (shift $3 $1))) (x85 $0 $225 $227 $223 $16 $8 $15 $1 $7 $19 $18 $224 $226 $20 $206) $0)) (fn_44 $19 $47 $18 $46 $252)))) (normalize $0)))))) x156 $240 $239))) (set $240))) (fn_132 (outbox (outbox $239)) outbox (bitOr (outbox $239)) bitOr))) (fn_57 (add $11 $10) $73 $74))))))) $217 $231)))) (remove (fn_33 (sub $232 (corners $232))) $232))) (sub (len $231) $1))) (fn_56 (fn_6 (len $230)) $65 $66)) ((lam ((lam ((lam (fn_77 $3 $0 (fn_38 (lam (lam (lam (fn_20 $3 $1 (fn_142 (bitAnd (sub $5 $4) (bitAnd (mapply dneighbors $4) $5)) $4 $3 x179 $258) ((lam (fn_129 $0 $9 $10 ((lam (fn_96 $1 (lam ((lam (fn_73 $246 $0 ((lam ((lam ((lam (x85 $5 $2 $0 $4 $186 $13 $187 $6 $12 $16 $15 $3 $1 $17 $203)) (fn_181 $3 $0))) (fn_12 $0))) (fill $0 (choice $35) $1)) (x85 $2 $266 $268 $1 $183 $10 $184 $3 $9 $13 $12 $0 $267 $14 $200))) (shift $3 $1))) (x85 $0 $242 $244 $240 $181 $8 $182 $1 $7 $11 $10 $241 $243 $12 $198) $0)) (fn_44 $11 $39 $10 $38 $266)))) (normalize $0)))))) x178 $254 $253))) (set $254))) (fn_132 (outbox (outbox $253)) outbox (bitOr (outbox $253)) bitOr))) (fn_57 (add $3 $2) $65 $66)))) (box (fn_185 $2 $1 fn_80 fn_124)))) (fn_138 6))) (fn_138 6))) (fn_12 $0)) ((lam ((lam ((lam (fn_104 0 (len $0) ((lam (fn_42 $255 (fill $256 8 $1))) (mfilter (sub $3 $2) (rbind adjacent $1))) (x32 $23 $1 $251 $254 $262 $29 $256 $252 $24 $171 $27 $236 $172 $250 $237 $2 $0 $168 $169 $253 $22 $261 $255 $167 $28 $188))) (mfilter $1 (compose flip (rbind bordering $254))))) (colorfilter $1 $22))) (fn_150 $252))))))))))))))))))) $232 $235) $237 $233 $152 $217 $153 $231 $218 $149 $150 $234 $169 $236 $148)) (asindices $234))) (fn_13 $7 $8 $2))) (remove $1 $40))) (choice $39))) (mul 10 $3))) 0)) 0)) (fn_74 16 $1 $2 $36 $37))) (fn_58 $35 $36))) (fn_58 $34 $35)) (fn_1 $232 $224))))))))))))))))))))))))))))))))))"
            },
            "dc_comparison_millis": null
        },
        {
            "body": "(__set__ (__tuple__ #1 #0))",
            "dreamcoder": "#(lambda (lambda (__set__ (__tuple__ $0 $1))))",
            "arity": 2,
            "name": "fn_188",
            "utility": 1918,
            "final_cost": 4200631,
            "compression_ratio": 1.0005049241411588,
            "cumulative_compression_ratio": 1.8934329151977392,
            "num_uses": 21,
            "rewritten": null,
            "rewritten_dreamcoder": null,
            "uses": {
                "fn_188 $2 $1": "(__set__ (__tuple__ $1 $2))"
            },
            "dc_comparison_millis": null
        },
        {
            "body": "(ifElse (andOp #1 #0))",
            "dreamcoder": "#(lambda (lambda (ifElse (andOp $0 $1))))",
            "arity": 2,
            "name": "fn_189",
            "utility": 1918,
            "final_cost": 4198510,
            "compression_ratio": 1.0005051792183417,
            "cumulative_compression_ratio": 1.8943894381578212,
            "num_uses": 21,
            "rewritten": null,
            "rewritten_dreamcoder": null,
            "uses": {
                "fn_189 (eq (len $1) 0) $0": "(ifElse (andOp $0 (eq (len $1) 0)))"
            },
            "dc_comparison_millis": null
        },
        {
            "body": "(fn_5 (sorted (sample (fn_127 (fn_48 #1) #0) 2)))",
            "dreamcoder": "#(lambda (lambda (fn_5 (sorted (sample (fn_127 (fn_48 $0) $1) 2)))))",
            "arity": 2,
            "name": "fn_190",
            "utility": 1918,
            "final_cost": 4195985,
            "compression_ratio": 1.0006017657355781,
            "cumulative_compression_ratio": 1.8955294168115457,
            "num_uses": 5,
            "rewritten": null,
            "rewritten_dreamcoder": null,
            "uses": {
                "fn_190 2 $1": "(fn_5 (sorted (sample (fn_127 (fn_48 $1) 2) 2)))"
            },
            "dc_comparison_millis": null
        },
        {
            "body": "(__tuple__ (mul #3 (fn_12 #2)) (mul #1 (fn_12 #0)))",
            "dreamcoder": "#(lambda (lambda (lambda (lambda (__tuple__ (mul $0 (fn_12 $1)) (mul $2 (fn_12 $3)))))))",
            "arity": 4,
            "name": "fn_191",
            "utility": 1916,
            "final_cost": 4193561,
            "compression_ratio": 1.0005780290306974,
            "cumulative_compression_ratio": 1.8966250878430038,
            "num_uses": 6,
            "rewritten": null,
            "rewritten_dreamcoder": null,
            "uses": {
                "fn_191 $30 $1 $31 $12": "(__tuple__ (mul $12 (fn_12 $31)) (mul $1 (fn_12 $30)))"
            },
            "dc_comparison_millis": null
        },
        {
            "body": "(lam (#3 $0 #2 #1 neighbors #0))",
            "dreamcoder": "#(lambda (lambda (lambda (lambda (lambda ($1 $0 $2 $3 neighbors $4))))))",
            "arity": 4,
            "name": "fn_192",
            "utility": 1834,
            "final_cost": 4191521,
            "compression_ratio": 1.0004866968339179,
            "cumulative_compression_ratio": 1.8975481692683862,
            "num_uses": 20,
            "rewritten": null,
            "rewritten_dreamcoder": null,
            "uses": {
                "fn_192 $3 $2 x20 (fn_78 $1 $0)": "(lam (fn_78 $2 $1 $0 x20 $3 neighbors $4))"
            },
            "dc_comparison_millis": null
        },
        {
            "body": "(__tuple__ -1)",
            "dreamcoder": "#(__tuple__ -1)",
            "arity": 0,
            "name": "fn_193",
            "utility": 1819,
            "final_cost": 4189501,
            "compression_ratio": 1.0004821576603038,
            "cumulative_compression_ratio": 1.8984630866539944,
            "num_uses": 20,
            "rewritten": null,
            "rewritten_dreamcoder": null,
            "uses": {
                "fn_193 ": "(__tuple__ -1)"
            },
            "dc_comparison_millis": null
        },
        {
            "body": "(ifElse None)",
            "dreamcoder": "#(ifElse None)",
            "arity": 0,
            "name": "fn_194",
            "utility": 1819,
            "final_cost": 4187481,
            "compression_ratio": 1.0004823902484572,
            "cumulative_compression_ratio": 1.8993788867340522,
            "num_uses": 20,
            "rewritten": null,
            "rewritten_dreamcoder": null,
            "uses": {
                "fn_194 ": "(ifElse None)"
            },
            "dc_comparison_millis": null
        },
        {
            "body": "(mul 5)",
            "dreamcoder": "#(mul 5)",
            "arity": 0,
            "name": "fn_195",
            "utility": 1819,
            "final_cost": 4185461,
            "compression_ratio": 1.0004826230611157,
            "cumulative_compression_ratio": 1.9002955707865863,
            "num_uses": 20,
            "rewritten": null,
            "rewritten_dreamcoder": null,
            "uses": {
                "fn_195 ": "(mul 5)"
            },
            "dc_comparison_millis": null
        },
        {
            "body": "(fill #0 linc)",
            "dreamcoder": "#(lambda (fill $0 linc))",
            "arity": 1,
            "name": "fn_196",
            "utility": 1818,
            "final_cost": 4183441,
            "compression_ratio": 1.000482856098604,
            "cumulative_compression_ratio": 1.9012131400920909,
            "num_uses": 20,
            "rewritten": null,
            "rewritten_dreamcoder": null,
            "uses": {
                "fn_196 $0": "(fill $0 linc)"
            },
            "dc_comparison_millis": null
        },
        {
            "body": "(bitAnd (sub #2 #0) (mapply #1 #0))",
            "dreamcoder": "#(lambda (lambda (lambda (bitAnd (sub $0 $2) (mapply $1 $2)))))",
            "arity": 3,
            "name": "fn_197",
            "utility": 1815,
            "final_cost": 4181320,
            "compression_ratio": 1.0005072560818116,
            "cumulative_compression_ratio": 1.9021775420202227,
            "num_uses": 7,
            "rewritten": null,
            "rewritten_dreamcoder": null,
            "uses": {
                "fn_197 $8 dneighbors $10": "(bitAnd (sub $10 $8) (mapply dneighbors $8))"
            },
            "dc_comparison_millis": null
        },
        {
            "body": "(lam (#3 $0 #2 (fill $0 #1 #0)))",
            "dreamcoder": "#(lambda (lambda (lambda (lambda (lambda ($1 $0 $2 (fill $0 $3 $4)))))))",
            "arity": 4,
            "name": "fn_198",
            "utility": 1723,
            "final_cost": 4179290,
            "compression_ratio": 1.000485728437127,
            "cumulative_compression_ratio": 1.9031014837448461,
            "num_uses": 10,
            "rewritten": null,
            "rewritten_dreamcoder": null,
            "uses": {
                "fn_198 (fn_164 (add $8 $0) $14) $6 x23 (fn_120 $4 $3)": "(lam (fn_120 $5 $4 $0 x23 (fill $0 $7 (fn_164 (add $9 $1) $15))))"
            },
            "dc_comparison_millis": null
        },
        {
            "body": "(fn_8 x41 x39 x40)",
            "dreamcoder": "#(fn_8 x41 x39 x40)",
            "arity": 0,
            "name": "fn_199",
            "utility": 1718,
            "final_cost": 4177169,
            "compression_ratio": 1.000507760160051,
            "cumulative_compression_ratio": 1.9040678028588256,
            "num_uses": 7,
            "rewritten": null,
            "rewritten_dreamcoder": null,
            "uses": {
                "fn_199 ": "(fn_8 x41 x39 x40)"
            },
            "dc_comparison_millis": null
        }
    ]
}