{
    "cmd": "/home/dlindberg/.conda/envs/arcProjectEnv/bin/python run_stitch.py",
    "args": {
        "iterations": 1,
        "abstraction_prefix": "fn_",
        "previous_abstractions": 130,
        "shuffle": false,
        "truncate": null,
        "no_opt": false,
        "silent": true,
        "verbose_rewrite": false,
        "step": {
            "max_arity": 4,
            "threads": 18,
            "no_stats": false,
            "batch": 1,
            "dynamic_batch": false,
            "eta_long": false,
            "no_curried_metavars": false,
            "no_curried_bodies": false,
            "inv_candidates": 1,
            "hole_choice": "DepthFirst",
            "cost": {
                "cost_lam": 1,
                "cost_app": 1,
                "cost_var": 100,
                "cost_ivar": 100,
                "cost_prim_default": 100
            },
            "no_mismatch_check": false,
            "follow": null,
            "follow_prune": false,
            "verbose_worklist": false,
            "verbose_best": false,
            "print_stats": 0,
            "show_rewritten": false,
            "rewritten_dreamcoder": false,
            "rewritten_intermediates": false,
            "inv_arg_cap": false,
            "allow_single_task": false,
            "no_opt_single_use": false,
            "no_opt_upper_bound": false,
            "no_opt_force_multiuse": false,
            "no_opt_useless_abstract": false,
            "no_opt_arity_zero": false,
            "no_other_util": false,
            "structure_penalty": 1.0,
            "rewrite_check": false,
            "utility_by_rewrite": false,
            "dreamcoder_comparison": false,
            "quiet": true,
            "fused_lambda_tags": {
                "tags": null
            }
        }
    },
    "original_cost": 4371870,
    "final_cost": 4368335,
    "compression_ratio": 1.0008092328083813,
    "num_abstractions": 1,
    "original": "(lam (lam ((lam ((lam ((lam ((lam ((lam (fn_26 $4 c2 c1 ((lam ((lam ((lam ((lam ((lam ((lam ((lam ((lam ((lam ((lam ((lam ((lam ((lam ((lam ((lam ((lam ((lam ((lam ((lam ((lam ((lam ((lam ((lam ((lam ((lam (fn_18 $65 $66 $0)) (fn_66 $5 $1 8 $65))) (backdrop (fn_80 (fn_6 (min $15 $13)) (fn_6 $21) (__tuple__ (fn_12 $18) (fn_12 (max $16 $14))))))) (paint $63 $2))) (fn_60 $25 $24))) (shift $0 $1))) (__tuple__ $2 $1))) (fn_37 $19 $21))) (fn_37 $19 $21))) (asobject $1))) (fill $0 c2 $3))) (fill $45 c1 $3))) (fn_60 $15 $14))) (backdrop (fn_80 $2 (fn_6 $14) (__tuple__ $10 $3))))) (backdrop (fn_80 $3 $6 (fn_50 $4))))) (randint (fn_12 $4) (fn_6 $11)))) (randint 0 (fn_6 $3)))) (randint (fn_12 $2) (fn_6 $9)))) (randint 0 (fn_6 $1)))) (fn_61 (fn_48 $7)))) (getItem $2 $1))) (fn_57 (fn_6 (len $1)) $10 $11))) (getItemWithStep (getItemUpTo $0 (fn_6 $2)) 0 -1 -1))) (getItem $21 $1))) (fn_56 (fn_6 $3) $7 $8))) (fn_63 $2)))) (fn_109 $2 $5 $6))) (fn_109 $2 $4 $5))) (fn_107 $3 $4))) (fn_107 $2 $3))) (fn_81 8))))",
    "rewritten": "(lam (lam ((lam ((lam ((lam ((lam ((lam (fn_26 $4 c2 c1 ((lam ((lam ((lam ((lam ((lam ((lam ((lam ((lam ((lam ((lam ((lam ((lam ((lam ((lam ((lam ((lam ((lam ((lam ((lam ((lam ((lam ((lam ((lam ((lam ((lam (fn_18 $65 $66 $0)) (fn_66 $5 $1 8 $65))) (backdrop (fn_80 (fn_6 (min $15 $13)) (fn_6 $21) (__tuple__ (fn_12 $18) (fn_12 (max $16 $14))))))) (paint $63 $2))) (fn_60 $25 $24))) (shift $0 $1))) (__tuple__ $2 $1))) (fn_37 $19 $21))) (fn_37 $19 $21))) (asobject $1))) (fill $0 c2 $3))) (fill $45 c1 $3))) (fn_60 $15 $14))) (backdrop (fn_80 $2 (fn_6 $14) (__tuple__ $10 $3))))) (backdrop (fn_80 $3 $6 (fn_50 $4))))) (randint (fn_12 $4) (fn_6 $11)))) (randint 0 (fn_6 $3)))) (randint (fn_12 $2) (fn_6 $9)))) (randint 0 (fn_6 $1)))) (fn_61 (fn_48 $7)))) (getItem $2 $1))) (fn_57 (fn_6 (len $1)) $10 $11))) (getItemWithStep (getItemUpTo $0 (fn_6 $2)) 0 -1 -1))) (getItem $21 $1))) (fn_56 (fn_6 $3) $7 $8))) (fn_63 $2)))) (fn_109 $2 $5 $6))) (fn_109 $2 $4 $5))) (fn_107 $3 $4))) (fn_107 $2 $3))) (fn_81 8))))",
    "rewritten_dreamcoder": null,
    "abstractions": [
        {
            "body": "(fn_128 #3 (fn_0 #2 #1 #0))",
            "dreamcoder": "#(lambda (lambda (lambda (lambda (fn_128 $0 (fn_0 $1 $2 $3))))))",
            "arity": 4,
            "name": "fn_130",
            "utility": 3330,
            "final_cost": 4368335,
            "compression_ratio": 1.0008092328083813,
            "cumulative_compression_ratio": 1.0008092328083813,
            "num_uses": 35,
            "rewritten": null,
            "rewritten_dreamcoder": null,
            "uses": {
                "fn_130 (fn_0 $94 $77 (fn_0 $79 $60 (fn_0 $59 $92 (fn_0 $101 $99 (fn_0 $97 $96 (fn_0 $74 $95 (fn_34 (lam (lam (lam (lam (lam (lam (lam (lam (lam (lam (lam (lam (lam (lam (lam (lam (lam (lam (fn_49 (lte $0 $19) $21 $1 (fn_22 $11 (fn_1 $12 $13) ((lam ((lam ((lam (fn_22 $0 (fn_75 $0 (x36 $19 $18 $17 $16 $15 $14 $13 $12 $11 $10 $9 $8 $2 $1 $0 $4)) (fn_5 (choice $0) $11 $12 ((lam ((lam ((lam ((lam ((lam ((lam ((lam (fn_98 $1 $0 $120 (fn_23 (lam (lam (lam (fn_20 $3 $2 ((lam (fn_51 ((lam ((lam (x72 $0 $1 $2)) (next $5 $6))) (sub $0 $10)) (add_M $9 (fn_33 (bitAnd $2 (mapply neighbors $9)))))) $126) (fn_129 $126 $12 $13 ((lam ((lam ((lam (fn_73 $28 $1 ((lam (fn_87 $4 $2 (lam ((lam ((lam (fn_75 $0 (x36 $5 $16 $4 $3 $2 $0 $131 $30 $29 $11 $13 $6 $20 $19 $18 $1))) (fn_99 $5 $0))) (fn_12 $0))) (fill $136 7 $3))) (fill $0 $1 $3)) (fn_75 $0 (x36 $1 $12 $0 $132 $134 $136 $127 $26 $25 $7 $9 $2 $16 $15 $14 $135)))) (choice $40))) (backdrop $1))) (shift $0 (__tuple__ $24 $23)))))))) x71 $122 $121))) (min (max 2 $0) (fn_6 (mul $9 $8))))) (fn_84 $1 (mul $8 $7)))) (fn_57 (fn_112 $6 $7) $38 $39))) (remove $2 $117))) (__set__ $1))) (fn_33 $115))) (fn_70 $3 $2))))) (fn_116 $122 (sub $31 $2) $1 $30))) (fn_126 7))) (fn_126 7))) (fn_1 $117 $115)))))))))))))))))))) x35))))))) $69 $70 $103": "(fn_128 $103 (fn_0 $70 $69 (fn_0 $94 $77 (fn_0 $79 $60 (fn_0 $59 $92 (fn_0 $101 $99 (fn_0 $97 $96 (fn_0 $74 $95 (fn_34 (lam (lam (lam (lam (lam (lam (lam (lam (lam (lam (lam (lam (lam (lam (lam (lam (lam (lam (fn_49 (lte $0 $19) $21 $1 (fn_22 $11 (fn_1 $12 $13) ((lam ((lam ((lam (fn_22 $0 (fn_75 $0 (x36 $19 $18 $17 $16 $15 $14 $13 $12 $11 $10 $9 $8 $2 $1 $0 $4)) (fn_5 (choice $0) $11 $12 ((lam ((lam ((lam ((lam ((lam ((lam ((lam (fn_98 $1 $0 $120 (fn_23 (lam (lam (lam (fn_20 $3 $2 ((lam (fn_51 ((lam ((lam (x72 $0 $1 $2)) (next $5 $6))) (sub $0 $10)) (add_M $9 (fn_33 (bitAnd $2 (mapply neighbors $9)))))) $126) (fn_129 $126 $12 $13 ((lam ((lam ((lam (fn_73 $28 $1 ((lam (fn_87 $4 $2 (lam ((lam ((lam (fn_75 $0 (x36 $5 $16 $4 $3 $2 $0 $131 $30 $29 $11 $13 $6 $20 $19 $18 $1))) (fn_99 $5 $0))) (fn_12 $0))) (fill $136 7 $3))) (fill $0 $1 $3)) (fn_75 $0 (x36 $1 $12 $0 $132 $134 $136 $127 $26 $25 $7 $9 $2 $16 $15 $14 $135)))) (choice $40))) (backdrop $1))) (shift $0 (__tuple__ $24 $23)))))))) x71 $122 $121))) (min (max 2 $0) (fn_6 (mul $9 $8))))) (fn_84 $1 (mul $8 $7)))) (fn_57 (fn_112 $6 $7) $38 $39))) (remove $2 $117))) (__set__ $1))) (fn_33 $115))) (fn_70 $3 $2))))) (fn_116 $122 (sub $31 $2) $1 $30))) (fn_126 7))) (fn_126 7))) (fn_1 $117 $115)))))))))))))))))))) x35)))))))))"
            },
            "dc_comparison_millis": null
        }
    ]
}