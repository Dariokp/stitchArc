{
    "cmd": "/home/dlindberg/.conda/envs/arcProjectEnv/bin/python run_stitch.py",
    "args": {
        "iterations": 1,
        "abstraction_prefix": "fn_",
        "previous_abstractions": 9,
        "shuffle": false,
        "truncate": null,
        "no_opt": false,
        "silent": true,
        "verbose_rewrite": false,
        "step": {
            "max_arity": 4,
            "threads": 18,
            "no_stats": false,
            "batch": 1,
            "dynamic_batch": false,
            "eta_long": false,
            "no_curried_metavars": false,
            "no_curried_bodies": false,
            "inv_candidates": 1,
            "hole_choice": "DepthFirst",
            "cost": {
                "cost_lam": 1,
                "cost_app": 1,
                "cost_var": 100,
                "cost_ivar": 100,
                "cost_prim_default": 100
            },
            "no_mismatch_check": false,
            "follow": null,
            "follow_prune": false,
            "verbose_worklist": false,
            "verbose_best": false,
            "print_stats": 0,
            "show_rewritten": false,
            "rewritten_dreamcoder": false,
            "rewritten_intermediates": false,
            "inv_arg_cap": false,
            "allow_single_task": false,
            "no_opt_single_use": false,
            "no_opt_upper_bound": false,
            "no_opt_force_multiuse": false,
            "no_opt_useless_abstract": false,
            "no_opt_arity_zero": false,
            "no_other_util": false,
            "structure_penalty": 1.0,
            "rewrite_check": false,
            "utility_by_rewrite": false,
            "dreamcoder_comparison": false,
            "quiet": true,
            "fused_lambda_tags": {
                "tags": null
            }
        }
    },
    "original_cost": 5852699,
    "final_cost": 5801597,
    "compression_ratio": 1.008808264345145,
    "num_abstractions": 1,
    "original": "(lam (lam ((lam ((lam ((lam ((lam ((lam (getItem (__listComp__ ((lam ((lam ((lam ((lam ((lam ((lam ((lam ((lam ((lam ((lam ((lam ((lam ((lam ((lam ((lam ((lam ((lam ((lam ((lam ((lam ((lam ((lam ((lam ((lam ((lam (ifElse (choice (__tuple__ True False)) ((lam ((lam (fn_1 $0 $1)) (dmirror $0))) (dmirror $0)) (fn_1 $66 $65))) (fill $65 8 (shift $1 $5)))) (backdrop (frozenset (__set__ (__tuple__ (add $18 1) (add (max $16 $14) 1)) (__tuple__ (fn_6 $21) (fn_6 (min $15 $13)))))))) (paint $63 $2))) (canvas bgc (__tuple__ $25 $24)))) (shift $0 $1))) (__tuple__ $2 $1))) (randint 0 (sub $21 $19)))) (randint 0 (sub $21 $19)))) (asobject $1))) (fill $0 c2 $3))) (fill $45 c1 $3))) (canvas bgc (__tuple__ $15 $14)))) (backdrop (frozenset (__set__ (__tuple__ $10 $3) (__tuple__ (fn_6 $14) $2)))))) (backdrop (frozenset (__set__ (__tuple__ 0 $4) (__tuple__ $6 $3)))))) (randint (add $4 1) (fn_6 $11)))) (randint 0 (fn_6 $3)))) (randint (add $2 1) (fn_6 $9)))) (randint 0 (fn_6 $1)))) (randint 1 (sub $7 2)))) (getItem $2 $1))) (fn_4 (fn_6 (len $1)) 0 $10 $11))) (getItemWithStep (getItemUpTo $0 (fn_6 $2)) 0 -1 -1))) (getItem $21 $1))) (fn_4 (fn_6 $3) 2 $7 $8))) (interval 0 $2 1)) (__tuple__ bgc c1 c2) (__list__ (sample $4 3))) 0)) (fn_4 $2 3 $5 $6))) (fn_4 $2 3 $4 $5))) (fn_4 30 3 $3 $4))) (fn_4 30 3 $2 $3))) (remove 8 fn_7))))",
    "rewritten": "(lam (lam ((lam ((lam ((lam ((lam ((lam (getItem (__listComp__ ((lam ((lam ((lam ((lam ((lam ((lam ((lam ((lam ((lam ((lam ((lam ((lam ((lam ((lam ((lam ((lam ((lam ((lam ((lam ((lam ((lam ((lam ((lam ((lam ((lam (ifElse (choice (__tuple__ True False)) ((lam ((lam (fn_1 $0 $1)) (dmirror $0))) (dmirror $0)) (fn_1 $66 $65))) (fill $65 8 (shift $1 $5)))) (backdrop (frozenset (__set__ (__tuple__ (add $18 1) (add (max $16 $14) 1)) (__tuple__ (fn_6 $21) (fn_6 (min $15 $13)))))))) (paint $63 $2))) (canvas bgc (__tuple__ $25 $24)))) (shift $0 $1))) (__tuple__ $2 $1))) (randint 0 (sub $21 $19)))) (randint 0 (sub $21 $19)))) (asobject $1))) (fill $0 c2 $3))) (fill $45 c1 $3))) (canvas bgc (__tuple__ $15 $14)))) (backdrop (frozenset (__set__ (__tuple__ $10 $3) (__tuple__ (fn_6 $14) $2)))))) (backdrop (frozenset (__set__ (__tuple__ 0 $4) (__tuple__ $6 $3)))))) (randint (add $4 1) (fn_6 $11)))) (randint 0 (fn_6 $3)))) (randint (add $2 1) (fn_6 $9)))) (randint 0 (fn_6 $1)))) (randint 1 (sub $7 2)))) (getItem $2 $1))) (fn_4 (fn_6 (len $1)) 0 $10 $11))) (getItemWithStep (getItemUpTo $0 (fn_6 $2)) 0 -1 -1))) (getItem $21 $1))) (fn_4 (fn_6 $3) 2 $7 $8))) (interval 0 $2 1)) (__tuple__ bgc c1 c2) (__list__ (sample $4 3))) 0)) (fn_4 $2 3 $5 $6))) (fn_4 $2 3 $4 $5))) (fn_4 30 3 $3 $4))) (fn_4 30 3 $2 $3))) (remove 8 fn_7))))",
    "rewritten_dreamcoder": null,
    "abstractions": [
        {
            "body": "((lam (lam ((lam #2) (next $1 #1)))) __list__ (iter #0))",
            "dreamcoder": "#(lambda (lambda (lambda ((lambda (lambda ((lambda $3) (next $1 $3)))) __list__ (iter $2)))))",
            "arity": 3,
            "name": "fn_9",
            "utility": 50693,
            "final_cost": 5801597,
            "compression_ratio": 1.008808264345145,
            "cumulative_compression_ratio": 1.008808264345145,
            "num_uses": 167,
            "rewritten": null,
            "rewritten_dreamcoder": null,
            "uses": {
                "fn_9 (range $7) $0 (fn_0 $98 $99 (fn_0 $69 $83 (fn_0 $85 $71 (fn_0 $100 $67 (fn_0 $97 $65 (fn_0 $102 $103 (fn_0 $101 $105 (lam (lam (lam (lam (lam (lam (lam (lam (lam (lam (fn_3 (lam (lam (lam (lam (lam (lam (lam (lam (lam (lam (lam (lam (lam (lam (lam (ifElse (isNot $13 $25) ((lam (ifElse (orOp (eq (len $11) 0) (lt $8 2)) ((lam (fn_1 $0 $13)) (dmirror (__tuple__ (tuple $0)))) ((lam (ifElse (eq $0 0) ((lam (fn_1 $0 $14)) (dmirror (__tuple__ (tuple $0)))) ((lam ((lam ((lam ((lam (lam ((lam (fn_0 $115 $116 (lam (lam ((lam (x61 $2 $1)) (x1 (lam (lam (lam (ifElse (isNot $1 $8) ((lam (getItem (__list__ (add_M $11 (choice (totuple (bitAnd (sub $10 $11) (mapply neighbors $11))))) ((lam (x62 $0 $1)) (next $9 $10))) -1)) $122) ((lam ((lam ((lam (ifElse (eq (len $0) 0) ((lam (fn_1 $0 $29)) (dmirror (__tuple__ (tuple $0)))) ((lam ((lam (fn_0 $144 $142 (lam (lam (lam ((lam (x76 $3 $2 $1)) (x1 (lam (lam (lam (lam (ifElse (andOp None (lt $1 $55)) ((lam ((lam ((lam (x77 $2 $0 $1)) (add $0 1))) (issubset_M (shift $14 $1) $39))) (choice (totuple $38))) (ifElse $150 ((lam ((lam (getItem (__list__ (append_M $140 $0) ((lam ((lam ((lam (x34 $0 $3 $1 $2 $31 $154 $30 $4 $27 $15 $17 $29 $156 $155)) (next $56 $57))) (fill $0 $2 $3))) (sub (sub $0 $2) (mapply neighbors $2)))) -1)) (choice $62))) (shift $13 $150)) ((lam (x34 $0 $154 $156 $155 $27 $150 $26 $153 $23 $11 $13 $25 $152 $151)) (next $52 $53))))))))))))) (ifElse (elem (__str__ $143) dir) $143 None))) 0)) (choice (totuple $1))))) (sfilter $144 (lam (andOp (lte (getItem $0 0) (sub $54 (height $3))) (lte (getItem $0 1) (sub $53 (width $3)))))))) False)) (normalize $0)))))))))))) (next $1 $2)))) __list__ (iter (range (fn_6 $4))))) (remove $2 $34))) (__set__ $1))) (choice (totuple $32))))) (fn_4 (fn_6 $0) (sub $34 $1) $40 $41)))) $131) ((lam (fn_1 $0 $129)) (dmirror (__tuple__ (tuple $0)))))))))))))))))))) (x33 $9 $8 $7 $6 $5 $4 $3 $2 $1 $0)))))))))))))))))))": "((lam (lam ((lam (fn_0 $101 $102 (fn_0 $72 $86 (fn_0 $88 $74 (fn_0 $103 $70 (fn_0 $100 $68 (fn_0 $105 $106 (fn_0 $104 $108 (lam (lam (lam (lam (lam (lam (lam (lam (lam (lam (fn_3 (lam (lam (lam (lam (lam (lam (lam (lam (lam (lam (lam (lam (lam (lam (lam (ifElse (isNot $13 $28) ((lam (ifElse (orOp (eq (len $11) 0) (lt $8 2)) ((lam (fn_1 $0 $13)) (dmirror (__tuple__ (tuple $0)))) ((lam (ifElse (eq $0 0) ((lam (fn_1 $0 $14)) (dmirror (__tuple__ (tuple $0)))) ((lam ((lam ((lam ((lam (lam ((lam (fn_0 $118 $119 (lam (lam ((lam (x61 $2 $1)) (x1 (lam (lam (lam (ifElse (isNot $1 $8) ((lam (getItem (__list__ (add_M $11 (choice (totuple (bitAnd (sub $10 $11) (mapply neighbors $11))))) ((lam (x62 $0 $1)) (next $9 $10))) -1)) $125) ((lam ((lam ((lam (ifElse (eq (len $0) 0) ((lam (fn_1 $0 $29)) (dmirror (__tuple__ (tuple $0)))) ((lam ((lam (fn_0 $147 $145 (lam (lam (lam ((lam (x76 $3 $2 $1)) (x1 (lam (lam (lam (lam (ifElse (andOp None (lt $1 $58)) ((lam ((lam ((lam (x77 $2 $0 $1)) (add $0 1))) (issubset_M (shift $14 $1) $39))) (choice (totuple $38))) (ifElse $153 ((lam ((lam (getItem (__list__ (append_M $143 $0) ((lam ((lam ((lam (x34 $0 $3 $1 $2 $31 $157 $30 $4 $27 $15 $17 $29 $159 $158)) (next $59 $60))) (fill $0 $2 $3))) (sub (sub $0 $2) (mapply neighbors $2)))) -1)) (choice $65))) (shift $13 $153)) ((lam (x34 $0 $157 $159 $158 $27 $153 $26 $156 $23 $11 $13 $25 $155 $154)) (next $55 $56))))))))))))) (ifElse (elem (__str__ $146) dir) $146 None))) 0)) (choice (totuple $1))))) (sfilter $147 (lam (andOp (lte (getItem $0 0) (sub $57 (height $3))) (lte (getItem $0 1) (sub $56 (width $3)))))))) False)) (normalize $0)))))))))))) (next $1 $2)))) __list__ (iter (range (fn_6 $4))))) (remove $2 $37))) (__set__ $1))) (choice (totuple $35))))) (fn_4 (fn_6 $0) (sub $37 $1) $43 $44)))) $134) ((lam (fn_1 $0 $132)) (dmirror (__tuple__ (tuple $0)))))))))))))))))))) (x33 $9 $8 $7 $6 $5 $4 $3 $2 $1 $0)))))))))))))))))))) (next $1 $2)))) __list__ (iter (range $7)))"
            },
            "dc_comparison_millis": null
        }
    ]
}